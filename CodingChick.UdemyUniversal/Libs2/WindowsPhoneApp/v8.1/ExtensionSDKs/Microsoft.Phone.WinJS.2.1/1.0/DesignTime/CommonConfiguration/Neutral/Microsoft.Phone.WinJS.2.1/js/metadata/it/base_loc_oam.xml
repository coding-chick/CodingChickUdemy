<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.PromiseStateMachine.cancel">Tenta di annullare l'acquisizione di un valore suggerito. Se il suggerimento non è già stato acquisito e l'annullamento è supportato, il suggerimento assume lo stato di errore con valore Error ("Canceled").</msg>
  <msg name="WinJS.PromiseStateMachine.done">Consente di specificare il lavoro da eseguire sull'acquisizione del valore suggerito, la gestione degli errori da eseguire se il suggerimento non fornisce un valore e la gestione delle notifiche dello stato di avanzamento. Al termine dell'esecuzione dei gestori, questa funzione genera qualsiasi errore che sarebbe stato restituito da then() come suggerimento nello stato di errore.</msg>
  <msg name="WinJS.PromiseStateMachine.done_p:onComplete">Funzione da chiamare se il suggerimento viene acquisito correttamente con un valore. Il valore acquisito viene passato come argomento singolo. Se il valore è null, viene restituito il valore acquisito. Il valore restituito dalla funzione diventa il valore acquisito del suggerimento restituito da then(). Se viene generata un'eccezione durante l'esecuzione della funzione, il suggerimento restituito da then() assume lo stato di errore.</msg>
  <msg name="WinJS.PromiseStateMachine.done_p:onError">Funzione da chiamare se il suggerimento viene acquisito con un errore. L'errore viene passato come argomento singolo. Se è null, l'errore viene inoltrato. Il valore restituito dalla funzione è il valore acquisito del suggerimento restituito da then().</msg>
  <msg name="WinJS.PromiseStateMachine.done_p:onProgress">funzione da chiamare in caso di avanzamento del suggerimento. I dati relativi allo stato di avanzamento vengono passati come argomento singolo. Non è necessario che i suggerimenti supportino lo stato di avanzamento.</msg>
  <msg name="WinJS.PromiseStateMachine.then">Consente di specificare il lavoro da eseguire sull'acquisizione del valore suggerito, la gestione degli errori da eseguire se il suggerimento non fornisce un valore e la gestione delle notifiche dello stato di avanzamento.</msg>
  <msg name="WinJS.PromiseStateMachine.then_p:onComplete">Funzione da chiamare se il suggerimento viene acquisito correttamente con un valore. Il valore viene passato come argomento singolo. Se il valore è null, viene restituito il valore. Il valore restituito dalla funzione diventa il valore acquisito del suggerimento restituito da then(). Se viene generata un'eccezione durante l'esecuzione della funzione, il suggerimento restituito da then() assume lo stato di errore.</msg>
  <msg name="WinJS.PromiseStateMachine.then_p:onError">Funzione da chiamare se il suggerimento viene acquisito con un errore. L'errore viene passato come argomento singolo. Se è null, l'errore viene inoltrato. Il valore restituito dalla funzione diventa il valore acquisito del suggerimento restituito da then().</msg>
  <msg name="WinJS.PromiseStateMachine.then_p:onProgress">Funzione da chiamare in caso di avanzamento del suggerimento. I dati relativi allo stato di avanzamento vengono passati come argomento singolo. Non è necessario che i suggerimenti supportino lo stato di avanzamento.</msg>
  <msg name="WinJS.PromiseStateMachine.then_returnValue">Suggerimento il cui valore è il risultato dell'esecuzione della funzione di errore o completa.</msg>
  <msg name="WinJS.Promise">Un suggerimento fornisce un meccanismo per pianificare il lavoro da eseguire su un valore che non è ancora stato calcolato. È un'astrazione utile per gestire le interazioni con le API asincrone.</msg>
  <msg name="WinJS.Promise_p:init">Funzione che viene chiamata durante la costruzione del suggerimento. Alla funzione vengono assegnati tre argomenti (complete, error, progress). All'interno di questa funzione è necessario aggiungere listener di eventi per le notifiche supportate da questo valore.</msg>
  <msg name="WinJS.Promise_p:oncancel">Funzione da chiamare se un utente di questo suggerimento desidera annullare il lavoro non eseguito. Non è necessario che i suggerimenti supportino l'annullamento.</msg>
  <msg name="WinJS.Promise.addEventListener">Aggiunge un listener di eventi al controllo.</msg>
  <msg name="WinJS.Promise.addEventListener_p:eventType">Tipo (nome) dell'evento.</msg>
  <msg name="WinJS.Promise.addEventListener_p:listener">Listener da richiamare quando viene generato l'evento.</msg>
  <msg name="WinJS.Promise.addEventListener_p:capture">Specifica se avviare o meno l'acquisizione.</msg>
  <msg name="WinJS.Promise.any">Restituisce un suggerimento che viene acquisito quando uno dei suggerimenti di input è stato acquisito.</msg>
  <msg name="WinJS.Promise.any_p:values">Matrice che contiene oggetti suggerimento o oggetti i cui valori di proprietà includono oggetti suggerimento.</msg>
  <msg name="WinJS.Promise.any_returnValue">Suggerimento che all'acquisizione restituisce il valore dell'input (complete o error).</msg>
  <msg name="WinJS.Promise.as">Restituisce un suggerimento. Se l'oggetto è già un suggerimento viene restituito. In caso contrario, viene eseguito il wrapping dell'oggetto in un suggerimento.</msg>
  <msg name="WinJS.Promise.as_p:value">Valore da considerare come suggerimento.</msg>
  <msg name="WinJS.Promise.as_returnValue">Suggerimento.</msg>
  <msg name="WinJS.Promise.cancel">Valore del suggerimento annullato, può essere restituito da un gestore di completamento del suggerimento per indicare l'annullamento della catena di suggerimenti.</msg>
  <msg name="WinJS.Promise.dispatchEvent">Genera un evento con le proprietà e del tipo specificati.</msg>
  <msg name="WinJS.Promise.dispatchEvent_p:details">Set di proprietà aggiuntive da associare all'oggetto evento.</msg>
  <msg name="WinJS.Promise.dispatchEvent_returnValue">Specifica se preventDefault è stato chiamato sull'evento.</msg>
  <msg name="WinJS.Promise.is">Determina se un valore acquisisce il contratto del suggerimento.</msg>
  <msg name="WinJS.Promise.is_p:value">Valore che può essere un suggerimento.</msg>
  <msg name="WinJS.Promise.is_returnValue">true se il valore specificato è un suggerimento. In caso contrario false.</msg>
  <msg name="WinJS.Promise.join">Crea un suggerimento che viene acquisito quando tutti i valori vengono acquisiti.</msg>
  <msg name="WinJS.Promise.join_p:values">Oggetto i cui campi contengono valori, alcuni dei quali possono essere suggerimenti.</msg>
  <msg name="WinJS.Promise.join_returnValue">Suggerimento il cui valore è un oggetto con nomi di campi equivalenti a quelli dell'oggetto nel parametro values, dove ogni valore campo è il valore acquisito di un suggerimento.</msg>
  <msg name="WinJS.Promise.removeEventListener">Rimuove un listener di eventi dal controllo.</msg>
  <msg name="WinJS.Promise.removeEventListener_listener">Il listener da rimuovere.</msg>
  <msg name="WinJS.Promise.then">Versione statica del metodo di istanza del suggerimento then().</msg>
  <msg name="WinJS.Promise.then_p:value">valore da considerare come suggerimento.</msg>
  <msg name="WinJS.Promise.then_p:complete">Funzione da chiamare se il suggerimento viene acquisito con un valore. Se è null, il suggerimento restituisce semplicemente il valore. Il valore viene passato come argomento singolo.</msg>
  <msg name="WinJS.Promise.then_p:error">Funzione da chiamare se il suggerimento viene acquisito con un errore. L'errore viene passato come argomento singolo.</msg>
  <msg name="WinJS.Promise.then_returnValue">Suggerimento il cui valore è il risultato dell'esecuzione della funzione completa specificata.</msg>
  <msg name="WinJS.Promise.thenEach">Esegue un'operazione su tutti i suggerimenti di input e restituisce un suggerimento avente la forma dell'input e contiene il risultato dell'operazione che è stata eseguita su ogni input.</msg>
  <msg name="WinJS.Promise.thenEach_p:values">Set di valori (che può essere una matrice o un oggetto) di cui alcuni o tutti sono suggerimenti.</msg>
  <msg name="WinJS.Promise.thenEach_p:complete">Funzione da chiamare se il suggerimento viene acquisito con un valore. Se il valore è null, il suggerimento restituisce il valore. Il valore viene passato come argomento singolo.</msg>
  <msg name="WinJS.Promise.thenEach_returnValue">Suggerimento che è il risultato della chiamata a Promise.join sul parametro values.</msg>
  <msg name="WinJS.Promise.timeout">Crea un suggerimento che viene acquisito dopo un timeout.</msg>
  <msg name="WinJS.Promise.timeout_p:timeout">Periodo di timeout, in millisecondi. Se questo valore è zero o non è specificato, viene chiamato setImmediate. In caso contrario, viene chiamato setTimeout.</msg>
  <msg name="WinJS.Promise.timeout_p:promise">Suggerimento che verrà annullato se non viene completato prima della scadenza del timeout.</msg>
  <msg name="WinJS.Promise.timeout_returnValue">Suggerimento che viene completato in modo asincrono dopo il timeout specificato.</msg>
  <msg name="WinJS.Promise.wrap">Esegue il wrapping di un valore non suggerimento in un suggerimento. È possibile utilizzare questa funzione per passare un valore a una funzione che richiede un suggerimento.</msg>
  <msg name="WinJS.Promise.wrap_p:value">Valore non suggerimento di cui eseguire il wrapping in un suggerimento.</msg>
  <msg name="WinJS.Promise.wrap_returnValue">Suggerimento che viene acquisito correttamente con il valore specificato</msg>
  <msg name="WinJS.Promise.wrapError">Esegue il wrapping di un valore di errore non suggerimento in un suggerimento. È possibile utilizzare questa funzione per passare un errore a una funzione che richiede un suggerimento.</msg>
  <msg name="WinJS.Promise.wrapError_p:error">Valore di errore non suggerimento di cui eseguire il wrapping in un suggerimento.</msg>
  <msg name="WinJS.Promise.wrapError_returnValue">Suggerimento che si trova in uno stato di errore con il valore specificato.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.completed">Ottiene un valore che indica l'eventuale completamento del processo. Questo valore è true se il processo è in esecuzione di completamento e false se non è ancora in esecuzione o è stato annullato.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.id">Ottiene l'identificatore univoco di questo processo.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.name">Ottiene o imposta una stringa che specifica il nome di diagnostica per il processo.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.owner">Ottiene un token proprietario per questo processo. È possibile utilizzare questo metodo di cancelAll del token proprietario per annullare i processi correlati.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.priority">Ottiene o imposta la priorità a cui questo processo viene eseguito dall'utilità di pianificazione.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.cancel">Annulla il processo.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.pause">Mette in pausa il processo.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobNode.resume">Riprende il processo se è stato messo in pausa.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobInfo.job">L'istanza di processo per cui il lavoro attualmente viene eseguito.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobInfo.shouldYield">Valore booleano che diventerà true quando l'elemento di lavoro viene richiesto per risultare in modo cooperativo dall'utilità di pianificazione.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobInfo.setPromise">Chiamato quando l'elemento di lavoro è bloccato sul lavoro asincrono. L'utilità di pianificazione attende che venga completato il suggerimento specificato prima del rinvio del processo.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobInfo.setPromise_p:promise">Un valore di suggerimento che, una volta completato, offre una funzione di elemento di lavoro da rinviare.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobInfo.setWork">Chiamato quando l'elemento di lavoro sta risultando in modo cooperativo sull'utilità di pianificazione e contiene più lavoro da completare in futuro. Utilizzare questo metodo per pianificare il lavoro aggiuntivo per quando l'elemento di lavoro sta per risultare.</msg>
  <msg name="WinJS.Utilities.Scheduler._JobInfo.setWork_p:work">La funzione lavoro che verrà rinviata.</msg>
  <msg name="WinJS.Utilities.Scheduler._OwnerToken.cancelAll">Annulla tutti i processi associati a questo token proprietario.</msg>
  <msg name="WinJS.ErrorFromName">Crea un oggetto Error con le proprietà name e message specificate.</msg>
  <msg name="WinJS.ErrorFromName_p:name">Nome di questo errore. Il nome verrà utilizzato a livello di codice e non deve essere localizzato.</msg>
  <msg name="WinJS.ErrorFromName_p:message">Messaggio per questo errore. Il messaggio verrà utilizzato dagli utenti e deve essere localizzato.</msg>
  <msg name="WinJS.ErrorFromName_returnValue">Istanza dell'errore con le proprietà .message e .name popolate</msg>
  <msg name="WinJS.Utilities.QueryCollection">Rappresenta il risultato di un selettore di query e consente l'esecuzione di diverse operazioni sugli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection_p:items">Elementi risultanti dalla query.</msg>
  <msg name="WinJS.Utilities.QueryCollection.forEach">Esegue un'azione su ogni elemento in QueryCollection</msg>
  <msg name="WinJS.Utilities.QueryCollection.forEach_p:callbackFn">Azione da eseguire su ogni elemento.</msg>
  <msg name="WinJS.Utilities.QueryCollection.forEach_p:thisArg">Argomento da associare a callbackFn</msg>
  <msg name="WinJS.Utilities.QueryCollection.forEach_returnValue">Restituisce QueryCollection</msg>
  <msg name="WinJS.Utilities.QueryCollection.get">Ottiene un elemento da QueryCollection.</msg>
  <msg name="WinJS.Utilities.QueryCollection.get_p:index">L'indice dell'elemento da restituire.</msg>
  <msg name="WinJS.Utilities.QueryCollection.get_returnValue">Singolo elemento della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setAttribute">Imposta un valore di attributo su tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setAttribute_p:name">Nome dell'attributo da impostare.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setAttribute_p:value">Valore dell'attributo da impostare.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setAttribute_returnValue">Oggetto QueryCollection.</msg>
  <msg name="WinJS.Utilities.QueryCollection.getAttribute">Ottiene un valore di attributo dal primo elemento della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.getAttribute_p:name">Nome dell'attributo.</msg>
  <msg name="WinJS.Utilities.QueryCollection.getAttribute_returnValue">Valore dell'attributo.</msg>
  <msg name="WinJS.Utilities.QueryCollection.addClass">Aggiunge la classe specificata a tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.addClass_p:name">Nome della classe da aggiungere.</msg>
  <msg name="WinJS.Utilities.QueryCollection.hasClass">Determina se la classe specificata esiste sul primo elemento della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.hasClass_p:name">Nome della classe.</msg>
  <msg name="WinJS.Utilities.QueryCollection.hasClass_returnValue">true se l'elemento presenta la classe specificata. In caso contrario, false.</msg>
  <msg name="WinJS.Utilities.QueryCollection.removeClass">Rimuove la classe specificata da tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.removeClass_p:name">Nome della classe da rimuovere.</msg>
  <msg name="WinJS.Utilities.QueryCollection.toggleClass">Attiva e disattiva (aggiunge o rimuove) la classe specificata su tutti gli elementi della raccolta. Se la classe è presente, viene eliminata. Se non è presente, viene aggiunta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.toggleClass_p:name">Nome della classe da attivare/disattivare.</msg>
  <msg name="WinJS.Utilities.QueryCollection.listen">Registra il listener per l'evento specificato su tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.listen_p:eventType">nome dell'evento.</msg>
  <msg name="WinJS.Utilities.QueryCollection.listen_p:listener">Funzione del gestore eventi da chiamare quando si verifica l'evento.</msg>
  <msg name="WinJS.Utilities.QueryCollection.listen_p:capture">true se capture == true deve essere passato ad addEventListener. In caso contrario, false.</msg>
  <msg name="WinJS.Utilities.QueryCollection.removeEventListener">Annulla la registrazione del listener per l'evento specificato su tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.removeEventListener_p:listener">Funzione del gestore eventi.</msg>
  <msg name="WinJS.Utilities.QueryCollection.removeEventListener_p:capture">true se capture == true. In caso contrario, false.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setStyle">Imposta la proprietà style specificata per tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setStyle_p:name">Nome della proprietà dello stile.</msg>
  <msg name="WinJS.Utilities.QueryCollection.setStyle_p:value">Valore della proprietà.</msg>
  <msg name="WinJS.Utilities.QueryCollection.clearStyle">Cancella la proprietà style specificata per tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.clearStyle_p:name">Nome della proprietà style da cancellare.</msg>
  <msg name="WinJS.Utilities.QueryCollection.query">Esegue un selettore di query su tutti gli elementi della raccolta e aggrega il risultato in QueryCollection.</msg>
  <msg name="WinJS.Utilities.QueryCollection.query_p:query">Stringa del selettore di query.</msg>
  <msg name="WinJS.Utilities.QueryCollection.query_returnValue">Oggetto QueryCollection contenente i risultati aggregati dell'esecuzione della query su tutti gli elementi della raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.include">Aggiunge un set di elementi a QueryCollection.</msg>
  <msg name="WinJS.Utilities.QueryCollection.include_p:items">Elementi da aggiungere a QueryCollection. Può trattarsi di un oggetto di tipo matrice, di un frammento di documento o di un singolo elemento.</msg>
  <msg name="WinJS.Utilities.QueryCollection.control">Crea controlli collegati agli elementi di QueryCollection.</msg>
  <msg name="WinJS.Utilities.QueryCollection.control_p:ctor">Funzione del costruttore utilizzata per creare controlli da collegare agli elementi.</msg>
  <msg name="WinJS.Utilities.QueryCollection.control_p:options">Opzioni passate ai controlli appena creati.</msg>
  <msg name="WinJS.Utilities.QueryCollection.control2">Configura i controlli collegati agli elementi di QueryCollection.</msg>
  <msg name="WinJS.Utilities.QueryCollection.control_p:ctor2">Opzioni passate ai controlli.</msg>
  <msg name="WinJS.UI.HtmlControl">Consente di includere in modo dinamico una pagina HTML.</msg>
  <msg name="WinJS.UI.HtmlControl_name">HtmlControl</msg>
  <msg name="WinJS.UI.HtmlControl.constructor">Inizializza una nuova istanza di HtmlControl per definire un nuovo controllo pagina.</msg>
  <msg name="WinJS.UI.HtmlControl.constructor_p:element">Elemento che ospita HtmlControl.</msg>
  <msg name="WinJS.UI.HtmlControl.constructor_p:options">Opzioni per la configurazione della pagina. L'opzione URI è necessaria per specificare il documento di origine per il contenuto della pagina.</msg>
  <msg name="WinJS.UI.TabContainer.constructor">Costruisce TabContainer.</msg>
  <msg name="WinJS.UI.TabContainer.constructor_p:element">Elemento DOM da associare a TabContainer.</msg>
  <msg name="WinJS.UI.TabContainer.constructor_p:options">Set di opzioni da applicare inizialmente a TabContainer.</msg>
  <msg name="WinJS.UI.TabContainer.constructor_returnValue">TabContainer costruito.</msg>
  <msg name="WinJS.UI.TabContainer.dispose">Eliminare il contenitore di scheda.</msg>
  <msg name="WinJS.UI.TabContainer.childFocus">Ottiene o imposta l'elemento figlio con lo stato attivo.</msg>
  <msg name="WinJS.UI.TabContainer.tabIndex">Ottiene o imposta l'ordine di tabulazione del controllo all'interno del relativo contenitore.</msg>
  <msg name="WinJS.Application.IOHelper.exists">Determina se il file specificato esiste nel contenitore</msg>
  <msg name="WinJS.Application.IOHelper.exists_p:fileName">File che può esistere in questa cartella</msg>
  <msg name="WinJS.Application.IOHelper.exists_returnValue">Suggerimento con true (file esistente) o false.</msg>
  <msg name="WinJS.Application.IOHelper.remove">Elimina un file nel contenitore</msg>
  <msg name="WinJS.Application.IOHelper.remove_p:fileName">File da eliminare</msg>
  <msg name="WinJS.Application.IOHelper.remove_returnValue">Suggerimento che viene acquisito quando il file è stato eliminato</msg>
  <msg name="WinJS.Application.IOHelper.writeText">Scrive un file nel contenitore con il testo specificato</msg>
  <msg name="WinJS.Application.IOHelper.writeText_p:fileName">File in cui scrivere</msg>
  <msg name="WinJS.Application.IOHelper.writeText_p:str">Contenuto da scrivere nel file</msg>
  <msg name="WinJS.Application.IOHelper.writeText_returnValue">Suggerimento con il numero di caratteri scritti</msg>
  <msg name="WinJS.Application.IOHelper.readText">Legge il contenuto di un file dal contenitore, se il file non esiste, viene restituito def.</msg>
  <msg name="WinJS.Application.IOHelper.readText_p:fileName">File da cui leggere</msg>
  <msg name="WinJS.Application.IOHelper.readText_p:def">Valore predefinito da restituire se il file non viene aperto</msg>
  <msg name="WinJS.Application.IOHelper.readText_returnValue">Suggerimento contenente il contenuto del file o def.</msg>
  <msg name="WinJS.Application.InMemoryHelper.exists_p:fileName">Nome file che può esistere in questa cartella</msg>
  <msg name="WinJS.Application.InMemoryHelper.remove">Elimina un file nel contenitore</msg>
  <msg name="WinJS.Application.InMemoryHelper.writeText_p:fileName">Nome file in cui scrivere</msg>
  <msg name="WinJS.Application.InMemoryHelper.readText_p:fileName">Nome file da cui leggere</msg>
  <msg name="WinJS.Binding.observableMixin.bind">Collega l'azione specificata alla proprietà specificata nel parametro name. Questa funzione viene richiamata quando il valore della proprietà viene modificato. Non è garantito che l'azione venga chiamata solo quando un valore è stato effettivamente modificato, né che l'azione venga chiamata per ogni modifica del valore. L'implementazione di questa funzione riunisce le notifiche delle modifiche, in modo che più aggiornamenti al valore di una proprietà causino una sola chiamata all'azione specificata.</msg>
  <msg name="WinJS.Binding.observableMixin.bind_p:name">Nome della proprietà a cui associare l'azione.</msg>
  <msg name="WinJS.Binding.observableMixin.bind_p:action">Funzione da richiamare in modo asincrono quando la proprietà viene modificata.</msg>
  <msg name="WinJS.Binding.observableMixin.bind_returnValue">Viene restituito questo oggetto.</msg>
  <msg name="WinJS.Binding.Template.constructor">Crea un modello che fornisce un elemento di associazione dichiarativo riutilizzabile.</msg>
  <msg name="WinJS.Binding.Template.constructor_p:element">Elemento DOM da convertire in un modello.</msg>
  <msg name="WinJS.Binding.Template.constructor_p:options">Se questo parametro viene fornito, il modello viene caricato dall'URI e il contenuto del parametro dell'elemento viene ignorato.</msg>
  <msg name="WinJS.Binding.Template.bindingInitializer">Se specificato questa funzione viene utilizzata come l'inizializzatore predefinito per tutte le associazioni dati che non specificano esplicitamente una. La funzione fornita deve essere contrassegnata come di supporto per l'elaborazione.</msg>
  <msg name="WinJS.Binding.Template.debugBreakOnRender">Indica se i modelli devono interrompersi nel debugger sul primo rendering</msg>
  <msg name="WinJS.Binding.Template.disableOptimizedProcessing">Impostare questa proprietà su true per ripristinare l'elaborazione di modello classica e per l'associazione dati e disabilitare la compilazione del modello.</msg>
  <msg name="WinJS.Binding.Template.element">Ottiene l'elemento DOM utilizzato come modello.</msg>
  <msg name="WinJS.Binding.Template.extractChild">Restituisce il primo figlio dell'elemento del modello anziché un elemento wrapper che ospita il contenuto del modello.</msg>
  <msg name="WinJS.Binding.Template.processTimeout">Numero di millisecondi in base a cui ritardare la creazione di istanze dei controlli dichiarativi. Zero (0) restituisce nessun ritardo, un numero negativo qualsiasi restituisce un ritardo setImmediate e un numero positivo qualsiasi viene considerato come numero di millisecondi.</msg>
  <msg name="WinJS.Binding.Template.render">Associa valori tra il contesto dati specificato e gli elementi discendenti dell'elemento radice specificato con gli attributi di associazione dichiarativa (data-win-bind).</msg>
  <msg name="WinJS.Binding.Template.render_p:dataContext">Oggetto da utilizzare per l'associazione dati predefinita.</msg>
  <msg name="WinJS.Binding.Template.render_p:container">Elemento a cui aggiungere questo modello di cui è stato eseguito il rendering. Se questo parametro viene omesso, viene creato un nuovo elemento DIV.</msg>
  <msg name="WinJS.Binding.Template.render_returnValue">Suggerimento completato al termine dell'associazione. Il valore è l'elemento specificato nel parametro del contenitore o l'elemento DIV creato.</msg>
  <msg name="WinJS.Binding.Template.renderItem">Esegue il rendering di un'istanza di questo modello associato ai dati contenuti nell'elemento. Se il parametro riciclato è presente e enableRecycling è true, il modello tenta di riutilizzare gli elementi DOM dal parametro riciclato.</msg>
  <msg name="WinJS.Binding.Template.renderItem_p:item">Oggetto che contiene i dati a cui eseguire l'associazione. Solo item.data è obbligatorio.</msg>
  <msg name="WinJS.Binding.Template.renderItem_p:recycled">Istanza del modello generata in precedenza.</msg>
  <msg name="WinJS.Binding.Template.renderItem_returnValue">Elemento DOM.</msg>
  <msg name="WinJS.Binding.Template">Fornisce un elemento di associazione dichiarativo riutilizzabile.</msg>
  <msg name="WinJS.Binding.Template_name">Modello</msg>
  <msg name="WinJS.Binding.List.constructor">Crea un oggetto WinJS.Binding.List.</msg>
  <msg name="WinJS.Binding.List.constructor_p:list">Matrice che contiene gli elementi necessari per inizializzare l'elenco.</msg>
  <msg name="WinJS.Binding.List.constructor_p:options">Se options.binding è true, l'elenco conterrà il risultato della chiamata a WinJS.Binding.as() sui valori degli elementi. Se options.proxy è true, l'elenco specificato come primo parametro viene utilizzato come spazio di archiviazione per WinJS.Binding.List. Questa opzione deve essere utilizzata con cautela perché le modifiche non coordinate all'archivio dati generano errori.</msg>
  <msg name="WinJS.Binding.List.constructor_returnValue">Istanza appena costruita di WinJS.Binding.List.</msg>
  <msg name="WinJS.Binding.List.length">Ottiene o imposta la lunghezza dell'elenco, ovvero un valore Integer incrementato di uno rispetto all'elemento più elevato definito nell'elenco.</msg>
  <msg name="WinJS.Binding.List.getItem">Ottiene una coppia di dati/chiavi per l'indice dell'elenco specificato.</msg>
  <msg name="WinJS.Binding.List.getItem_p:index">Indice del valore da recuperare.</msg>
  <msg name="WinJS.Binding.List.getItem_returnValue">Oggetto con le proprietà .key e .data.</msg>
  <msg name="WinJS.Binding.List.getItemFromKey">Ottiene una coppia di dati/chiavi per la chiave dell'elemento dell'elenco specificata.</msg>
  <msg name="WinJS.Binding.List.getItemFromKey_p:key">Chiave del valore da recuperare.</msg>
  <msg name="WinJS.Binding.List.indexOfKey">Ottiene l'indice della prima occorrenza di una chiave in un elenco.</msg>
  <msg name="WinJS.Binding.List.indexOfKey_p:key">Chiave da individuare nell'elenco.</msg>
  <msg name="WinJS.Binding.List.indexOfKey_returnValue">Indice della prima occorrenza di una chiave in un elenco o -1 se non viene trovata.</msg>
  <msg name="WinJS.Binding.List.move">Sposta il valore in corrispondenza dell'indice nella posizione specificata.</msg>
  <msg name="WinJS.Binding.List.move_p:index">Indice originale del valore.</msg>
  <msg name="WinJS.Binding.List.move_p:newIndex">Indice del valore dopo lo spostamento.</msg>
  <msg name="WinJS.Binding.List.notifyMutated">Forza l'elenco a inviare una notifica modificata a qualsiasi listener per il valore in corrispondenza dell'indice specificato.</msg>
  <msg name="WinJS.Binding.List.notifyMutated_p:index">Indice del valore modificato.</msg>
  <msg name="WinJS.Binding.List.setAt">Sostituisce il valore in corrispondenza dell'indice specificato con un nuovo valore.</msg>
  <msg name="WinJS.Binding.List.setAt_p:index">Indice del valore sostituito.</msg>
  <msg name="WinJS.Binding.List.setAt_p:newValue">Nuovo valore.</msg>
  <msg name="WinJS.Binding.List.reverse">Restituisce un elenco con gli elementi invertiti. Mediante questo metodo si invertono gli elementi di un oggetto elenco esistente. Durante l'esecuzione non viene creato un nuovo oggetto elenco.</msg>
  <msg name="WinJS.Binding.List.reverse_returnValue">Elenco invertito.</msg>
  <msg name="WinJS.Binding.List.sort">Restituisce un elenco con gli elementi ordinati. Mediante questo metodo si ordinano gli elementi di un oggetto elenco esistente. Durante l'esecuzione non viene creato un nuovo oggetto elenco.</msg>
  <msg name="WinJS.Binding.List.sort_p:sortFunction">Funzione utilizzata per determinare l'ordine degli elementi. Se omessa, gli elementi vengono disposti nell'ordine dei caratteri ASCII crescente.</msg>
  <msg name="WinJS.Binding.List.sort_returnValue">Elenco ordinato.</msg>
  <msg name="WinJS.Binding.List.pop">Rimuove l'ultimo elemento da un elenco e lo restituisce.</msg>
  <msg name="WinJS.Binding.List.pop_returnValue">Ultimo elemento dall'elenco.</msg>
  <msg name="WinJS.Binding.List.push">Aggiunge nuovi elementi a un elenco e restituisce la nuova lunghezza dell'elenco.</msg>
  <msg name="WinJS.Binding.List.push_p:value">Elemento da inserire alla fine dell'elenco.</msg>
  <msg name="WinJS.Binding.List.push_returnValue">Nuova lunghezza dell'elenco.</msg>
  <msg name="WinJS.Binding.List.shift">Rimuove il primo elemento da un elenco e lo restituisce.</msg>
  <msg name="WinJS.Binding.List.shift_returnValue">Primo elemento dall'elenco.</msg>
  <msg name="WinJS.Binding.List.unshift_p:value">Elemento da inserire all'inizio dell'elenco.</msg>
  <msg name="WinJS.Binding.List.splice">Rimuove elementi da un elenco e, se necessario, ne inserisce di nuovi restituendo quelli eliminati.</msg>
  <msg name="WinJS.Binding.List.splice_p:start">Posizione in base zero nell'elenco da cui iniziare la rimozione degli elementi.</msg>
  <msg name="WinJS.Binding.List.splice_p:howMany">Numero di elementi da rimuovere.</msg>
  <msg name="WinJS.Binding.List.splice_p:item">Elementi da inserire nell'elenco in sostituzione di quelli eliminati.</msg>
  <msg name="WinJS.Binding.List.splice_returnValue">Elementi eliminati.</msg>
  <msg name="WinJS.Namespace.defineWithParent">Definisce un nuovo spazio dei nomi con il nome specificato nello spazio dei nomi padre specificato.</msg>
  <msg name="WinJS.Namespace.defineWithParent_p:parentNamespace">Spazio dei nomi padre.</msg>
  <msg name="WinJS.Namespace.defineWithParent_p:name">Nome del nuovo spazio dei nomi.</msg>
  <msg name="WinJS.Namespace.defineWithParent_p:members">Membri del nuovo spazio dei nomi.</msg>
  <msg name="WinJS.Namespace.defineWithParent_returnValue">Spazio dei nomi appena definito.</msg>
  <msg name="WinJS.Namespace.define">Definisce un nuovo spazio dei nomi con il nome specificato.</msg>
  <msg name="WinJS.Namespace.define_p:name">Nome dello spazio dei nomi. Potrebbe trattarsi di un nome separato da punti per gli spazi dei nomi annidati.</msg>
  <msg name="WinJS.Class.define">Definisce una classe che utilizza il costruttore e i membri di istanza specificati.</msg>
  <msg name="WinJS.Class.define_p:constructor">Funzione del costruttore utilizzata per creare un'istanza di questa classe.</msg>
  <msg name="WinJS.Class.define_p:instanceMembers">Set di campi, proprietà e metodi di istanza resi disponibili sulla classe.</msg>
  <msg name="WinJS.Class.define_p:staticMembers">Set di metodi, proprietà e campi statici resi disponibili sulla classe.</msg>
  <msg name="WinJS.Class.define_returnValue">Classe appena definita.</msg>
  <msg name="WinJS.Class.derive">Crea una sottoclasse in base al parametro baseClass specificato, usando l'ereditarietà dei prototipi.</msg>
  <msg name="WinJS.Class.derive_p:baseClass">Classe da cui ereditare.</msg>
  <msg name="WinJS.Class.derive_p:instanceMembers">Set di campi, proprietà e metodi di istanza da rendere disponibili sulla classe.</msg>
  <msg name="WinJS.Class.derive_p:staticMembers">Set di metodi, proprietà e campi statici da rendere disponibili sulla classe.</msg>
  <msg name="WinJS.Class.mix">Definisce una classe utilizzando il costruttore specificato e l'unione del set di membri di istanza specificato da tutti gli oggetti mixin. L'elenco di parametri mixin è di lunghezza variabile.</msg>
  <msg name="WinJS.Utilities.hasWinRT">Determinare se WinRT è accessibile in questo contesto di script.</msg>
  <msg name="WinJS.Utilities.getMember">Ottiene lo spazio dei nomi o il tipo a livello foglia specificato dal parametro name.</msg>
  <msg name="WinJS.Utilities.getMember_p:name">Nome del membro.</msg>
  <msg name="WinJS.Utilities.getMember_p:root">Radice da cui iniziare. Per impostazione predefinita è l'oggetto globale.</msg>
  <msg name="WinJS.Utilities.getMember_returnValue">Spazio dei nomi o tipo a livello foglia nello spazio dei nomi padre specificato.</msg>
  <msg name="WinJS.Utilities.ready">Assicura che la funzione specificata venga eseguita solo dopo la generazione dell'evento DOMContentLoaded per la pagina corrente.</msg>
  <msg name="WinJS.Utilities.ready_returnValue">Suggerimento che viene completato dopo la generazione dell'evento DOMContentLoaded.</msg>
  <msg name="WinJS.Utilities.ready_p:callback">Funzione che viene eseguita dopo la generazione dell'evento DOMContentLoaded.</msg>
  <msg name="WinJS.Utilities.ready_p:async">Se true, il callback viene eseguito in modo asincrono.</msg>
  <msg name="WinJS.Utilities.strictProcessing">Determina se l'elaborazione dichiarativa ridotta è abilitata in questo contesto di script.</msg>
  <msg name="WinJS.Utilities.markSupportedForProcessing">Contrassegna una funzione come compatibile con l'elaborazione dichiarativa, ad esempio WinJS.UI.processAll o WinJS.Binding.processAll.</msg>
  <msg name="WinJS.Utilities.markSupportedForProcessing_p:func">Funzione da contrassegnare come compatibile con l'elaborazione dichiarativa.</msg>
  <msg name="WinJS.Utilities.markSupportedForProcessing_returnValue">Funzione di input.</msg>
  <msg name="WinJS.Utilities.requireSupportedForProcessing">Indica che il valore è compatibile con l'elaborazione dichiarativa, ad esempio WinJS.UI.processAll o WinJS.Binding.processAll. Se non è compatibile, verrà generata un'eccezione.</msg>
  <msg name="WinJS.Utilities.requireSupportedForProcessing_p:value">Valore di cui testare la compatibilità con l'elaborazione dichiarativa. Se il valore è una funzione deve essere contrassegnato con l'elemento 'supportedForProcessing' di una proprietà impostato su true.</msg>
  <msg name="WinJS.Utilities.requireSupportedForProcessing_returnValue">Valore di input.</msg>
  <msg name="WinJS.strictProcessing">L'elaborazione rigorosa viene sempre applicata. Questo metodo non ha alcun effetto.</msg>
  <msg name="WinJS.Utilities.isPhone">Determinare se l'esecuzione è in corso nel telefono.</msg>
  <msg name="WinJS.Utilities.formatLog">Aggiunge tag e tipo a un messaggio di registrazione.</msg>
  <msg name="WinJS.Utilities.startLog_p:message">Messaggio da formattare.</msg>
  <msg name="WinJS.Utilities.startLog_p:tag">Tag da applicare al messaggio. Separare i singoli tag con spazi.</msg>
  <msg name="WinJS.Utilities.startLog_p:type">Tipo del messaggio.</msg>
  <msg name="WinJS.Utilities.startLog_returnValue">Messaggio formattato.</msg>
  <msg name="WinJS.Utilities.startLog">Configura un logger che scrive messaggi contenenti i tag specificati da WinJS.log a console.log.</msg>
  <msg name="WinJS.Utilities.startLog_p:options">Tag per i messaggi da registrare. Separare i singoli tag con spazi.</msg>
  <msg name="WinJS.Utilities.startLog2">Configurare un logger per scrivere l'output di WinJS.log.</msg>
  <msg name="WinJS.Utilities.startLog_p:options2">Può contenere le proprietà .type, .tags, .excludeTags e .action. - .type è un tag obbligatorio. - .excludeTags è un elenco separato da spazi di tag, ognuno dei quali comporta la mancata registrazione di un messaggio. - .tags è un elenco separato da spazi di tag, ognuno dei quali comporta la registrazione di un messaggio. - .action è una funzione che, se presente, verrà chiamata con il tipo, i tag e il messaggio di registro. Per impostazione predefinita, il registro viene scritto nella console.</msg>
  <msg name="WinJS.Utilities.stopLog">Rimuove il logger impostato in precedenza.</msg>
  <msg name="WinJS.Utilities.createEventProperties">Crea un oggetto che ha una proprietà per ogni nome passato alla funzione.</msg>
  <msg name="WinJS.Utilities.createEventProperties_p:events">Elenco variabile di nomi di proprietà.</msg>
  <msg name="WinJS.Utilities.createEventProperties_returnValue">Oggetto con le proprietà specificate. I nomi delle proprietà hanno il prefisso 'on'.</msg>
  <msg name="WinJS.Utilities.eventMixin.addEventListener_p:useCapture">se true viene avviata l'acquisizione, in caso contrario false.</msg>
  <msg name="WinJS.Utilities.eventMixin.dispatchEvent">Genera un evento del tipo specificato e con le proprietà aggiuntive specificate.</msg>
  <msg name="WinJS.Utilities.eventMixin.dispatchEvent_p:details">Set di proprietà aggiuntive da associare all'oggetto evento quando viene generato l'evento.</msg>
  <msg name="WinJS.Utilities.eventMixin.dispatchEvent_returnValue">true se preventDefault è stato chiamato sull'evento.</msg>
  <msg name="WinJS.Utilities.eventMixin.removeEventListener_p:useCapture">Specifica se avviare l'acquisizione.</msg>
  <msg name="WinJS.Resources.addEventListener">Registra un gestore eventi per l'evento specificato.</msg>
  <msg name="WinJS.Resources.addEventListener_p:type">Il nome dell'evento da gestire.</msg>
  <msg name="WinJS.Resources.addEventListener_p:listener">Listener da richiamare quando viene generato l'evento.</msg>
  <msg name="WinJS.Resources.addEventListener_p:useCapture">Impostare su true per registrare il gestore eventi per la fase di acquisizione. Impostare su false per registrarlo per la fase di bubbling.</msg>
  <msg name="WinJS.Resources.getString">Recupera la stringa di risorsa con l'ID risorsa specificato.</msg>
  <msg name="WinJS.Resources.getString._p:resourceId">ID risorsa della stringa da recuperare.</msg>
  <msg name="WinJS.Resources.getString_returnValue">Oggetto che può contenere queste proprietà: value. Valore della stringa richiesta. Questa proprietà è sempre presente: empty. Valore che specifica se la stringa richiesta non è stata trovata. Se true, la stringa non è stata trovata. Se false o non definito, la stringa richiesta è stata trovata: lang. Linguaggio della stringa, se specificato. Questa proprietà è disponibile solo per le risorse multilingue.</msg>
  <msg name="WinJS.Utilities.Scheduler.retrieveState">Restituisce una rappresentazione di stringa dello stato dell'utilità di pianificazione per scopi diagnostici. I processi e le richieste di svuotamento visualizzati nell'ordine in cui sono attualmente previsti per essere elaborati. Il processo e la richiesta di svuotamento correnti sono contrassegnati da un asterisco.</msg>
  <msg name="WinJS.Utilities.Scheduler.requestDrain">Esegue i processi nell'utilità di pianificazione senza timeslicing fino a che tutti i processi alla priorità specificata e superiore sono stati eseguiti.</msg>
  <msg name="WinJS.Utilities.Scheduler.requestDrain_p:priority">La priorità su cui l'utilità di pianificazione dovrebbe svuotarsi. L'impostazione predefinita è Priority.min, che svuota tutti i processi nella coda.</msg>
  <msg name="WinJS.Utilities.Scheduler.requestDrain_p:name">Una descrizione facoltativa della richiesta di svuotamento per la diagnostica.</msg>
  <msg name="WinJS.Utilities.Scheduler.requestDrain_returnValue">Un suggerimento che viene completato quando termina lo svuotamento. L'annullamento di questo suggerimento annulla la richiesta di svuotamento. Questo suggerimento non inserirà mai uno stato di errore.</msg>
  <msg name="WinJS.Utilities.Scheduler.execHigh">Esegue il callback specificato in un contesto ad alta priorità.</msg>
  <msg name="WinJS.Utilities.Scheduler.execHigh_p:callback">Il callback da eseguire in un contesto ad alta priorità.</msg>
  <msg name="WinJS.Utilities.Scheduler.execHigh_returnValue">Il valore restituito del callback.</msg>
  <msg name="WinJS.Utilities.Scheduler.createOwnerToken">Crea e restituisce un nuovo token proprietario che può essere impostato sulla proprietà del proprietario di uno o più processi. Può essere utilizzato per annullare tutti i processi che "possiede".</msg>
  <msg name="WinJS.Utilities.Scheduler.createOwnerToken_returnValue">Il nuovo token proprietario. È possibile utilizzare il token per controllare i processi che possiede.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedule">Programma la funzione specificata da eseguire in modo asincrono.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedule_p:work">Una funzione che rappresenta l'elemento di lavoro da pianificare. Una volta chiamato, l'elemento di lavoro riceverà come primo argomento un oggetto di JobInfo che consente all'elemento di lavoro di richiedere all'utilità di pianificazione se deve risultare in modo cooperativo e, in caso positivo, consente all'elemento di lavoro di fornire una funzione da eseguire come una continuazione o WinJS.Promise che, una volta completata, fornirà una funzione da eseguire come continuazione.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedule_p:priority">Priorità con cui pianificare l'elemento di lavoro. Il valore predefinito è Priority.normal.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedule_p:thisArg">Un'istanza "this" da associare all'elemento di lavoro. Il valore predefinito è null.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedule_p:name">Un descrizione dell'elemento di lavoro per la diagnostica. Il valore predefinito è una stringa vuota.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedule_returnValue">L'istanza di processo che rappresenta l'elemento di lavoro.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedulePromise">Pianifica un processo per completare un suggerimento restituito. Esistono quattro versioni del metodo per le diverse priorità di uso comune: schedulePromiseHigh, schedulePromiseAboveNormal, schedulePromiseNormal, schedulePromiseBelowNormal e schedulePromiseIdle. Utilizzo di esempio che mostra come garantire che l'ultimo collegamento della catena di suggerimento venga eseguito sull'utilità di pianificazione con priorità alta: asyncOp().then(Scheduler.schedulePromiseHigh).then(function (valueOfAsyncOp) { });</msg>
  <msg name="WinJS.Utilities.Scheduler.schedulePromise_p:promiseValue">Il valore con cui il suggerimento restituito verrà completato.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedulePromise_p:jobName">Una stringa che descrive il processo per scopi diagnostici.</msg>
  <msg name="WinJS.Utilities.Scheduler.schedulePromise_returnValue">Un suggerimento che si completa in un processo di priorità desiderata.</msg>
  <msg name="WinJS.Utilities.Scheduler.currentPriority">Ottiene la priorità corrente su cui è in esecuzione il chiamante.</msg>
  <msg name="WinJS.xhr">Esegue il wrapping delle chiamate a XMLHttpRequest in un suggerimento.</msg>
  <msg name="WinJS.xhr_p:options">Opzioni applicate all'oggetto XMLHttpRequest, ovvero tipo, URL, utente, password, intestazioni, responseType, dati e customRequestInitializer.</msg>
  <msg name="WinJS.xhr_returnValue">Suggerimento che restituisce l'oggetto XMLHttpRequest quando viene completato.</msg>
  <msg name="WinJS.xhr.constructor._returnValue"></msg>
  <msg name="WinJS.Utilities.setInnerHTML">Imposta la proprietà innerHTML dell'elemento specificato sul testo specificato.</msg>
  <msg name="WinJS.Utilities.setInnerHTML_p:element">Elemento su cui impostare la proprietà innerHTML.</msg>
  <msg name="WinJS.Utilities.setInnerHTML_p:text">Valore da impostare sulla proprietà innerHTML.</msg>
  <msg name="WinJS.Utilities.setOuterHTML">Imposta la proprietà outerHTML dell'elemento specificato sul testo specificato.</msg>
  <msg name="WinJS.Utilities.setOuterHTML_p:element">Elemento su cui impostare la proprietà outerHTML.</msg>
  <msg name="WinJS.Utilities.setOuterHTML_p:text">Valore da impostare sulla proprietà outerHTML.</msg>
  <msg name="WinJS.Utilities.insertAdjacentHTML">Chiama insertAdjacentHTML sull'elemento specificato.</msg>
  <msg name="WinJS.Utilities.insertAdjacentHTML_p:element">Elemento su cui chiamare insertAdjacentHTML.</msg>
  <msg name="WinJS.Utilities.insertAdjacentHTML_p:position">Posizione relativa all'elemento in corrispondenza del quale inserire il codice HTML.</msg>
  <msg name="WinJS.Utilities.insertAdjacentHTML_p:text">Valore da fornire a insertAdjacentHTML.</msg>
  <msg name="WinJS.Utilities.setOuterHTMLUnsafe">Imposta la proprietà outerHTML dell'elemento specificato sul testo specificato nel contesto di msWWA.execUnsafeLocalFunction.</msg>
  <msg name="WinJS.Utilities.insertAdjacentHTMLUnsafe">Chiama insertAdjacentHTML sull'elemento specificato nel contesto di msWWA.execUnsafeLocalFunction.</msg>
  <msg name="WinJS.Utilities.insertAdjacentHTMLUnsafe_p:text">Valore da fornire a insertAdjacentHTML.</msg>
  <msg name="WinJS.Utilities.msIsStaticHTML.setInnerHTML">Imposta la proprietà innerHTML di un elemento sul testo specificato se supera un controllo msIsStaticHTML.</msg>
  <msg name="WinJS.Utilities.msIsStaticHTML.setOuterHTML">Imposta la proprietà outerHTML di un elemento sul testo specificato se supera un controllo msIsStaticHTML.</msg>
  <msg name="WinJS.Utilities.msIsStaticHTML.insertAdjacentHTML">Chiama insertAdjacentHTML sull'elemento se supera un controllo msIsStaticHTML.</msg>
  <msg name="WinJS.Utilities.markDisposable">Aggiunge l'implementazione di eliminazione specificata all'elemento e ai contrassegni specificati come eliminabili.</msg>
  <msg name="WinJS.Utilities.markDisposable_p:element">L'elemento da contrassegnare come eliminabile.</msg>
  <msg name="WinJS.Utilities.markDisposable_p:disposeImpl">La funzione che contiene la logica di eliminazione specifica dell'elemento che verrà chiamata dalla funzione di eliminazione.</msg>
  <msg name="WinJS.Utilities.disposeSubTree">Rimuove tutti gli elementi eliminabili di prima generazione che sono discendenti dell'elemento specificato. L'elemento specificato non viene eliminato.</msg>
  <msg name="WinJS.Utilities.disposeSubTree_p:element">L'elemento radice di cui si deve eliminare la sottostruttura ad albero.</msg>
  <msg name="WinJS.UI.DOMEventMixin.setOptions">Aggiunge il set di opzioni specificate in modo dichiarativo (proprietà ed eventi) al controllo specificato. Se il nome della proprietà options inizia con "on", il valore della proprietà è una funzione e il controllo supporta addEventListener. Il metodo setOptions chiama il metodo addEventListener sul controllo.</msg>
  <msg name="WinJS.UI.DOMEventMixin.setOptions_p:control">Controllo a cui vengono applicati le proprietà e gli eventi.</msg>
  <msg name="WinJS.UI.DOMEventMixin.setOptions_p:options">Set di opzioni specificate in modo dichiarativo.</msg>
  <msg name="WinJS.UI.DOMEventMixin.addEventListener_p:useCapture">true per avviare l'acquisizione. In caso contrario, false.</msg>
  <msg name="WinJS.UI.DOMEventMixin.dispatchEvent">Genera un evento del tipo specificato, aggiungendo le proprietà aggiuntive specificate.</msg>
  <msg name="WinJS.UI.DOMEventMixin.dispatchEvent_returnValue">true se preventDefault è stato chiamato sull'evento. In caso contrario, false.</msg>
  <msg name="WinJS.UI.select.createSelect">Viene illustrato l'albero DOM dall'elemento specificato alla radice del documento, ogni volta che viene rilevato un ambito del selettore select esegue una ricerca all'interno di tale ambito per la stringa del selettore specificata. Viene restituito il primo elemento corrispondente.</msg>
  <msg name="WinJS.UI.select.createSelect_p:selector">Stringa del selettore.</msg>
  <msg name="WinJS.UI.select.createSelect_returnValue">Elemento di destinazione, se trovato.</msg>
  <msg name="WinJS.UI.processAll">Applica l'associazione del controllo dichiarativa a tutti gli elementi, a partire dall'elemento radice specificato.</msg>
  <msg name="WinJS.UI.processAll_p:rootElement">Elemento in corrispondenza del quale avviare l'applicazione dell'associazione. Se questo parametro non viene specificato, l'associazione viene applicata all'intero documento.</msg>
  <msg name="WinJS.UI.processAll_p:skipRoot">Se true, gli elementi da associare ignorano l'elemento radice specificato e includono solo gli elementi figlio.</msg>
  <msg name="WinJS.UI.processAll_returnValue">Suggerimento che viene acquisito quando l'associazione viene applicata a tutti i controlli.</msg>
  <msg name="WinJS.UI.process">Applica l'associazione del controllo dichiarativa all'elemento specificato.</msg>
  <msg name="WinJS.UI.process_p:element">Elemento da associare.</msg>
  <msg name="WinJS.UI.process_returnValue">Suggerimento che viene acquisito dopo l'attivazione del controllo. Il valore del suggerimento è il controllo collegato all'elemento.</msg>
  <msg name="WinJS.Utilities.query">Esegue un selettore di query sull'elemento specificato o sull'intero documento.</msg>
  <msg name="WinJS.Utilities.query_p:query">Selettore di query da eseguire.</msg>
  <msg name="WinJS.Utilities.query_p:element">Elemento su cui eseguire la query. Se questo parametro non viene specificato, la query viene eseguita sull'intero documento.</msg>
  <msg name="WinJS.Utilities.query_returnValue">QueryCollection che contiene i risultati della query.</msg>
  <msg name="WinJS.Utilities.id">Cerca un elemento per ID ed esegue il wrapping del risultato in QueryCollection.</msg>
  <msg name="WinJS.Utilities.id_p:id">ID dell'elemento.</msg>
  <msg name="WinJS.Utilities.id_returnValue">QueryCollection che contiene l'elemento, se trovato.</msg>
  <msg name="WinJS.Utilities.children">Crea un elemento QueryCollection che contiene gli elementi figlio dell'elemento padre specificato.</msg>
  <msg name="WinJS.Utilities.children_p:element">Elemento padre.</msg>
  <msg name="WinJS.Utilities.children_returnValue">Elemento QueryCollection che contiene gli elementi figlio dell'elemento.</msg>
  <msg name="WinJS.Utilities.Key">Definisce un set di valori di tastiera.</msg>
  <msg name="WinJS.Utilities.Key.backspace">Tasto BACKSPACE.</msg>
  <msg name="WinJS.Utilities.Key.tab">Tasto TAB.</msg>
  <msg name="WinJS.Utilities.Key.enter">Tasto INVIO.</msg>
  <msg name="WinJS.Utilities.Key.shift">Tasto MAIUSC.</msg>
  <msg name="WinJS.Utilities.Key.ctrl">Tasto CTRL.</msg>
  <msg name="WinJS.Utilities.Key.alt">Tasto ALT</msg>
  <msg name="WinJS.Utilities.Key.pause">Tasto PAUSA.</msg>
  <msg name="WinJS.Utilities.Key.capsLock">Tasto BLOC MAIUSC.</msg>
  <msg name="WinJS.Utilities.Key.escape">Tasto ESC.</msg>
  <msg name="WinJS.Utilities.Key.space">Tasto BARRA SPAZIATRICE.</msg>
  <msg name="WinJS.Utilities.Key.pageUp">Tasto PGSU.</msg>
  <msg name="WinJS.Utilities.Key.pageDown">Tasto PGGIÙ.</msg>
  <msg name="WinJS.Utilities.Key.end">Tasto FINE.</msg>
  <msg name="WinJS.Utilities.Key.home">Tasto HOME.</msg>
  <msg name="WinJS.Utilities.Key.leftArrow">Tasto freccia SINISTRA.</msg>
  <msg name="WinJS.Utilities.Key.upArrow">Tasto freccia SU.</msg>
  <msg name="WinJS.Utilities.Key.rightArrow">Tasto freccia DESTRA.</msg>
  <msg name="WinJS.Utilities.Key.downArrow">Tasto freccia GIÙ.</msg>
  <msg name="WinJS.Utilities.Key.insert">Tasto INS.</msg>
  <msg name="WinJS.Utilities.Key.deleteKey">Tasto CANC.</msg>
  <msg name="WinJS.Utilities.Key.num0">Tasto numero 0.</msg>
  <msg name="WinJS.Utilities.Key.num1">Tasto numero 1.</msg>
  <msg name="WinJS.Utilities.Key.num2">Tasto numero 2.</msg>
  <msg name="WinJS.Utilities.Key.num3">Tasto numero 3.</msg>
  <msg name="WinJS.Utilities.Key.num4">Tasto numero 4.</msg>
  <msg name="WinJS.Utilities.Key.num5">Tasto numero 5.</msg>
  <msg name="WinJS.Utilities.Key.num6">Tasto numero 6.</msg>
  <msg name="WinJS.Utilities.Key.num7">Tasto numero 7.</msg>
  <msg name="WinJS.Utilities.Key.num8">Tasto numero 8.</msg>
  <msg name="WinJS.Utilities.Key.num9">Tasto numero 9.</msg>
  <msg name="WinJS.Utilities.Key.a">Tasto A.</msg>
  <msg name="WinJS.Utilities.Key.b">Tasto B.</msg>
  <msg name="WinJS.Utilities.Key.c">Tasto C.</msg>
  <msg name="WinJS.Utilities.Key.d">Tasto D.</msg>
  <msg name="WinJS.Utilities.Key.e">Tasto E.</msg>
  <msg name="WinJS.Utilities.Key.f">Tasto F.</msg>
  <msg name="WinJS.Utilities.Key.g">Tasto G.</msg>
  <msg name="WinJS.Utilities.Key.h">Tasto H.</msg>
  <msg name="WinJS.Utilities.Key.i">Tasto I.</msg>
  <msg name="WinJS.Utilities.Key.j">Tasto J.</msg>
  <msg name="WinJS.Utilities.Key.k">Tasto K.</msg>
  <msg name="WinJS.Utilities.Key.l">Tasto L.</msg>
  <msg name="WinJS.Utilities.Key.m">Tasto M.</msg>
  <msg name="WinJS.Utilities.Key.n">Tasto N.</msg>
  <msg name="WinJS.Utilities.Key.o">Tasto O.</msg>
  <msg name="WinJS.Utilities.Key.p">Tasto P.</msg>
  <msg name="WinJS.Utilities.Key.q">Tasto Q.</msg>
  <msg name="WinJS.Utilities.Key.r">Tasto R.</msg>
  <msg name="WinJS.Utilities.Key.s">Tasto S.</msg>
  <msg name="WinJS.Utilities.Key.t">Tasto T.</msg>
  <msg name="WinJS.Utilities.Key.u">Tasto U.</msg>
  <msg name="WinJS.Utilities.Key.v">Tasto V.</msg>
  <msg name="WinJS.Utilities.Key.w">Tasto W.</msg>
  <msg name="WinJS.Utilities.Key.x">Tasto X.</msg>
  <msg name="WinJS.Utilities.Key.y">Tasto Y.</msg>
  <msg name="WinJS.Utilities.Key.z">Tasto Z.</msg>
  <msg name="WinJS.Utilities.Key.leftWindows">Tasto Windows sinistro.</msg>
  <msg name="WinJS.Utilities.Key.rightWindows">Tasto Windows destro.</msg>
  <msg name="WinJS.Utilities.Key.menu">Tasto menu.</msg>
  <msg name="WinJS.Utilities.Key.numPad0">Tasto del tastierino numerico 0.</msg>
  <msg name="WinJS.Utilities.Key.numPad1">Tasto del tastierino numerico 1.</msg>
  <msg name="WinJS.Utilities.Key.numPad2">Tasto del tastierino numerico 2.</msg>
  <msg name="WinJS.Utilities.Key.numPad3">Tasto del tastierino numerico 3.</msg>
  <msg name="WinJS.Utilities.Key.numPad4">Tasto del tastierino numerico 4.</msg>
  <msg name="WinJS.Utilities.Key.numPad5">Tasto del tastierino numerico 5.</msg>
  <msg name="WinJS.Utilities.Key.numPad6">Tasto del tastierino numerico 6.</msg>
  <msg name="WinJS.Utilities.Key.numPad7">Tasto del tastierino numerico 7.</msg>
  <msg name="WinJS.Utilities.Key.numPad8">Tasto del tastierino numerico 8.</msg>
  <msg name="WinJS.Utilities.Key.numPad9">Tasto del tastierino numerico 9.</msg>
  <msg name="WinJS.Utilities.Key.multiply">Tasto moltiplicazione.</msg>
  <msg name="WinJS.Utilities.Key.add">Tasto addizione.</msg>
  <msg name="WinJS.Utilities.Key.subtract">Tasto sottrazione.</msg>
  <msg name="WinJS.Utilities.Key.decimalPoint">Tasto separatore decimale.</msg>
  <msg name="WinJS.Utilities.Key.divide">Tasto divisione.</msg>
  <msg name="WinJS.Utilities.Key.F1">Tasto F1.</msg>
  <msg name="WinJS.Utilities.Key.F2">Tasto F2.</msg>
  <msg name="WinJS.Utilities.Key.F3">Tasto F3.</msg>
  <msg name="WinJS.Utilities.Key.F4">Tasto F4.</msg>
  <msg name="WinJS.Utilities.Key.F5">Tasto F5.</msg>
  <msg name="WinJS.Utilities.Key.F6">Tasto F6.</msg>
  <msg name="WinJS.Utilities.Key.F7">Tasto F7.</msg>
  <msg name="WinJS.Utilities.Key.F8">Tasto F8.</msg>
  <msg name="WinJS.Utilities.Key.F9">Tasto F9.</msg>
  <msg name="WinJS.Utilities.Key.F10">Tasto F10.</msg>
  <msg name="WinJS.Utilities.Key.F11">Tasto F11.</msg>
  <msg name="WinJS.Utilities.Key.F12">Tasto F12.</msg>
  <msg name="WinJS.Utilities.Key.numLock">Tasto BLOC NUM.</msg>
  <msg name="WinJS.Utilities.Key.scrollLock">Tasto BLOC SCORR.</msg>
  <msg name="WinJS.Utilities.Key.browserBack">Tasto Indietro del browser.</msg>
  <msg name="WinJS.Utilities.Key.browserForward">Tasto Avanti del browser.</msg>
  <msg name="WinJS.Utilities.Key.semicolon">Tasto PUNTO E VIRGOLA.</msg>
  <msg name="WinJS.Utilities.Key.equal">Tasto UGUALE.</msg>
  <msg name="WinJS.Utilities.Key.comma">Tasto VIRGOLA.</msg>
  <msg name="WinJS.Utilities.Key.dash">Tasto TRATTINO.</msg>
  <msg name="WinJS.Utilities.Key.period">Tasto PUNTO.</msg>
  <msg name="WinJS.Utilities.Key.forwardSlash">Tasto BARRA.</msg>
  <msg name="WinJS.Utilities.Key.graveAccent">Tasto accento grave.</msg>
  <msg name="WinJS.Utilities.Key.openBracket">Tasto PARENTESI APERTA.</msg>
  <msg name="WinJS.Utilities.Key.backSlash">Tasto BARRA ROVESCIATA.</msg>
  <msg name="WinJS.Utilities.Key.closeBracket">Tasto PARENTESI CHIUSA.</msg>
  <msg name="WinJS.Utilities.Key.singleQuote">Tasto VIRGOLETTE SEMPLICI.</msg>
  <msg name="WinJS.Utilities.data">Ottiene il valore dati associato all'elemento specificato.</msg>
  <msg name="WinJS.Utilities.data_p:element">L'elemento.</msg>
  <msg name="WinJS.Utilities.data_returnValue">Valore associato all'elemento.</msg>
  <msg name="WinJS.Utilities.hasClass">Determina se l’elemento specificato presenta la classe specificata.</msg>
  <msg name="WinJS.Utilities.hasClass_returnValue">true se l'elemento specificato contiene la classe specificata. In caso contrario, false.</msg>
  <msg name="WinJS.Utilities.addClass">Aggiunge la classe o le classi specificate all'elemento specificato. È possibile aggiungere più classi utilizzando nomi delimitati da spazi.</msg>
  <msg name="WinJS.Utilities.addClass_p:e">Elemento a cui aggiungere la classe.</msg>
  <msg name="WinJS.Utilities.addClass_p:name">Nome della classe da aggiungere. È possibile aggiungere più classi utilizzando nomi delimitati da spazi.</msg>
  <msg name="WinJS.Utilities.removeClass">Rimuove la classe specificata dall'elemento specificato.</msg>
  <msg name="WinJS.Utilities.removeClass_p:e">Elemento da cui rimuovere la classe.</msg>
  <msg name="WinJS.Utilities.removeClass_p:name">Nome della classe da rimuovere.</msg>
  <msg name="WinJS.Utilities.toggleClass">Attiva e disattiva (aggiunge o rimuove) la classe specificata sull'elemento specificato. Se la classe è presente, viene eliminata. Se non è presente, viene aggiunta.</msg>
  <msg name="WinJS.Utilities.toggleClass_p:e">Elemento su cui attivare e disattivare la classe.</msg>
  <msg name="WinJS.Utilities.toggleClass_p:name">Nome della classe da attivare o disattivare.</msg>
  <msg name="WinJS.Utilities.getRelativeLeft">Ottiene la coordinata sinistra dell'elemento specificato relativamente all'elemento padre specificato.</msg>
  <msg name="WinJS.Utilities.getRelativeLeft_returnValue">Coordinata sinistra relativa.</msg>
  <msg name="WinJS.Utilities.getRelativeTop">Ottiene la coordinata superiore dell'elemento relativamente all'elemento padre specificato.</msg>
  <msg name="WinJS.Utilities.getRelativeTop_returnValue">Coordinata superiore relativa.</msg>
  <msg name="WinJS.Utilities.empty">Rimuove tutti i nodi figlio dall'elemento specificato.</msg>
  <msg name="WinJS.Utilities.getContentWidth">Ottiene la larghezza del contenuto dell'elemento specificato. La larghezza del contenuto non include bordi o spaziatura interna.</msg>
  <msg name="WinJS.Utilities.getContentWidth_returnValue">Larghezza del contenuto dell'elemento.</msg>
  <msg name="WinJS.Utilities.getTotalWidth">Ottiene la larghezza dell'elemento, inclusi i margini.</msg>
  <msg name="WinJS.Utilities.getTotalWidth_returnValue">Larghezza dell'elemento, inclusi i margini.</msg>
  <msg name="WinJS.Utilities.getContentHeight">Ottiene l'altezza del contenuto dell'elemento specificato. L'altezza del contenuto non include bordi o spaziatura interna.</msg>
  <msg name="WinJS.Utilities.getContentHeight_returnValue">Altezza del contenuto dell'elemento.</msg>
  <msg name="WinJS.Utilities.getTotalHeight">Ottiene l'altezza dell'elemento, inclusi i relativi margini.</msg>
  <msg name="WinJS.Utilities.getTotalHeight_returnValue">Altezza dell'elemento, inclusi i margini.</msg>
  <msg name="WinJS.Utilities.getPosition">Ottiene la posizione dell'elemento specificato.</msg>
  <msg name="WinJS.Utilities.getPosition_returnValue">Oggetto che contiene le proprietà left, top, width e height dell'elemento.</msg>
  <msg name="WinJS.Utilities.convertToPixels">Converte una stringa di posizionamento CSS per l'elemento specificato in pixel.</msg>
  <msg name="WinJS.Utilities.convertToPixels_p:value">Stringa di posizionamento CSS.</msg>
  <msg name="WinJS.Utilities.convertToPixels_returnValue">Numero di pixel.</msg>
  <msg name="WinJS.Utilities.eventWithinElement">Determina se l'evento specificato si è verificato nell'elemento specificato.</msg>
  <msg name="WinJS.Utilities.eventWithinElement_p:event">Evento.</msg>
  <msg name="WinJS.Utilities.eventWithinElement_returnValue">true se l'evento si è verificato nell'elemento. In caso contrario, false.</msg>
  <msg name="WinJS.UI.Pages.dispose">Elimina la pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.load">Crea una copia degli elementi DOM dall'URI specificato. Al fine di utilizzare questo override la pagina che contiene l'override di caricamento deve essere definita chiamando WinJS.UI.Pages.define() prima di WinJS.UI.Pages.render().</msg>
  <msg name="WinJS.UI.Pages._mixin.load_p:uri">URI da cui copiare gli elementi DOM.</msg>
  <msg name="WinJS.UI.Pages._mixin.load_returnValue">Suggerimento il cui valore acquisito è il set di elementi DOM privi di elementi padre, se l'elaborazione asincrona è necessaria. In caso contrario, non restituisce nulla.</msg>
  <msg name="WinJS.UI.Pages._mixin.init">Inizializza il controllo prima che venga impostato il contenuto del controllo. Utilizzare il metodo elaborato per qualsiasi inizializzazione che deve essere eseguita dopo l'impostazione del contenuto del controllo.</msg>
  <msg name="WinJS.UI.Pages._mixin.init_p:element">Elemento DOM che conterrà tutto il contenuto per la pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.init_p:options">Opzioni passate al costruttore della pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.init_returnValue">Suggerimento che viene acquisito quando viene completata l'inizializzazione, se l'elaborazione asincrona è necessaria. In caso contrario, non restituisce nulla.</msg>
  <msg name="WinJS.UI.Pages._mixin.processed">Inizializza il controllo dopo che è stato impostato il contenuto del controllo.</msg>
  <msg name="WinJS.UI.Pages._mixin.processed_p:options">Opzioni da passare al costruttore della pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.render">Esegue il rendering del controllo, in genere aggiungendo gli elementi specificati nel parametro loadResult all'elemento specificato.</msg>
  <msg name="WinJS.UI.Pages._mixin.render_p:options">Opzioni passate al costruttore della pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.render_p:loadResult">Elementi restituiti dal metodo di caricamento.</msg>
  <msg name="WinJS.UI.Pages._mixin.render_returnValue">Suggerimento che viene acquisito quando viene completato il rendering, se l'elaborazione asincrona è necessaria. In caso contrario, non restituisce nulla.</msg>
  <msg name="WinJS.UI.Pages._mixin.ready">Chiamato dopo il completamento dell'inizializzazione e del rendering. A questo punto l'elemento è pronto all'uso.</msg>
  <msg name="WinJS.UI.Pages._mixin.ready_p:element">Elemento DOM che contiene tutto il contenuto per la pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.ready_p:options">Opzioni passate al costruttore della pagina</msg>
  <msg name="WinJS.UI.Pages._mixin.error">Chiamato se si verifica un qualsiasi errore durante l'elaborazione della pagina.</msg>
  <msg name="WinJS.UI.Pages._mixin.error_p:err">Errore che si è verificato.</msg>
  <msg name="WinJS.UI.Pages._mixin.error_returnValue">Nulla se l'errore è stato gestito o suggerimento di errore se l'errore non è stato gestito.</msg>
  <msg name="WinJS.UI.Pages.define">Crea un nuovo controllo pagina dall'URI specificato che contiene i membri specificati. Sono consentite più chiamate a questo metodo per lo stesso URI e tutti i membri verranno uniti.</msg>
  <msg name="WinJS.UI.Pages.define_p:uri">URI per il contenuto che definisce la pagina.</msg>
  <msg name="WinJS.UI.Pages.define_p:members">Membri aggiuntivi che conterrà il controllo.</msg>
  <msg name="WinJS.UI.Pages.define_returnValue">Funzione del costruttore che crea la pagina.</msg>
  <msg name="WinJS.UI.Pages.get">Ottiene un controllo pagina già definito per l'URI specificato o ne crea uno nuovo.</msg>
  <msg name="WinJS.UI.Pages.render">Crea un controllo pagina dall'URI specificato nell'elemento specificato con le opzioni specificate.</msg>
  <msg name="WinJS.UI.Pages.render_p:element">Elemento da popolare con la pagina.</msg>
  <msg name="WinJS.UI.Pages.render_p:options">Opzioni per la configurazione della pagina.</msg>
  <msg name="WinJS.UI.Pages.render_p:parentedPromise">Suggerimento che viene acquisito quando l'elemento specificato è l'elemento figlio del documento finale.</msg>
  <msg name="WinJS.UI.Pages.render_returnValue">Suggerimento che viene acquisito al termine del rendering della pagina.</msg>
  <msg name="WinJS.UI.Fragments.renderCopy">Copia il contenuto dell'URI specificato nell'elemento specificato.</msg>
  <msg name="WinJS.UI.Fragments.renderCopy_p:href">URI che contiene il frammento da copiare.</msg>
  <msg name="WinJS.UI.Fragments.renderCopy_p:target">Elemento a cui viene aggiunto il frammento.</msg>
  <msg name="WinJS.UI.Fragments.renderCopy_returnValue">Suggerimento che viene acquisito quando il frammento è stato caricato. Se non viene specificato un elemento di destinazione, il frammento copiato è il valore completato.</msg>
  <msg name="WinJS.UI.Fragments.cache">Avvia il caricamento del frammento nella posizione specificata. Il suggerimento restituito viene completato quando il frammento è pronto per essere copiato.</msg>
  <msg name="WinJS.UI.Fragments.cache_p:href">URI che contiene il frammento da copiare.</msg>
  <msg name="WinJS.UI.Fragments.cache_returnValue">Suggerimento che viene acquisito quando il frammento è stato preparato per la copia.</msg>
  <msg name="WinJS.UI.Fragments.clearCache">Rimuove eventuali informazioni memorizzate nella cache sul frammento specificato. Questo metodo non scarica gli script o gli stili a cui fa riferimento il frammento.</msg>
  <msg name="WinJS.UI.Fragments.clearCache_p:href">URI che contiene il frammento da cancellare. Se non viene fornito alcun URI, l'intero contenuto della cache viene cancellato.</msg>
  <msg name="WinJS.UI.isAnimationEnabled">Determina se nella libreria delle animazioni WinJS verranno eseguite le animazioni.</msg>
  <msg name="WinJS.UI.isAnimationEnabled_returnValue">true se le animazioni WinJS verranno eseguite, false se le animazioni WinJS verranno eliminate.</msg>
  <msg name="WinJS.UI.disableAnimations">Disabilita le animazioni nella libreria delle animazioni WinJS riducendo il conteggio di abilitazione delle animazioni.</msg>
  <msg name="WinJS.UI.enableAnimations">Abilita le animazioni nella libreria delle animazioni WinJS aumentando il conteggio di abilitazione delle animazioni.</msg>
  <msg name="WinJS.UI.executeAnimation">Eseguire un'animazione CSS che possa coesistere con altre animazioni della libreria delle animazioni. Non è previsto che nelle applicazioni questa funzione venga chiamata direttamente. È preferibile l'utilizzo delle animazioni di alto livello nella libreria delle animazioni.</msg>
  <msg name="WinJS.UI.executeAnimation_p:element">Singolo elemento o raccolta di elementi su cui eseguire un'animazione CSS.</msg>
  <msg name="WinJS.UI.executeAnimation_p:animation">Descrizione di una singola animazione o matrice di descrizioni di animazioni.</msg>
  <msg name="WinJS.UI.executeAnimation_returnValue">Oggetto suggerimento che viene completato quando l'animazione CSS viene completata.</msg>
  <msg name="WinJS.UI.executeTransition">Eseguire una transizione CSS che possa coesistere con altre animazioni della libreria delle animazioni. Non è previsto che nelle applicazioni questa funzione venga chiamata direttamente. È preferibile l'utilizzo delle animazioni di alto livello nella libreria delle animazioni.</msg>
  <msg name="WinJS.UI.executeTransition_p:element">Singolo elemento o raccolta di elementi su cui eseguire una transizione CSS.</msg>
  <msg name="WinJS.UI.executeTransition_p:transition">Descrizione di una singola transizione o matrice di descrizioni di transizioni.</msg>
  <msg name="WinJS.UI.executeTransition_returnValue">Oggetto suggerimento che viene completato quando la transizione CSS viene completata.</msg>
  <msg name="WinJS.UI.eventHandler">Contrassegna una funzione del gestore eventi come compatibile con l'elaborazione dichiarativa.</msg>
  <msg name="WinJS.UI.eventHandler_p:handler">Gestore da contrassegnare come compatibile con l'elaborazione dichiarativa.</msg>
  <msg name="WinJS.UI.eventHandler_returnValue">Gestore di input.</msg>
  <msg name="WinJS.UI.Orientation">Opzioni di orientamento per una proprietà di controllo</msg>
  <msg name="WinJS.UI.Orientation.horizontal">Horizontal</msg>
  <msg name="WinJS.UI.Orientation.vertical">Verticale</msg>
  <msg name="WinJS.Application.event.setPromise">Utilizzato per informare l'oggetto applicazione che è in corso l'esecuzione di lavoro asincrono e che il gestore eventi non deve essere considerato completato fino al completamento del suggerimento.</msg>
  <msg name="WinJS.Application.eventRecord.setPromise_p:promise">Suggerimento da attendere.</msg>
  <msg name="WinJS.Application.queueEvent">Accoda un evento da elaborare tramite la coda eventi di WinJS.Application.</msg>
  <msg name="WinJS.Application.queueEvent_p:eventRecord">È previsto che l'oggetto evento disponga di una proprietà type utilizzata come nome evento quando si inviano messaggi sulla coda eventi di WinJS.Application. L'intero oggetto viene fornito ai listener di eventi nella proprietà detail dell'evento.</msg>
  <msg name="WinJS.Application.stop">Arresta l'elaborazione degli eventi dell'applicazione e reimposta WinJS.Application sullo stato iniziale.</msg>
  <msg name="WinJS.Application.checkpoint">Accoda un evento di checkpoint.</msg>
  <msg name="WinJS.Application.start">Avvia l'elaborazione degli eventi nella coda eventi di WinJS.Application.</msg>
  <msg name="WinJS.Navigation.beforenavigate.setPromise">Utilizzato per informare l'oggetto ListView che è in corso l'esecuzione di lavoro asincrono e che il gestore eventi non deve essere considerato completato fino al completamento del suggerimento.</msg>
  <msg name="WinJS.Navigation.canGoForward">Determina se è possibile navigare in avanti.</msg>
  <msg name="WinJS.Navigation.canGoBack">Determina se è possibile navigare indietro.</msg>
  <msg name="WinJS.Navigation.location">Ottiene la posizione corrente.</msg>
  <msg name="WinJS.Navigation.state">Ottiene o imposta lo stato di navigazione.</msg>
  <msg name="WinJS.Navigation.history">Ottiene o imposta la cronologia di navigazione.</msg>
  <msg name="WinJS.Navigation.forward">Naviga in avanti.</msg>
  <msg name="WinJS.Navigation.forward_p:distance">Numero di voci di cui avanzare.</msg>
  <msg name="WinJS.Navigation.forward_returnValue">Suggerimento completato con un valore che indica se la navigazione è stata completata o meno.</msg>
  <msg name="WinJS.Navigation.back">Naviga indietro.</msg>
  <msg name="WinJS.Navigation.back_p:distance">Numero di voci di cui retrocedere nella cronologia.</msg>
  <msg name="WinJS.Navigation.navigate">Naviga verso una posizione.</msg>
  <msg name="WinJS.Navigation.navigate_p:location">Posizione verso cui navigare. La posizione è in genere una stringa, ma può essere qualsiasi altro elemento.</msg>
  <msg name="WinJS.Navigation.navigate_p:initialState">Stato di navigazione accessibile attraverso WinJS.Navigation.state.</msg>
  <msg name="WinJS.Application.local">Consente l'accesso per la creazione di file nell'archiviazione locale dell'applicazione, che viene mantenuta da un'esecuzione a un'altra dell'applicazione con roaming disabilitato.</msg>
  <msg name="WinJS.Application.temp">Consente l'accesso per la creazione di file nell'archiviazione temporanea dell'applicazione, che può essere recuperata dal sistema tra le esecuzioni dell'applicazione.</msg>
  <msg name="WinJS.Application.roaming">Consente l'accesso per la creazione di file nell'archiviazione roaming dell'applicazione, che viene mantenuta da un'esecuzione a un'altra dell'applicazione con l'utente su più computer.</msg>
  <msg name="WinJS.Binding.observableMixin.notify">Notifica i listener che il valore di una proprietà è stato aggiornato.</msg>
  <msg name="WinJS.Binding.observableMixin.notify_p:name">Nome della proprietà che viene aggiornata.</msg>
  <msg name="WinJS.Binding.observableMixin.notify_p:newValue">Nuovo valore della proprietà.</msg>
  <msg name="WinJS.Binding.observableMixin.notify_p:oldValue">Valore precedente della proprietà.</msg>
  <msg name="WinJS.Binding.observableMixin.notify_returnValue">Suggerimento che viene completato quando le notifiche sono state completate.</msg>
  <msg name="WinJS.Binding.observableMixin.unbind">Rimuove uno o più listener dall'elenco delle notifiche per una determinata proprietà.</msg>
  <msg name="WinJS.Binding.observableMixin.unbind_p:name">Nome della proprietà da separare. Se questo parametro viene omesso, vengono rimossi tutti i listener per tutti gli eventi.</msg>
  <msg name="WinJS.Binding.observableMixin.unbind_p:action">Funzione da rimuovere dall'elenco dei listener per la proprietà specificata. Se questo parametro viene omesso, vengono rimossi tutti i listener per la proprietà specificata.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.getProperty">Ottiene un valore di proprietà per nome.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.getProperty_p:name">Nome della proprietà da ottenere.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.getProperty_returnValue">Valore della proprietà come oggetto osservabile.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.setProperty">Aggiorna un valore di proprietà e notifica eventuali listener.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.setProperty_p:name">Nome della proprietà da aggiornare.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.setProperty_p:value">Nuovo valore della proprietà.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.addProperty">Aggiunge una proprietà con notifica delle modifiche a questo oggetto, inclusa la definizione della proprietà ECMAScript5.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.addProperty_p:name">Nome della proprietà da aggiungere.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.addProperty_p:value">Valore della proprietà.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.updateProperty_returnValue">Suggerimento che viene completato quando le notifiche per la modifica della proprietà sono state elaborate. Se vengono riunite più notifiche, è possibile che il suggerimento venga annullato o che il valore del suggerimento venga aggiornato. Il valore acquisito del suggerimento è il nuovo valore della proprietà per cui sono state completate le notifiche.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.removeProperty">Rimuove un valore di proprietà.</msg>
  <msg name="WinJS.Binding.dynamicObservableMixin.removeProperty_p:name">Nome della proprietà da rimuovere.</msg>
  <msg name="WinJS.Binding.bind">Esegue l'associazione a una o più proprietà sull'oggetto osservabile o sui valori figlio di tale oggetto.</msg>
  <msg name="WinJS.Binding.bind_p:observable">Oggetto a cui eseguire l'associazione.</msg>
  <msg name="WinJS.Binding.bind_p:bindingDescriptor">Valore letterale di oggetto che contiene le dichiarazioni di associazione. Le dichiarazioni di associazione assumono il formato: { propertyName: (function | bindingDeclaration),... } Ad esempio, l'associazione a un membro annidato di un oggetto viene dichiarata nel modo seguente: bind(someObject, { address: { street: function(v) { ... } } });</msg>
  <msg name="WinJS.Binding.bind_returnValue">Oggetto che contiene almeno un campo "cancel", una funzione che rimuove tutte le associazioni abbinate a questa richiesta di associazione.</msg>
  <msg name="WinJS.Binding.expandProperties">Esegue il wrapping dell'oggetto specificato in modo che tutte le relative proprietà vengano instrumentate per l'associazione. Questa operazione deve essere eseguita insieme al parametro mixin di associazione.</msg>
  <msg name="WinJS.Binding.expandProperties_p:shape">Specifica per l'oggetto associabile.</msg>
  <msg name="WinJS.Binding.expandProperties_returnValue">Oggetto con un set di proprietà tutte collegate per l'associazione.</msg>
  <msg name="WinJS.Binding.define">Crea una nuova funzione del costruttore che supporti l'osservabilità con il set specificato di proprietà.</msg>
  <msg name="WinJS.Binding.define_p:data">Oggetto da utilizzare come modello per la definizione del set di proprietà, ad esempio var MyPointClass = define ({x:0,y:0});</msg>
  <msg name="WinJS.Binding.define_returnValue">Funzione del costruttore con 1 argomento facoltativo che è lo stato iniziale delle proprietà.</msg>
  <msg name="WinJS.Binding.define.return">Crea un nuovo oggetto osservabile.</msg>
  <msg name="WinJS.Binding.define.return_p:init">Valori iniziali delle proprietà.</msg>
  <msg name="WinJS.Binding.as">Restituisce un oggetto osservabile. Può trattarsi di un proxy osservabile per l'oggetto specificato, di un proxy esistente o dell'oggetto specificato stesso se supporta direttamente l'osservabilità.</msg>
  <msg name="WinJS.Binding.as_p:data">Oggetto per cui fornire l'osservabilità.</msg>
  <msg name="WinJS.Binding.as_returnValue">Oggetto osservabile.</msg>
  <msg name="WinJS.Binding.unwrap">Restituisce l'oggetto originale (non osservabile) se l'oggetto specificato è un proxy osservabile.</msg>
  <msg name="WinJS.Binding.unwrap_p:data">Oggetto per cui recuperare il valore originale.</msg>
  <msg name="WinJS.Binding.unwrap_returnValue">Se l'oggetto specificato è un proxy osservabile, viene restituito l'oggetto originale. In caso contrario, viene restituito lo stesso oggetto.</msg>
  <msg name="WinJS.Binding.Template.render.value">Esegue il rendering di un modello basato su un URI.</msg>
  <msg name="WinJS.Binding.Template.render.value_p:href">URI da cui caricare il modello.</msg>
  <msg name="WinJS.Binding.Template.render.value_returnValue">Suggerimento completato al termine dell'associazione. Il valore è l'oggetto nel parametro del contenitore o l'elemento DIV creato.</msg>
  <msg name="WinJS.Utilities.QueryCollection.template">Esegue il rendering di un modello associato ai dati specificati che è l'elemento figlio degli elementi inclusi in QueryCollection. Se QueryCollection contiene più elementi, il modello viene sottoposto a rendering più volte, una volta per ogni elemento in QueryCollection per i dati passati.</msg>
  <msg name="WinJS.Utilities.QueryCollection.template_p:templateElement">Elemento DOM a cui è associato il controllo modello.</msg>
  <msg name="WinJS.Utilities.QueryCollection.template_p:data">Dati di cui eseguire il rendering. Se i dati sono una matrice, o qualsiasi altro oggetto che ha un metodo forEach, il modello viene sottoposto a rendering più volte, una volta per ogni elemento nella raccolta.</msg>
  <msg name="WinJS.Utilities.QueryCollection.template_p:renderDonePromiseCallback">Se disponibile, questa funzione viene chiamata ogni volta che il modello viene sottoposto a rendering e riceve un suggerimento che viene acquisito al termine del rendering del modello.</msg>
  <msg name="WinJS.Utilities.QueryCollection.template_returnValue">QueryCollection.</msg>
  <msg name="WinJS.Binding.declarativeBind">Associa valori tra il contesto dati specificato e gli elementi discendenti dell'elemento radice specificato con gli attributi di associazione dichiarativa (data-win-bind).</msg>
  <msg name="WinJS.Binding.declarativeBind_p:rootElement">Elemento in corrispondenza del quale iniziare l'attraversamento per trovare elementi a cui eseguire l'associazione. Se questo parametro viene omesso, la ricerca viene eseguita nell'intero documento.</msg>
  <msg name="WinJS.Binding.declarativeBind_p:bindingCache">Dati di associazione memorizzati nella cache.</msg>
  <msg name="WinJS.Binding.declarativeBind_p:defaultInitializer">L'inizializzatore di associazione da utilizzare nel caso in cui si non sia specificato in un'espressione di associazione. Se non è stato fornito, il comportamento sarà uguale a WinJS.Binding.defaultBind.</msg>
  <msg name="WinJS.Binding.declarativeBind_returnValue">Suggerimento che viene completato quando ogni elemento che contiene dichiarazioni di associazione è stato elaborato e l'aggiornamento è iniziato.</msg>
  <msg name="WinJS.Binding.converter">Crea un inizializzatore di associazione predefinito per l'associazione tra una proprietà di origine e una proprietà di destinazione con una funzione del convertitore eseguita sul valore della proprietà di origine.</msg>
  <msg name="WinJS.Binding.converter_p:convert">Conversione che agisce sul risultato della proprietà di origine per produrre un valore impostato sulla proprietà di destinazione.</msg>
  <msg name="WinJS.Binding.converter_returnValue">Inizializzatore di associazione.</msg>
  <msg name="WinJS.Binding.setAttribute">Crea un'associazione unidirezionale tra l'oggetto di origine e un attributo nell'elemento di destinazione.</msg>
  <msg name="WinJS.Binding.setAttribute_p:source">Oggetto di origine.</msg>
  <msg name="WinJS.Binding.setAttribute_p:sourceProperties">Percorso sull'oggetto di origine alla proprietà di origine.</msg>
  <msg name="WinJS.Binding.setAttribute_p:dest">L'oggetto di destinazione deve essere un elemento DOM.</msg>
  <msg name="WinJS.Binding.setAttribute_p:destProperties">Il percorso dell'oggetto di destinazione alla proprietà di destinazione deve essere un nome singolo.</msg>
  <msg name="WinJS.Binding.setAttribute_p:initialValue">Il valore iniziale di destinazione noto, se il valore di origine è uguale al valore iniziale (utilizzando ===), la destinazione non è stata impostata la prima volta.</msg>
  <msg name="WinJS.Binding.setAttribute_returnValue">Oggetto con un metodo di annullamento utilizzato per unire le associazioni.</msg>
  <msg name="WinJS.Binding.setAttributeOneTime">Imposta un attributo nell'elemento di destinazione sul valore della proprietà di origine</msg>
  <msg name="WinJS.Binding.addClassOneTime">Aggiunge una classe nell'elemento di destinazione sul valore della proprietà di origine</msg>
  <msg name="WinJS.Binding.defaultBind">Crea un'associazione unidirezionale tra l'oggetto di origine e l'oggetto di destinazione.</msg>
  <msg name="WinJS.Binding.defaultBind_p:dest">Oggetto di destinazione.</msg>
  <msg name="WinJS.Binding.defaultBind_p:destProperties">Percorso sull'oggetto di destinazione alla proprietà di destinazione.</msg>
  <msg name="WinJS.Binding.oneTime">Imposta la proprietà di destinazione sul valore della proprietà di origine.</msg>
  <msg name="WinJS.Binding.initializer">Contrassegna una funzione dell'inizializzatore personalizzato come compatibile con l'associazione dati dichiarativa.</msg>
  <msg name="WinJS.Binding.initializer_p:customInitializer">Inizializzatore personalizzato da contrassegnare come compatibile con l'associazione dati dichiarativa.</msg>
  <msg name="WinJS.Binding.initializer_returnValue">Inizializzatore personalizzato di input.</msg>
  <msg name="WinJS.Binding.ListBase.onitemchanged">Il valore identificato dalla chiave specificata è stato sostituito con un valore diverso.</msg>
  <msg name="WinJS.Binding.ListBase.oniteminserted">È stato inserito un nuovo valore nell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.onitemmoved">Il valore identificato dalla chiave specificata è stato spostato da un indice nell'elenco a un altro.</msg>
  <msg name="WinJS.Binding.ListBase.onitemmutated">Il valore identificato dalla chiave specificata è stato modificato.</msg>
  <msg name="WinJS.Binding.ListBase.onitemremoved">Il valore identificato dalla chiave specificata è stato rimosso dall'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.onreload">L'elenco è stato aggiornato. È possibile che alcuni riferimenti agli elementi nell'elenco non siano corretti.</msg>
  <msg name="WinJS.Binding.ListBase.notifyReload">Forza l'elenco a inviare una notifica di ricaricamento a un listener qualsiasi.</msg>
  <msg name="WinJS.Binding.ListBase.getAt">Ottiene il valore in corrispondenza dell'indice specificato.</msg>
  <msg name="WinJS.Binding.ListBase.getAt_p:index">Indice del valore da ottenere.</msg>
  <msg name="WinJS.Binding.ListBase.getAt_returnValue">Il valore in corrispondenza dell'indice specificato.</msg>
  <msg name="WinJS.Binding.ListBase.concat">Restituisce un nuovo elenco dato da una combinazione di due matrici.</msg>
  <msg name="WinJS.Binding.ListBase.concat_returnValue">Matrice contenente la concatenazione dell'elenco e di qualsiasi altro elemento fornito.</msg>
  <msg name="WinJS.Binding.ListBase.join">Restituisce una stringa composta da tutti gli elementi di un elenco separati da una stringa di separazione specificata.</msg>
  <msg name="WinJS.Binding.ListBase.join_p:separator">Stringa utilizzata per separare gli elementi di un elenco. Se questo parametro viene omesso, gli elementi dell'elenco sono separati da una virgola.</msg>
  <msg name="WinJS.Binding.ListBase.join_returnValue">Elementi di un elenco separati dalla stringa di separazione specificata.</msg>
  <msg name="WinJS.Binding.ListBase.slice">Estrae una sezione di un elenco e restituisce un nuovo elenco.</msg>
  <msg name="WinJS.Binding.ListBase.slice_p:begin">Indice che specifica l'inizio della sezione.</msg>
  <msg name="WinJS.Binding.ListBase.slice_p:end">Indice che specifica la fine della sezione.</msg>
  <msg name="WinJS.Binding.ListBase.slice_returnValue">Restituisce una sezione di una matrice.</msg>
  <msg name="WinJS.Binding.ListBase.indexOf">Ottiene l’indice della prima occorrenza del valore specificato in un elenco.</msg>
  <msg name="WinJS.Binding.ListBase.indexOf_p:searchElement">Valore da individuare nell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.indexOf_p:fromIndex">Indice in corrispondenza del quale iniziare la ricerca. Se fromIndex viene omesso, la ricerca inizia in corrispondenza dell'indice 0.</msg>
  <msg name="WinJS.Binding.ListBase.indexOf_returnValue">Indice della prima occorrenza di un valore in un elenco o -1 se non viene trovato.</msg>
  <msg name="WinJS.Binding.ListBase.lastIndexOf">Ottiene l’indice dell'ultima occorrenza del valore specificato in un elenco.</msg>
  <msg name="WinJS.Binding.ListBase.lastIndexOf_p:fromIndex">Indice in corrispondenza del quale iniziare la ricerca. Se fromIndex viene omesso, la ricerca inizia in corrispondenza dell'ultimo indice nell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.lastIndexOf_returnValue">Indice dell'ultima occorrenza di un valore in un elenco o -1 se non viene trovato.</msg>
  <msg name="WinJS.Binding.ListBase.every">Controlla se la funzione di callback specificata restituisce true per tutti gli elementi di un elenco.</msg>
  <msg name="WinJS.Binding.ListBase.every_p:callback">Funzione che accetta fino a tre argomenti. Questa funzione viene chiamata per ogni elemento dell'elenco finché non restituisce false o non si raggiunge la fine dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.every_p:thisArg">Oggetto a cui la parola chiave this può fare riferimento nella funzione di callback. Se thisArg viene omesso, viene utilizzato undefined.</msg>
  <msg name="WinJS.Binding.ListBase.every_returnValue">True se il callback restituisce true per tutti gli elementi dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.filter">Restituisce gli elementi di un elenco che soddisfano la condizione specificata in una funzione di callback.</msg>
  <msg name="WinJS.Binding.ListBase.filter_p:callback">Funzione che accetta fino a tre argomenti. La funzione viene chiamata per ogni elemento dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.filter_returnValue">Matrice che contiene gli elementi che soddisfano la condizione specificata nella funzione di callback.</msg>
  <msg name="WinJS.Binding.ListBase.forEach">Chiama la funzione di callback specificata per ogni elemento di un elenco.</msg>
  <msg name="WinJS.Binding.ListBase.map">Chiama la funzione di callback specificata su ogni elemento di un elenco e restituisce una matrice contenente i risultati.</msg>
  <msg name="WinJS.Binding.ListBase.map_returnValue">Matrice contenente i risultati della chiamata alla funzione di callback su ogni elemento dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.some">Controlla se la funzione di callback specificata restituisce true per qualsiasi elemento di un elenco.</msg>
  <msg name="WinJS.Binding.ListBase.some_p:callback">Funzione che accetta fino a tre argomenti. La funzione viene chiamata per ogni elemento dell'elenco finché non restituisce true o non si raggiunge la fine dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.some_returnValue">True se il callback restituisce true per qualsiasi elemento dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.reduce">Accumula un singolo risultato chiamando la funzione di callback specificata per tutti gli elementi di un elenco. Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</msg>
  <msg name="WinJS.Binding.ListBase.reduce_p:callback">Funzione che accetta fino a quattro argomenti. La funzione viene chiamata per ogni elemento dell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.reduce_p:initialValue">Se viene specificato initialValue, viene utilizzato come valore con cui iniziare l'accumulo. La prima chiamata alla funzione fornisce questo valore come argomento anziché un valore di elenco.</msg>
  <msg name="WinJS.Binding.ListBase.reduce_returnValue">Valore restituito dall'ultima chiamata alla funzione di callback.</msg>
  <msg name="WinJS.Binding.ListBase.reduceRight">Accumula un singolo risultato chiamando la funzione di callback specificata per tutti gli elementi di un elenco, in ordine decrescente. Il valore restituito della funzione di callback è il risultato accumulato e viene fornito come argomento nella chiamata successiva alla funzione di callback.</msg>
  <msg name="WinJS.Binding.ListBase.reduceRight_p:initialValue">Se viene specificato initialValue, viene utilizzato come valore con cui iniziare l'accumulo. La prima chiamata alla funzione callbackfn fornisce questo valore come argomento anziché un valore di elenco.</msg>
  <msg name="WinJS.Binding.ListBase.reduceRight_returnValue">Valore restituito dall'ultima chiamata alla funzione di callback.</msg>
  <msg name="WinJS.Binding.ListBase.createFiltered">Crea una proiezione filtrata attiva su questo elenco. Se l'elenco viene modificato, la proiezione filtrata reagisce alle modifiche e potrebbe anch'essa cambiare.</msg>
  <msg name="WinJS.Binding.ListBase.createFiltered_p:predicate">Funzione che accetta un singolo argomento. Le funzione createFiltered chiama il callback con ogni elemento dell'elenco. Se la funzione restituisce true, l'elemento verrà incluso nell'elenco filtrato.</msg>
  <msg name="WinJS.Binding.ListBase.createFiltered_returnValue">Proiezione filtrata sull'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.createGrouped">Crea una proiezione raggruppata attiva su questo elenco. Se l'elenco viene modificato, la proiezione raggruppata reagisce alle modifiche e potrebbe anch'essa cambiare. La proiezione raggruppata dispone tutti gli elementi dell'elenco in un ordine a gruppi contigui. La proiezione raggruppata contiene inoltre una proprietà .groups che è un elemento WinJS.Binding.List che rappresenta i gruppi trovati nell'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.createGrouped_p:groupKey">Funzione che accetta un singolo argomento. La funzione viene chiamata con ogni elemento dell'elenco, la funzione dovrebbe restituire una stringa che rappresenta il gruppo contenente l'elemento.</msg>
  <msg name="WinJS.Binding.ListBase.createGrouped_p:groupData">Funzione che accetta un singolo argomento. La funzione viene chiamata su un elemento dell'elenco per ogni gruppo. Deve restituire il valore che deve essere impostato come dati dell'elemento dell'elenco .groups per questo gruppo.</msg>
  <msg name="WinJS.Binding.ListBase.createGrouped_p:groupSorter">Funzione che accetta due argomenti. La funzione viene chiamata con la chiave dei gruppi trovati nell'elenco. Deve restituire uno dei valori numerici seguenti: negativo se il primo argomento è minore del secondo, zero se i due argomenti sono equivalenti, positivo se il primo argomento è maggiore del secondo. Se omesso, i gruppi vengono disposti nell'ordine dei caratteri ASCII crescente.</msg>
  <msg name="WinJS.Binding.ListBase.createGrouped_returnValue">Proiezione raggruppata sull'elenco.</msg>
  <msg name="WinJS.Binding.ListBase.createSorted">Crea una proiezione ordinata attiva su questo elenco. Se l'elenco viene modificato, la proiezione ordinata reagisce alle modifiche e potrebbe anch'essa cambiare.</msg>
  <msg name="WinJS.Binding.ListBase.createSorted_p:sorter">Funzione che accetta due argomenti. La funzione viene chiamata con elementi dell'elenco. Deve restituire uno dei valori numerici seguenti: negativo se il primo argomento è minore del secondo, zero se i due argomenti sono equivalenti, positivo se il primo argomento è maggiore del secondo.</msg>
  <msg name="WinJS.Binding.ListBase.createSorted_returnValue">Proiezione ordinata sull'elenco.</msg>
  <msg name="WinJS.Binding.ListProjection.dispose">Disconnette la proiezione WinJS.Binding.List dall'elemento WinJS.Binding.List sottostante. È importante solo se hanno durate diverse.</msg>
  <msg name="WinJS.Binding.ListProjection.getItemFromKey">Ottiene una coppia di dati/chiavi per la chiave specificata.</msg>
  <msg name="WinJS.Binding.ListProjection.move">Sposta il valore in corrispondenza dell'indice nella posizione specificata.</msg>
  <msg name="WinJS.Binding.FilteredListProjection.length">Restituisce un valore integer incrementato di uno rispetto all'elemento più elevato definito in un elenco.</msg>
  <msg name="WinJS.Binding.FilteredListProjection.getItem">Restituisce una coppia di dati/chiavi per l'indice specificato.</msg>
  <msg name="WinJS.Binding.FilteredListProjection.getItem_p:index">Indice del valore da recuperare.</msg>
  <msg name="WinJS.Binding.FilteredListProjection.indexOfKey">Restituisce l'indice della prima occorrenza di una chiave in un elenco.</msg>
  <msg name="WinJS.Binding.SortedListProjection.length">Ottiene o imposta la lunghezza dell'elenco. Restituisce un valore integer incrementato di uno rispetto all'elemento più elevato definito in un elenco.</msg>
  <msg name="WinJS.Binding.SortedListProjection.getItem">Restituisce l'indice della prima occorrenza di una chiave.</msg>
  <msg name="WinJS.Binding.GroupedSortedListProjection.groups">Ottiene un elemento WinJS.Binding.List, ovvero una proiezione dei gruppi identificati in questo elenco.</msg>
  <msg name="WinJS.Binding.GroupedSortedListProjection.getItemFromKey">Ottiene una coppia di dati/chiavi per la chiave elemento specificata.</msg>
  <msg name="WinJS.Binding.GroupsListProjection.length">Ottiene la lunghezza dell'elenco. Restituisce un valore integer incrementato di uno rispetto all'elemento più elevato definito in un elenco.</msg>
  <msg name="WinJS.Binding.GroupsListProjection.getItem">Ottiene una coppia di dati/chiavi per l'indice specificato.</msg>
  <msg name="WinJS.Resources.processAll">Elabora il tag risorse e sostituisce le stringhe con stringhe localizzate.</msg>
  <msg name="WinJS.Resources.processAll_p:rootElement">Elemento DOM in corrispondenza del quale avviare l'elaborazione. processAll elabora l'elemento e i relativi elementi figlio. Se non si specifica l'elemento radice, processAll elabora l'intero documento.</msg>
</messagebundle>