<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.IListDataSource.endEdits">一連の編集が終了したことをデータ ソースに通知します。データ ソースは IListNotificationHandler.beginNotifications と endNotifications を、一連の編集に対してそれぞれ一度呼び出します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">項目をデータ ソースの最後に移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_p:key">移動する項目のキー。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_returnValue">移動された IItem またはエラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.StorageDataSource">IStorageQueryResultBase を列挙するデータ ソースを作成します。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">列挙するオブジェクト。これは IStorageQueryResultBase をサポートする必要があります。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">データ ソースのためのオプションを指定するオブジェクト。このパラメーターは省略できます。これは、以下のプロパティを含むことがあります。mode: Windows.Storage.FileProperties.ThumbnailMode - サムネイルを要求するかどうかと、要求するサムネイルの型を指定する値。requestedThumbnailSize: サムネイルのサイズを指定する数値。thumbnailOptions: サムネイル用に追加のオプションを指定する Windows.Storage.FileProperties.ThumbnailOptions 値。waitForFileLoad: True に設定すると、データ ソースはプロパティとサムネイルを読み込んだ後に項目を返します。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">提供された項目の完全な品質のサムネイルがイメージ要素に描画されたときに完了する、イメージ要素の約束を返します。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">サムネイルを取得する対象の項目。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">使用するイメージ要素。提供されない場合は、新しいイメージ要素が作成されます。</msg>
  <msg name="WinJS.UI.FlipView.constructor">新しい FlipView を作成します。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。たとえば、pageselected イベントのハンドラーを作成するには、"onpageselected" という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">新しい FlipView コントロール。</msg>
  <msg name="WinJS.UI.FlipView.dispose">この FlipView を破棄します。</msg>
  <msg name="WinJS.UI.FlipView.next">次のアイテムに移動します。</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">FlipView が次のページに移動し始めたら True、FlipView が最後のページにあるか、別のナビゲーションのアニメーション中である場合は False。</msg>
  <msg name="WinJS.UI.FlipView.previous">前の項目に移動します。</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">FlipView が前のページに移動し始めたら True、FlipView が既に最初のページにあるか、別のナビゲーションのアニメーション中である場合は False。</msg>
  <msg name="WinJS.UI.FlipView.element">FlipView コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.FlipView.currentPage">現在表示されているページのインデックスを取得または設定します。最小値は 0、最大値はデータ ソースによって返される項目の合計数よりも 1 つ少ない数です。</msg>
  <msg name="WinJS.UI.FlipView.orientation">FlipView の配置が水平方向か垂直方向かを取得または設定します。</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">表示する項目を FlipView に提供するデータ ソースを取得または設定します。FlipView は一度に 1 項目ずつ、各ページに表示します。</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">WinJS.Binding.Template または各項目のページの HTML を定義する関数を取得または設定します。</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">項目の間隔をピクセル単位で取得または設定します。</msg>
  <msg name="WinJS.UI.FlipView.count">FlipView のオブジェクトの itemDataSource の項目数を返します。</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">リストまたは数が使用できない場合は WinJS.UI.CountResult.unknown の項目数を含む約束。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">ページ間を移動すると FlipView のカスタム アニメーションを使用するように設定します。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">次へ、前へ、ジャンプの各ナビゲーション操作のための 3 フィールドを最大で含むオブジェクト。これらの各フィールドは function (outgoingPage, incomingPage) のシグニチャを持つ関数である必要があります。この関数はアニメーションが一度終了したら完了する WinJS.Promise オブジェクトを返します。フィールドが空白または未定義の場合、FlipView はその操作の既定のアニメーションに戻ります。</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">FlipView のレイアウトを強制的に更新します。FlipView を再度表示するときに、style.display のプロパティを "none" に設定した後でこの関数を使用します。</msg>
  <msg name="WinJS.UI.FlipView">一連の写真などのコレクションを一度に 1 項目ずつ表示します。</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">itemDataSource の項目の数が変更されると発生します。</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">FlipView のページが表示または非表示に切り替わったときに発生します。</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">FlipView がページをめくるときに発生します。</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">FlipView がページをめくり、レンダラーの関数が完了するときに発生します。</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">FlipView のコントロール全体。</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">FlipView のすべてのナビゲーション ボタンのための汎用クラス。</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">ナビゲーションの左ボタン。</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">ナビゲーションの右ボタン。</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">ナビゲーションの上ボタン。</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">ナビゲーションの下ボタン。</msg>
  <msg name="WinJS.UI._LayoutCommon.groupHeaderPosition">アイテムに関連するグループ ヘッダーの位置を取得または設定します。既定値は "上" です。</msg>
  <msg name="1">レイアウトの方向を取得または設定します。既定値は "horizontal" です。</msg>
  <msg name="WinJS.UI.Layout.constructor">新しいレイアウト オブジェクトを作成します。</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">新しいレイアウト オブジェクトに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">新しいレイアウト オブジェクト。</msg>
  <msg name="WinJS.UI._LegacyLayout.disableBackdrop">仮想化されたリストをパンする間に空白領域を避けるバックドロップ機能を、レイアウトが無効にする必要があるかどうかを示す値を取得または設定します。disableBackdrop は現在使用されていません。スタイル: .win-listview .win-container.win-backdrop { background-color:transparent; } を代わりに使用してください。</msg>
  <msg name="WinJS.UI._LegacyLayout.backdropColor">バックドロップで使用する既定のパターンの塗りつぶしの色を取得または設定します。既定値は "rgba (155,155,155,0.23)" です。backdropColor は現在使用されていません。スタイル: .win-listview .win-container.win-backdrop { rgba(155,155,155,0.23); } を代わりに使用してください。</msg>
  <msg name="WinJS.UI.GridLayout">新しい GridLayout を作成します。</msg>
  <msg name="WinJS.UI.GridLayout_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">新しい GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout.maximumRowsOrColumns">方向に応じて、行または列の最大数を取得します。これは、レイアウトの折り返しを行う前に存在している必要のある数値です。値 0 は、最大値がないことを示します。既定値は 0 です。</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">ListView によって表示される行の最大数を取得または設定します。WinJS.UI.GridLayout.maxRows は、JavaScript 用 Windows ライブラリ 2.0 より後では、変更されるか利用できない可能性があります。代わりに maximumRowsOrColumns プロパティを使用してください。</msg>
  <msg name="WinJS.UI.GridLayout.itemInfo">項目のサイズと、項目を新しい列に配置する必要があるかどうかを決定します。GridLayout.itemInfo は、将来のバージョンでは変更されるか利用できない可能性があります。代わりに、CellSpanningLayout を使用してください。</msg>
  <msg name="WinJS.UI.GridLayout.groupInfo">グループに、複数の項目にまたがるセルがあることを表し、そのセルのサイズを指定します。GridLayout.groupInfo は、将来のバージョンでは変更されるか利用できない可能性があります。代わりに、CellSpanningLayout を使用してください。</msg>
  <msg name="WinJS.UI.ListLayout">新規 ListView オブジェクトを作成します。</msg>
  <msg name="WinJS.UI.ListLayout_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、そのオブジェクトのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">新しい ListLayout オブジェクト。</msg>
  <msg name="WinJS.UI.CellSpanningLayout">新しい CellSpanningLayout オブジェクトを作成します。</msg>
  <msg name="WinJS.UI.CellSpanningLayout_p:options">新しいオブジェクトに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、そのオブジェクトのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。</msg>
  <msg name="WinJS.UI.CellSpanningLayout_returnValue">新しい CellSpanningLayout オブジェクト。</msg>
  <msg name="WinJS.UI.CellSpanningLayout.maximumRowsOrColumns">コンテンツの折り返しを開始する前に、方向に応じて表示する行または列の最大数を取得または設定します。値 0 は、最大値がないことを示します。</msg>
  <msg name="WinJS.UI.CellSpanningLayout.itemInfo">項目の幅と高さ、およびその項目を新しい列に表示するかどうかを返す関数を取得または設定します。この関数を設定すると、ListView が最初に項目を測定する必要なしで項目の領域を割り当てることができるため、パフォーマンスが向上します。この関数は、表示しようとする項目のインデックスを表す、1 つのパラメーターを受け取ります。関数は、次の 3 つのプロパティを持つ 1 つのオブジェクトを返します。width: 項目全体の幅。height: 項目全体の高さ。newColumn: 段区切りを作成する場合は True に設定され、それ以外の場合は False。</msg>
  <msg name="WinJS.UI.CellSpanningLayout.groupInfo">セルがまたがる範囲を有効にし、基本セルのサイズを確立する関数を取得または設定します。この関数は、次のプロパティを持つ 1 つのオブジェクトを返します。enableCellSpanning: ListView が複数のサイズの項目を持つことを許可する場合は、True に設定。cellWidth: 基本セルの幅。cellHeight: 基本セルの高さ。</msg>
  <msg name="2">レイアウトの方向を取得します。CellSpanning レイアウトでは水平方向のみをサポートします。</msg>
  <msg name="WinJS.UI.ListView.constructor">新しい ListView を作成します。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">ListView コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。たとえば、selectionchanged イベントのハンドラーを作成するには、"onselectionchange" という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">新しい ListView。</msg>
  <msg name="WinJS.UI.ListView.element">ListView をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.ListView.layout">ListView のレイアウトをコントロールするオブジェクトを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">loadingBehavior プロパティがインクリメンタルに設定されている場合に、pagesToLoadThreshold プロパティで指定したしきい値を超えてユーザーがスクロールするときに読み込むページ数を取得または設定します。pagesToLoad は現在使用されていません。コントロールはこのプロパティを使用しません。インクリメントの読み込み動作を実装する方法については、SDK サンプルの "ListView loading behaviors (ListView の読み込み動作)" を参照してください。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">インクリメンタル読み取りを開始するためのしきい値 (ページ数) を取得または設定します。リストの読み込まれた部分の終わりから数えて、表示される最後の項目が指定したページ数以内のとき、automaticallyLoadPages が True かつ loadingBehavior が "incremental" に設定されている場合に、ListView はインクリメンタル読み取りを開始します。pagesToLoadThreshold は現在使用されていません。コントロールはこのプロパティを使用しません。インクリメントの読み込み動作を実装する方法については、SDK サンプルの "ListView loading behaviors (ListView の読み込み動作)" を参照してください。</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">itemDataSource の項目のグループを含むデータ ソースを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">pagesToLoadThreshold のプロパティで指定したページ数を超えてユーザーがスクロールするときに、次の数ページが自動的に読み込まれるかどうかを示す値を取得または設定します。automaticallyLoadPages は現在使用されていません。コントロールは、既定でこのプロパティを False に設定します。インクリメントの読み込み動作を実装する方法については、SDK サンプルの "ListView loading behaviors (ListView の読み込み動作)" を参照してください。</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">DOM に読み込まれるデータ項目の数を決定する値を取得または設定します。pagesToLoadThreshold は現在使用されていません。コントロールは、既定でこのプロパティを "randomAccess" に設定します。インクリメントの読み込み動作を実装する方法については、SDK サンプルの "ListView loading behaviors (ListView の読み込み動作)" を参照してください。</msg>
  <msg name="WinJS.UI.ListView.selectionMode">ユーザーが選択できる ListView の項目数を指定する値を、"none"、"single"、"multi" から取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">ユーザーが項目をタップまたはクリックしたときの ListView の動作を取得または設定します。タップまたはクリックで、項目を起動する、項目を選択して起動する、または何もしない設定にすることができます。</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTapBehavior">ユーザーがグループ ヘッダーをタップまたはクリックしたときの ListView の動作を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">スワイプ操作したときの ListView の動作を取得または設定します。スワイプ操作でスワイプした項目を選択することも、現在選択している項目のままにすることもできます。</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">ListView の項目を提供するデータ ソースを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">itemDataSource の項目ごとに DOM 要素を作成するテンプレート関数を取得または設定します。各項目に複数の DOM 要素を含めることができますが、ルート要素は単一にすることをお勧めします。</msg>
  <msg name="WinJS.UI.ListView.resetItem">ListView が項目の要素に関する表示を再利用するときに呼び出される関数を取得または設定します。resetItem は、将来のバージョンで変更されるか利用できない可能性があります。代わりに WinJS.Utilities.markDisposable を使用し、要素に対して、破棄可能というマークを付けます。</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">groupDataSource のグループ ヘッダーごとに DOM 要素を作成するテンプレート関数を取得または設定します。各グループ ヘッダーに複数の要素を含めることができますが、ルート要素は単一にしてください。</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">ListView がグループ ヘッダーの DOM 要素に関する表示を再利用するときに呼び出される関数を取得または設定します。resetGroupHeader は、将来のバージョンで変更されるか利用できない可能性があります。代わりに WinJS.Utilities.markDisposable を使用し、ヘッダー要素に対して、破棄可能というマークを付けます。</msg>
  <msg name="WinJS.UI.ListView.loadingState">ListView が読み込み中かどうか、読み込みが完了したかどうかを示す値を取得します。このプロパティは "itemsLoading"、"viewPortLoaded"、"itemsLoaded"、"complete" から、どれか 1 つを返すことができます。</msg>
  <msg name="WinJS.UI.ListView.selection">現在選択されている項目を含む ISelection オブジェクトを取得します。</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">表示される最初の項目を取得または設定します。このプロパティを設定するときに、指定されたインデックスを持つ項目がリストの先頭になるように ListView がスクロールします。</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">表示される最後の項目のインデックスを取得します。</msg>
  <msg name="WinJS.UI.ListView.currentItem">どの項目がキーボード フォーカスとフォーカスの状態を取得するかを示すオブジェクトを取得または設定します。オブジェクトには以下のプロパティがあります。index: itemDataSource の項目のインデックス。key: itemDataSource の項目のキー。hasFocus: このプロパティを取得するときに、項目に既にフォーカスがある場合はこの値は True になり、それ以外の場合は False になります。このプロパティを設定するときに、項目をすぐにフォーカスする場合はこの値を True に設定し、それ以外の場合は False に設定して項目を最終的にフォーカスするようにします。showFocus: 項目がフォーカス四角形を表示する場合は True、それ以外の場合は False にします。</msg>
  <msg name="WinJS.UI.ListView.zoomableView">ZoomableView を取得します。この API は SemanticZoom インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</msg>
  <msg name="WinJS.UI.ListView.itemsDraggable">ListView の項目がドラッグ アンド ドロップ操作でドラッグできるかどうかを取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.itemsReorderable">ListView の項目がドラッグ アンド ドロップ操作により、ListView 自体の中で順序を再変更できるかどうかを取得または設定します。ListView が順序再変更可能としてマークされている場合は、ListView 自体の中で項目をドラッグできますが、ListView が itemdrag イベントを発生させてそのイベントを処理する必要はありません。</msg>
  <msg name="WinJS.UI.ListView.maxDeferredItemCleanup">実現された項目の最大数を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.dispose">この ListView を破棄します。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">指定したインデックスにある項目を表す DOM 要素を返します。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">項目のインデックス。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">指定された項目を表す DOM 要素。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">指定された DOM 要素を表示する項目のインデックスを返します。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">指定された項目を表示する DOM 要素。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">指定された DOM 要素を表示する項目のインデックス。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">指定された項目を表示します。必要に応じて ListView が項目のところまでスクロールします。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:value">表示する ListView 項目または IListViewEntity のインデックス。</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">ListView オブジェクトの loadingBehavior がインクリメンタルに設定されている場合、次のページ セットを読み込みます。loadMorePages は現在使用されていません。この関数を呼び出しても、影響はありません。インクリメントの読み込み動作を実装する方法については、SDK サンプルの "ListView loading behaviors (ListView の読み込み動作)" を参照してください。</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">サイズが変更された項目を調整するために、ListView の表示される項目すべての位置を変更します。ListView の style.display プロパティを "none" に設定した後、または ListView やその項目のサイズや位置に影響する方法でスタイルの変更を加えた後で、ListView が再度表示されるようにするには、この関数または forceLayout を使用してください。forceLayout とは異なり、このメソッドは項目を再作成せず、開始アニメーションも表示しません。</msg>
  <msg name="WinJS.UI.ListView.forceLayout">ListView のレイアウトを強制的に更新します。ListView の style.display プロパティを "none" に設定した後、または ListView やその項目のサイズや位置に影響する方法でスタイルの変更を加えた後で、ListView が再度表示されるようにするには、この関数または relcaculateItemPosition を使用してください。</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">ListView のスクロール バーの位置を取得または設定します。</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">ListView の廃棄サービスを手動でトリガーします。通常の操作では、ListView のインスタンス作成時にトリガーされます。ただし、シナリオによっては廃棄サービスを手動で実行する方が適切な場合があります。</msg>
  <msg name="WinJS.UI.ListView">項目をカスタマイズ可能な一覧またはグリッド形式で表示します。</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">ListView が開始または遷移のアニメーションを再生しようとしているときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">ユーザーが項目をタップまたはクリックしたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:groupheaderinvoked">ユーザーがグループ ヘッダーをタップまたはクリックしたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">項目が選択または選択解除される前に発生します。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">項目が選択または選択解除された後に発生します。</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">読み込みの状態が変更されたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">フォーカスしている項目が変更されたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragstart">ユーザーが ListView 項目のドラッグを開始するときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragenter">ユーザーが ListView へのドラッグを実行したときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragend">ListView の中で開始されたドラッグ操作が終了したときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragbetween">ユーザーが 2 つの ListView 項目の間でドラッグを実行したときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragleave">ユーザーが ListView 領域の外部でドラッグを実行したときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragchanged">データソースの変更が原因で、ドラッグされている最中の項目に変更が加えられたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragdrop">ユーザーが ListView に項目をドロップしたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_e:accessibilityannotationcomplete">ListView 項目に対してアクセシビリティ属性が追加されたときに発生します。</msg>
  <msg name="WinJS.UI.ListView_part:listView">ListView のコントロール全体。</msg>
  <msg name="WinJS.UI.ListView_part:viewport">ListView のビューポート。</msg>
  <msg name="WinJS.UI.ListView_part:surface">ListView のスクロール可能な領域。</msg>
  <msg name="WinJS.UI.ListView_part:item">ListView の項目。</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">選択のチェックマークの背景。</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">選択のチェックマーク。</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">グループのヘッダー。</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">ListView の進行状況インジケーター。</msg>
  <msg name="WinJS.UI.Repeater.constructor">Repeater コントロールを新規に作成します。</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:element">新しいコントロールをホストする DOM 要素。この値が null の場合は、Repeater は要素を作成します。</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:options">新しい Repeater に適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、そのオブジェクトのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。</msg>
  <msg name="WinJS.UI.Repeater.constructor_returnValue">新しい Repeater コントロール。</msg>
  <msg name="WinJS.UI.Repeater.element">Repeater をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.Repeater.data">表示する項目を Repeater コントロールに提供する WinJS.Binding.List を取得または設定します。</msg>
  <msg name="WinJS.UI.Repeater.template">Repeater 内の各項目の HTML を定義する、テンプレートまたはカスタム レンダリング関数を取得または設定します。</msg>
  <msg name="WinJS.UI.Repeater.length">Repeater コントロール内の項目の数を取得します。</msg>
  <msg name="WinJS.UI.Repeater.elementFromIndex">指定したインデックスを持つ項目に対応する HTML 要素を返します。</msg>
  <msg name=" WinJS.UI.Repeater.elementFromIndex_returnValue">指定した項目に対応する DOM 要素。</msg>
  <msg name="WinJS.UI.Repeater.dispose">ガベージ コレクションを行う目的でこの Repeater を準備します。</msg>
  <msg name="WinJS.UI.Repeater">テンプレートを使用してデータ セットから HTML を生成します。</msg>
  <msg name="WinJS.UI.Repeater_part:repeater">Repeater コントロール自体。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">選択を解除します。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">解除が完了したときに満たされる約束。</msg>
  <msg name="WinJS.UI._Selection.prototype.set">現在の選択が解除され、指定された項目と置換します。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">選択を構成する項目のインデックスまたはキー。項目パラメーターに異なる型のオブジェクトを提供できます。インデックス、キー、インデックス範囲を指定できます。これらのオブジェクトを 1 つ以上含む配列であることもあります。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">操作が完了したときに満たされる約束。</msg>
  <msg name="WinJS.UI._Selection.prototype.add">1 つ以上の項目を選択に追加します。</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">追加する項目のインデックスまたはキー。項目パラメーターに異なる型のオブジェクトを提供できます。インデックス、キー、インデックス範囲を指定できます。これらのオブジェクトを 1 つ以上含む配列であることもあります。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">指定した項目を選択から削除します。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">削除する項目のインデックスまたはキー。項目パラメーターに異なる型のオブジェクトを提供できます。インデックス、キー、インデックス範囲を指定できます。これらのオブジェクトを 1 つ以上含む配列であることもあります。</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">ListView のすべての項目を選択に追加します。</msg>
  <msg name="WinJS.UI._Overlay">オーバーレイ コントロールを作成し、基になる DOM 要素に関連付けます。</msg>
  <msg name="WinJS.UI._Overlay_p:element">オーバーレイ コントロールに関連付けられる DOM 要素。</msg>
  <msg name="WinJS.UI._Overlay_p:options">オーバーレイ コントロールに初期状態で適用されるオプションのセット。</msg>
  <msg name="WinJS.UI._Overlay_returnValue">完全に構築されたオーバーレイ コントロール。</msg>
  <msg name="WinJS.UI._Overlay.element">オーバーレイが関連付けられた DOM 要素。</msg>
  <msg name="WinJS.UI._Overlay.disabled">オーバーレイを無効にし、HTML の disabled 属性を取得または設定します。無効にした場合は、オーバーレイは show() と共に表示されなくなり、現在表示されている場合は非表示になります。</msg>
  <msg name="WinJS.UI.Overlay.dispose">この Overlay を破棄します。</msg>
  <msg name="WinJS.UI._Overlay.show">他の状態にかかわらず、非表示の場合、オーバーレイを表示します</msg>
  <msg name="WinJS.UI._Overlay.hide">他の状態にかかわらず、表示されている場合、オーバーレイを非表示にします</msg>
  <msg name="WinJS.UI._Overlay.hidden">読み取り専用、オーバーレイが現在表示されていない場合は True。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">このオーバーレイの DOM 要素にイベント リスナーを追加します</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">必須。追加する、"beforehide"、"afterhide"、"beforeshow" または "aftershow" のイベントの種類</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">必須。このイベントに関連付けるイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">省略可能。True の場合、イベント キャプチャ フェーズに登録します。イベント バブル フェーズの場合は False。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">このオーバーレイの DOM 要素からイベント リスナーを削除します。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">必須。削除する、"beforehide"、"afterhide"、"beforeshow" または "aftershow" のイベントの種類</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">AppBarCommand コントロールを新規作成します。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">コントロールをホストする DOM 要素。AppBarCommand は null の場合に 1 を作成します。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">新しい AppBarCommand に適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">新しい AppBarCommand コントロール。</msg>
  <msg name="WinJS.UI.AppBarCommand.id">AppBarCommand の ID を取得または設定します。</msg>
  <msg name="WinJS.UI.AppBarCommand.type">AppBarCommand の型を取得または設定します。有効な値は、"button"、"toggle"、"flyout"、または "separator" です。</msg>
  <msg name="WinJS.UI.AppBarCommand.label">AppBarCommand のラベルを取得または設定します。</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">AppBarCommand のアイコンを取得または設定します。</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">コマンドをクリックしたときに呼び出される関数を取得または設定します。</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">フライアウト型の AppBarCommands では、このプロパティは、このコマンドが呼び出した WinJS.UI.Flyout を返します。このプロパティを設定するときに、呼び出そうとしているフライアウトの String ID、フライアウトに対応する DOM オブジェクト、または WinJS.UI.Flayout オブジェクト自体を使用することもできます。</msg>
  <msg name="WinJS.UI.AppBarCommand.section">AppBarCommand が存在しているセクションを取得または設定します。有効な値は "selection" と "global" です。</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">AppBarCommand のツールヒント テキストを取得または設定します。</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">トグル ボタンの選択状態を設定または取得します。</msg>
  <msg name="WinJS.UI.AppBarCommand.element">AppBarCommad をホストする DOM 要素。</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">AppBarCommand が無効かどうかを示す値を取得または設定します。値 True の場合は AppBarCommand は無効であり、値 False の場合は有効です。</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">AppBarCommand が非表示であるか、非表示になるプロセスの途中であるかどうかを示す値を取得します。値が True の場合は、AppBarCommand が非表示であるか、非表示になるプロセスの途中であることを表します。</msg>
  <msg name="WinJS.UI.AppBarCommand.firstElementFocus">Home キーまたは方向キーを使用して前の AppBarCommand からこの AppBarCommand に フォーカスを移動するときに必ずフォーカスを受け取る必要がある "content" 型の AppBarCommand の中で、HTMLElement を取得または設定します。既定では、AppBarCommand オブジェクトのホスト要素を返します。</msg>
  <msg name="WinJS.UI.AppBarCommand.lastElementFocus">End キーまたは方向キーを使用して次の AppBarCommand からこの AppBarCommand にフォーカスが移動されようとするときに必ずフォーカスを受け取る必要がある "content" 型の AppBarCommand の中で、HTMLElement を取得または設定します。既定では、この AppBarCommand オブジェクトのホスト要素を返します。</msg>
  <msg name="WinJS.UI.AppBarCommand.dispose">このコントロールを破棄します。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">指定したイベントのイベント ハンドラーを登録します。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">必須。登録するイベントの名前。"beforeshow"、"beforehide"、"aftershow"、"afterhide" のいずれかであることが必要です。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:useCapture">省略可能。キャプチャ フェーズのイベント ハンドラーを登録するには True に設定します。それ以外の場合は、False に設定してバブル フェーズのイベント ハンドラーを登録します。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">addEventListener メソッドが登録したイベント ハンドラーを削除します。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">必須。削除するイベントの名前。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:listener">必須。削除するイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:useCapture">省略可能。キャプチャ フェーズのイベント ハンドラーを削除するには True に設定します。それ以外の場合は、False に設定してバブル フェーズのイベント ハンドラーを削除します。</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">構築時に余分な CSS クラスを追加します。</msg>
  <msg name="WinJS.UI.AppBarCommand">AppBar の中に表示するコマンドを表します。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">AppBarCommand コントロール自体。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">AppBarCommand のアイコン ボックス。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">AppBarCommand のアイコンのイメージ形式。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">AppBarCommand のアイコン リング。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">AppBarCommand のラベル</msg>
  <msg name="WinJS.UI.AppBar.constructor">AppBar コントロールを新規に作成します。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">新しい AppBar コントロールに適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">新しい AppBar コントロール。</msg>
  <msg name="WinJS.UI.AppBar.placement">ディスプレイ上の AppBar の位置。値は "top" または "bottom" です。</msg>
  <msg name="WinJS.UI.AppBar.layout">AppBar コンテンツのレイアウトを取得または設定します。"commands" または "custom" のどちらかです。</msg>
  <msg name="WinJS.UI.AppBar.sticky">AppBar が固定的かどうかを示す値を取得または設定します。この値は AppBar が固定的な場合は True です。それ以外の場合は False です。</msg>
  <msg name="WinJS.UI.AppBar.commands">AppBar に対応するコマンドを設定します。このプロパティは AppBarCommand オブジェクトから成る配列を受け取ります。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">この AppBar から、指定した ID を持つコマンドを取得します。複数のコマンドが見つかった場合は、このメソッドはそれらすべてを返します。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">返すコマンドの ID。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">見つかったコマンド、または複数のコマンドが同じ ID を持つ場合はそれらのコマンドから成る配列、またはコマンドが見つからない場合は Null。</msg>
  <msg name="WinJS.UI.AppBar.showCommands">AppBar のうち、指定したコマンドを表示します。</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">表示するコマンドから成る配列。配列要素として、複数の AppBarCommand オブジェクト、または複数のコマンドの文字列識別子 (ID) を使用できます。</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">AppBar のうち、指定したコマンドを非表示にします。</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">必須。非表示にするコマンド。文字列、DOM 要素、WinJS のオブジェクトのいずれか。</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">指定されたコマンドを表示し、AppBar のその他すべてのコマンドを非表示にします。</msg>
  <msg name="WinJS.UI.AppBar.show">他の状態にかかわらず、非表示の場合、AppBar を表示します</msg>
  <msg name="WinJS.UI.AppBar.hide">AppBar を非表示にします。</msg>
  <msg name="WinJS.UI.AppBar">表示するコマンドに対応するアプリケーション ツール バーを表します。</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">AppBar を表示する直前に発生します。</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">AppBar が完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">AppBar を非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">AppBar が完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">AppBar コントロール自体。</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">カスタム レイアウト AppBar に対応するスタイル。</msg>
  <msg name="WinJS.UI.Flyout.constructor">Flyout コントロールを新規に作成します。</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">新しい Flyout に適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">新しい Flyout コントロール。</msg>
  <msg name="WinJS.UI.Flyout.anchor">Flyout コントロールのアンカーを取得または設定します。アンカー要素は、Flyout を生成し、Flyout の位置の基準となる HTML 要素です (この設定は、Show メソッドを呼び出すときはオーバーライドされる可能性があります)。</msg>
  <msg name="WinJS.UI.Flyout.placement">この Flyout の既定の位置を取得または設定します (この設定は、Show メソッドを呼び出すときはオーバーライドされる可能性があります)。</msg>
  <msg name="WinJS.UI.Flyout.alignment">この Flyout の既定の配置を取得または設定します (この設定は、Show メソッドを呼び出すときはオーバーライドされる可能性があります)。</msg>
  <msg name="WinJS.UI.Flyout.show">他の状態にかかわらず、非表示の場合、Flyout を表示します</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">今回だけアンカーのプロパティをオーバーライドし、フライアウトを固定する DOM 要素、または DOM 要素の ID。</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">アンカーに対するフライアウトの位置 ("auto" (既定)、"top"、"bottom"、"left" または "right")。このパラメーターは、この表示のみ位置プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">"top" または "bottom" 位置の場合、アンカーの端に対するフライアウトの配置 ("center" (既定)、"left" または "right")。このパラメーターは、この表示のみ配置プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Flyout.hide">他の状態にかかわらず、表示されている場合、Flyout を非表示にします</msg>
  <msg name="WinJS.UI.Flyout">情報提示目的、またはユーザーの対話型操作を必要とする軽量 UI を表示します。ダイアログとは異なり、Flyout は、クリックするかタップする方法でライト ディスミスする (閉じる) ことができます。</msg>
  <msg name="WinJS.UI.Flyout_name">フライアウト</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">フライアウトを表示する直前に発生します。</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">フライアウトが完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">フライアウトを非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">フライアウトが完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">Flyout コントロール自体。</msg>
  <msg name="WinJS.UI.Menu.constructor">Menu コントロールを新規に作成します。</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">コントロールに適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">新しい Menu コントロール。</msg>
  <msg name="WinJS.UI.Menu.commands">メニュー内に表示される MenuCommand オブジェクトを設定します。1 つの MenuCommand、または複数の MenuCommand オブジェクトから成る配列に設定できます。</msg>
  <msg name="WinJS.UI.Menu.getCommandById">このメニューの指定された ID のコマンドを取得します。複数のコマンドがある場合、すべてが返されます。</msg>
  <msg name="WinJS.UI.Menu.getCommandById_p:id">検索するコマンドの ID。</msg>
  <msg name="WinJS.UI.Menu.showCommands">Menu のうち、指定したコマンドを表示します。</msg>
  <msg name="WinJS.UI.Menu.showCommands_p:commands">表示するコマンド。配列要素として、複数の Menu オブジェクト、または複数のコマンドの文字列識別子 (ID) を使用できます。</msg>
  <msg name="WinJS.UI.Menu.hideCommands">Menu を非表示にします。</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">Menu のうち指定したコマンドを表示し、他のすべてのコマンドを非表示にします。</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands_p:commands">表示するコマンド。配列要素として、複数の MenuCommand オブジェクト、または複数のコマンドの文字列識別子 (ID) を使用できます。</msg>
  <msg name="WinJS.UI.Menu.show">他の状態にかかわらず、非表示の場合、Menu を表示します</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">Menu を固定するための DOM 要素、または DOM 要素の ID。このパラメーターは、このメソッド呼び出しのみを対象とする anchor プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">アンカーに対するメニューの位置 ("auto" (既定)、"top"、"bottom"、"left" または "right")。このパラメーターは、このメソッド呼び出しのみを対象とする placement プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">"top" または "bottom" 位置の場合、アンカーの端に対するメニューの配置 ("center" (既定)、"left" または "right")。このパラメーターは、このメソッド呼び出しのみを対象とする alignment プロパティをオーバーライドします。</msg>
  <msg name="WinJS.UI.Menu">コマンドを表示するためのメニュー フライアウトを表します。</msg>
  <msg name="WinJS.UI.Menu_name">Menu</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">メニューを表示する直前に発生します。</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">メニューが完全に表示された直後に発生します。</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">メニューを非表示にする直前に発生します。</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">メニューが完全に非表示にされた直後に発生します。</msg>
  <msg name="WinJS.UI.Menu_part:menu">メニュー コントロール自体。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">MenuCommand オブジェクトを新規に作成します。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">新しい MenuCommand に適用するプロパティと値のセット。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">MenuCommand コントロール。</msg>
  <msg name="WinJS.UI.MenuCommand.id">MenuCommand の ID を取得します。</msg>
  <msg name="WinJS.UI.MenuCommand.type">MenuCommand の型を取得します。有効な値は、"button"、"toggle"、"flyout"、または "separator" です。</msg>
  <msg name="WinJS.UI.MenuCommand.label">MenuCommand のラベル</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">フライアウト型の MenuCommands では、このプロパティは、このコマンドが呼び出した WinJS.UI.Flyout を返します。このプロパティを設定するときに、Flyout の文字列 ID、Flyout をホストする DOM オブジェクト、または Flyout オブジェクト自体に設定することもできます。</msg>
  <msg name="WinJS.UI.MenuCommand.selected">トグル ボタンの選択状態を取得または設定します。この値はトグル ボタンが選択されている場合は True です。それ以外の場合は False です。</msg>
  <msg name="WinJS.UI.MenuCommand.element">この MenuCommand をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.MenuCommand.disabled">MenuCommand が無効かどうかを示す値を取得または設定します。この値は MenuCommand が無効な場合は True です。それ以外の場合は False です。</msg>
  <msg name="WinJS.UI.MenuCommand.hidden">コマンドが現在非表示かどうかを判断します。</msg>
  <msg name="WinJS.UI.MenuCommand.extraClass">ホスト DOM 要素に適用される追加 CSS クラスを取得または設定します。</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:type">登録するイベントの名前。</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:listener">イベントを処理する関数。</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:useCapture">キャプチャ フェーズのイベント ハンドラーを登録するには True に設定します。それ以外の場合は、False に設定してバブル フェーズのイベント ハンドラーを登録します。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener">addEventListener メソッドが登録したうち、指定したイベント ハンドラーを削除します。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:type">削除するイベントの名前。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:listener">削除するイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:useCapture">キャプチャ フェーズのイベント ハンドラーを削除するには True に設定します。バブル フェーズのイベント ハンドラーを削除するには False に設定します。</msg>
  <msg name="WinJS.UI.MenuCommand">Menu の中に表示するコマンドを表します。MenuCommand オブジェクトは、Menu コントロールに対応するボタン、トグル ボタン、フライアウト ボタン、または区切り記号の機能を提供します。</msg>
  <msg name="WinJS.UI.MenuCommand_name">MenuCommand コントロール自体。</msg>
  <msg name="WinJS.UI.Pivot.constructor">Pivot コントロールを新規に作成します。</msg>
  <msg name="WinJS.UI.Pivot.constructor_p:element">Pivot コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.Pivot.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。たとえば、インデックス変更イベントのハンドラーを作成するには、"onselectionchange" という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。</msg>
  <msg name="WinJS.UI.Pivot.constructor_returnValue">新しい Pivot。</msg>
  <msg name="WinJS.UI.Pivot.element">Pivot をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.Pivot.locked">Pivot を現在の項目に対してロックするかどうかを指定する値を取得または設定します。</msg>
  <msg name="WinJS.UI.Pivot.items">この Pivot に属する PivotItem オブジェクトの WinJS.Binding.List を取得または設定します。</msg>
  <msg name="WinJS.UI.Pivot.title">Pivot のタイトルを取得または設定します。</msg>
  <msg name="WinJS.UI.Pivot.selectedIndex">ビュー内の項目のインデックスを取得または設定します。このプロパティは、アプリケーションを起動または再開するときに前のビューを復元する場合に役立ちます。</msg>
  <msg name="WinJS.UI.Pivot.selectedItem">ビュー内の項目を取得または設定します。このプロパティは、アプリケーションを起動または再開するときに前のビューを復元する場合に役立ちます。</msg>
  <msg name="WinJS.UI.Pivot">コンテンツの項目を表示するタブ コントロール。</msg>
  <msg name="WinJS.UI.Pivot_e:selectionchanged">画面の項目が変更された場合に発生します。</msg>
  <msg name="WinJS.UI.Pivot_e:itemloaded">項目のアニメーションが開始する時に発生します。</msg>
  <msg name="WinJS.UI.Pivot_e:itemanimationend">項目のアニメーションが終了する時に発生します。</msg>
  <msg name="WinJS.UI.Pivot_part:pivot">Pivot コントロール全体。</msg>
  <msg name="WinJS.UI.Pivot_part:title">Pivot コントロールのタイトル。</msg>
  <msg name="WinJS.UI.Pivot_part:header">Pivot Item のヘッダー。</msg>
  <msg name="WinJS.UI.Pivot_part:progress">Pivot の進行状況インジケーター。</msg>
  <msg name="WinJS.UI.PivotItem.constructor">新しい PivotItem を作成します。</msg>
  <msg name="WinJS.UI.PivotItem.constructor_p:element">PivotItem コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.PivotItem.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。</msg>
  <msg name="WinJS.UI.PivotItem.constructor_returnValue">新しい PivotItem。</msg>
  <msg name="WinJS.UI.PivotItem.element">PivotItem をホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.PivotItem.contentElement">PivotItem のコンテンツをホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.PivotItem.header">PivotItem のヘッダーを取得または設定します。このプロパティを設定した後、Pivot はヘッダーを再度表示します。</msg>
  <msg name="WinJS.UI.PivotItem">Pivot コントロールの項目を定義します。</msg>
  <msg name="WinJS.UI.PivotItem_part:pivotitem">PivotItem コントロール全体。</msg>
  <msg name="WinJS.UI.PivotItem_part:content">PivotItem のコンテンツ領域。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor">ItemContainer コントロールを新規に作成します。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:element">ItemContainer コントロールをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。たとえば、selectionchanging イベントのハンドラーを作成するには、"selectionchanging" という名前のプロパティをオプションのオブジェクトに追加し、その値をイベント ハンドラーに設定します。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_returnValue">新しい ItemContainer コントロール。</msg>
  <msg name="WinJS.UI.ItemContainer.element">itemContainer コントロールをホストする DOM 要素を取得します。</msg>
  <msg name="WinJS.UI.ItemContainer.draggable">項目がドラッグ可能かどうかを指定する値を取得または設定します。既定値は false です。</msg>
  <msg name="WinJS.UI.ItemContainer.selected">項目が選択可能かどうかを指定する値を取得または設定します。</msg>
  <msg name="WinJS.UI.ItemContainer.swipeOrientation">ItemContainer コントロールのスワイプ方向を取得または設定します。既定値は "vertical" です。</msg>
  <msg name="WinJS.UI.ItemContainer.tapBehavior">ユーザーが項目をタップまたはクリックしたときの ItemContainer コントロールの動作を取得または設定します。タップまたはクリックで、項目を起動する、項目を選択して起動する、または何もしない設定にすることができます。使用可能な値は、"toggleSelect"、"invokeOnly"、および "none" です。既定値は "invokeOnly" です。</msg>
  <msg name="WinJS.UI.ItemContainer.swipeBehavior">ItemContainer コントロールが、スワイプの対話型操作に応答する方法を取得または設定します。スワイプ操作で項目を選択することも、現在選択している項目のままにすることもできます。使用可能な値は、"select"、または "none" です。既定値は "select" です。</msg>
  <msg name="WinJS.UI.ItemContainer.selectionDisabled">項目の選択が無効かどうかを取得または設定します。既定値は false です。</msg>
  <msg name="WinJS.UI.ItemContainer.forceLayout">ItemContainer コントロールのレイアウトを強制的に更新します。コントロールの初期化後、アプリケーションの読み取り方向を変更するときにこの関数を使用します。</msg>
  <msg name="WinJS.UI.ItemContainer">プッシュ、スワイプ、およびドラッグが可能な項目を定義します。</msg>
  <msg name="WinJS.UI.ItemContainer_e:invoked">ユーザーが項目をタップまたはクリックしたときに発生します。</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanging">項目が選択または選択解除される前に発生します。</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanged">項目が選択または選択解除された後に発生します。</msg>
  <msg name="WinJS.UI.ItemContainer_part:itemcontainer">選択項目のコントロールに対応するメイン コンテナー。</msg>
  <msg name="WinJS.UI.ItemContainer_part:focusedoutline">メイン コンテナーにキーボード フォーカスが設定されているときに、アウトラインを表示するために使用します。</msg>
  <msg name="WinJS.UI.Tooltip.constructor">新しいツール ヒントを作成します。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">ツール ヒントをホストする DOM 要素。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">新しいコントロールに適用するプロパティと値のペアを 1 つ以上含むオブジェクト。オプションのオブジェクトの各プロパティは、コントロールのプロパティまたはイベントの 1 つに対応します。イベント名は "on" で始めてください。たとえば、opened イベントのハンドラーを作成するには、"onopened" という名前のプロパティをオプションのオブジェクトに追加し、イベント ハンドラーに値を設定します。このパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">新しいツールヒント。</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">ツール ヒントの HTML コンテンツを取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.element">ツール ヒントをホストする DOM 要素を取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">ツール ヒントのコンテンツとなる DOM 要素を取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.placement">ターゲット要素に対するツールヒントの位置を、上、下、左、右から取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.infotip">ツール ヒントがヒントかどうか、ツール ヒントに多くの情報が含まれており、一般的なツールヒントより長く表示する必要があるかを指定する値を取得または設定します。既定値は false です。</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">ツール ヒント コントロール ホスト要素に適用する、追加の CSS クラスを取得または設定します。</msg>
  <msg name="WinJS.UI.Tooltip.dispose">この Tooltip を破棄します。</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:eventName">イベントの名前です。</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:eventCallback">このイベントに関連付けるイベント ハンドラー関数。</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:capture">キャプチャ フェーズのイベント ハンドラーを登録するには True に設定します。バブル フェーズのイベント ハンドラーを登録するには False に設定します。</msg>
  <msg name="WinJS.UI.Tooltip.removeEventListener">指定したイベントのイベント ハンドラーの登録を解除します。</msg>
  <msg name="WinJS.UI.Tooltip.removeEventListener:capture">キャプチャ フェーズのイベント ハンドラーの登録を解除するには True に設定します。それ以外は、False に設定してバブル フェーズのイベント ハンドラーの登録を解除します。</msg>
  <msg name="WinJS.UI.Tooltip.open">ツール ヒントを表示します。</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">表示するツール ヒントの型。"touch"、"mouseover"、"mousedown" または "keyboard"。既定値は "mousedown" です。</msg>
  <msg name="WinJS.UI.Tooltip.close">ツールヒントを非表示にします。</msg>
  <msg name="WinJS.UI.Tooltip">画像と書式設定を含むことができるツールヒントを表示します。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">ツールヒントが表示されようとしているときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">ツールヒントが表示されているときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">ツールヒントが非表示にされようとしているときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:close">ツールヒントが非表示のときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">ツールヒント コントロール全体。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">展開アニメーションを作成します。ExpandAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、ExpandAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">表示された単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">展開によって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す ExpandAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">折りたたみのアニメーションを作成します。CollapseAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、CollapseAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">ビューから削除される単一の要素または要素のコレクション。アニメーションが完了すると、アプリケーションは要素を非表示にするか、ドキュメントから削除する必要があります。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">折りたたみによって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す CollapseAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">位置変更のアニメーションを作成します。RepositionAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、RepositionAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">位置が変更された単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す RepositionAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.fadeIn">フェード イン アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">フェード インする単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">アニメーションが終了すると完了する約束のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.fadeOut">フェード アウト アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">フェード アウトする単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">リストに追加するアニメーションを作成します。AddToListAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、AddToListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">追加された単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">追加によって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す AddToListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">リストから削除するアニメーションを作成します。DeleteFromListAnimation オブジェクトを作成した後、削除を反映するためにドキュメントを修正し、DeleteFromListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">削除される単一の要素または要素のコレクション。アニメーションが完了すると、アプリケーションは要素を非表示にするか、ドキュメントから削除する必要があります。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">削除によって位置に影響がある単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す DeleteFromListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">検索結果のリストに追加するアニメーションを作成します。これは AddToListAnimation に似ていますが、より高速です。AddToSearchListAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、AddToSearchListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す AddToSearchListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">検索結果のリストから削除するアニメーションを作成します。これは DeleteFromListAnimation に似ていますが、より高速です。DeleteFromSearchListAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、DeleteFromSearchListAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す DeleteFromSearchListAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">画面の端の位置に要素をスライドします。このアニメーションは appbar のような小さいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">位置にスライドされる単一の要素または要素のコレクション。関数が呼び出されたとき、要素は最終的な位置にある必要があります。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの開始点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が要素のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:options">アニメーションの再生に使用するメカニズムを指定できる、オプションのオブジェクト。既定では css のアニメーションが使用されますが、{ mechanism: "transition" } が指定された場合は、css の遷移が使用されます。</msg>
  <msg name="WinJS.UI.Animation.showPanel">画面の端の位置に要素をスライドします。このアニメーションはキーボードのような大きいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">約束のオブジェクト</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">ビューの範囲外にある画面の端に要素をスライドします。このアニメーションは appbar のような小さいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">スライド アウトされる単一の要素または要素のコレクション。関数が呼び出されたとき、要素は画面上の位置にある必要があります。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの終了点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が要素のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.hidePanel">ビューの範囲外にある画面の端に要素をスライドします。このアニメーションはキーボードのような大きいオブジェクトのために設計されています。</msg>
  <msg name="WinJS.UI.Animation.showPopup">ポップアップ形式で要素を表示します。</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">ポップアップのように表示される単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.hidePopup">画面からポップアップを削除します。</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">ポップアップのように隠される単一の要素または要素のコレクション。アニメーションが完了すると、アプリケーションは要素を非表示にするか、ドキュメントから削除する必要があります。</msg>
  <msg name="WinJS.UI.Animation.pointerDown">ポインターダウンのアニメーションを実行します。このアニメーションの効果を反転させるために pointerUp のアニメーションを使用します。</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">ポインターダウンのイベントに応答する単一の要素または要素のコレクション。アニメーションの終了時に、ポインターダウンの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.pointerUp">ポインターアップのアニメーションを実行します。これは pointerDown アニメーションの効果を反転します。</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">ポインターアップのイベントに応答する単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">ドラッグ開始のアニメーションを実行します。このアニメーションの効果を反転させるために dragSourceEnd のアニメーションを使用します。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">ドラッグされている単一の要素または要素のコレクション。アニメーションの終了時に、ドラッグの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">ドラッグされていないことを強調する単一の要素または要素のコレクション。アニメーションの終了時に、ドラッグの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">ドラッグ終了のアニメーションを実行します。これは dragSourceStart アニメーションの効果を反転します。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">ドラッグされていなくなった単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの開始点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が dragSource のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">ドラッグされていないことが強調された単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.enterContent">コンテンツ開始のアニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">開始しようとしているコンテンツを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの開始点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が開始パラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.exitContent">コンテンツ終了のアニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">終了しようとしているコンテンツを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの終了点を示しているオフセット オブジェクトの配列のコレクション。オフセットのオブジェクトの数が終了パラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">ドラッグしたオブジェクトは他の要素の間にドロップできることを示すアニメーションを実行します。このアニメーションの効果を反転させるために dragBetweenLeave のアニメーションを使用します。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">その間にドラッグしたオブジェクトをドロップできる単一の要素または要素のコレクション (通常は 2 つ)。アニメーションの終了時に、中間へのドラッグの状態を反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">ドラッグしたオブジェクトは他の要素の間にドロップできなくなったことを示すアニメーションを実行します。これは dragBetweenEnter アニメーションの効果を反転します。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">その間にドラッグしたオブジェクトをドロップできなくなった単一の要素または要素のコレクション (通常は 2 つ)。アニメーションの終了時に、dragSourceStart の状態を反映するように要素のプロパティが設定されました。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">ポインターが離れたときにスワイプで選択したオブジェクトをスライドして元の位置に戻し、選択マークを表示します。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">選択されている単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">選択マークである単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">ポインターが離れたときにスワイプで選択解除したオブジェクトをスライドして元の位置に戻し、選択マークを非表示にします。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">選択が解除されている単一の要素または要素のコレクション。アニメーションの終了時に、要素のプロパティは標準に戻されました。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">スワイプの結果としてオブジェクトを表示するか、表示した後にスワイプで選択したオブジェクトをスライドして元の位置に戻します。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">選択されている単一の要素または要素のコレクション。アニメーションの終了時に、指定されたオフセットを反映するように要素のプロパティが変更されました。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">省略可能なオフセットのオブジェクト、またはアニメーションの終了点を示しているオフセット オブジェクトの配列のコレクション。オブジェクトを元の位置に移動した場合、オフセットは { top: "0px", left: "0px" } である必要があります。オフセットのオブジェクトの数が要素のパラメーターの長さよりも少ない場合、最後の値が残りのすべての要素に対して繰り返されます。このパラメーターが省略された場合は、既定値が使用されます。既定値は表示の動作を示します。</msg>
  <msg name="WinJS.UI.Animation.enterPage">enterPage アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">開始しようとしているページを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.exitPage">exitPage アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">終了しようとしているページを表す単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.crossFade">crossFade アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">開始しようとしている単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 1 です。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">終了しようとしている単一の要素または要素のコレクション。アニメーションの終了時は、要素の不透明度は 0 です。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">ピークのアニメーションを作成します。PeekAnimation オブジェクトを作成した後、要素を新しい位置に移動するためにドキュメントを修正し、PeekAnimation のオブジェクトの実行メソッドを呼び出します。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">ピークのために位置が変更される単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">アニメーションが終了すると完了する約束を実行メソッドが戻す PeekAnimation のオブジェクト。</msg>
  <msg name="WinJS.UI.Animation.updateBadge">updateBadge アニメーションを実行します。</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">開始しようとしているバッジを表す単一の要素または要素のコレクション。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">カスタム データ ソースの VirtualizedDataSource の基底クラスを初期化します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">IListDataAdapter を実装し、VirtualizedDataSource へデータを提供するオブジェクト。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">VirtualizedDataSource に追加オプションを指定するプロパティを含むオブジェクト。cacheSize: 要求された場合にキャッシュする、要求されていない項目の最小数を指定する数字。オプションのパラメーターは省略できます。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">IListDataAdapter.setNotificationHandler のメソッドに渡される IListDataNotificationHandler の実装。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">データが変更されたことを、どのデータか指定しないで VirtualizedDataSource に通知します。一部またはすべての変更においてこのメソッドを呼び出すことは、一部のデータ ソースには実用的でない場合があります。この呼び出しは省略できます。ただし、与えられたデータ アダプターがこれを呼び出すことがない場合、アプリケーションは定期的に VirtualizedDataSource の invalidateAll を呼び出してデータを更新する必要があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">データが完全に更新され、すべての変更通知が送られたときに完了する約束。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">リスト データが大幅に変更されたので最初から読み込み直すほうが良いことを、リスト データ ソースに通知します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">通知のバッチの開始を示します。VirtualizedDataSource のクライアントに送信される countChanged および indexChanged 通知の数を最小限にするために、他の一連の通知の呼び出しより先に呼び出します。endNotifications の呼び出しと組み合わせて使用する必要があります。ペアを入れ子にすることはできません。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">項目が挿入されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">挿入された項目。これにはキーとデータ プロパティが必要です (IItem インターフェイスを実装する必要があります)。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">挿入位置の前にある項目のキー、または項目がリストの先頭に挿入された場合は null。nextKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">挿入位置の後にある項目のキー、または項目がリストの末尾に挿入された場合は null。previousKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">挿入された項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">項目が変更されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">変更された項目を表す IItem。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">項目が移動されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">移動された項目。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">挿入位置の前にある項目のキー、または項目がリストの先頭に移動された場合は null。nextKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">挿入位置の後にある項目のキー、または項目がリストの末尾に移動された場合は null。previousKey を指定した場合は null になる可能性があります。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">移動前の項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">移動後の項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">項目が削除されたという通知を出します。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">削除された項目のキー。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">移動された項目のインデックス。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">beginNotifications の呼び出しで始まった一連の通知を完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">クライアントがリストから読み込めるようにする IListBinding のオブジェクトを作成し、クライアントが既に読み込んだリストの一部に影響する変更通知を受け取ります。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">IListNotificationHandler インターフェイスを実装するオブジェクト。このパラメーターを省略すると、変更通知は受け取れません。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">IListBinding インターフェイスを実装するオブジェクト。</msg>
  <msg name="WinJS.UI.IListBinding">クライアントがリストから読み込めるようにし、クライアントが既に読み込んだリストの一部に影響する変更通知を受け取るインターフェイス。IListBinding は変更されうるリストをいつでも列挙することもできます。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">指定した項目を現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">現在の項目にする IItem または IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">IItemPromise のインターフェイスを実装し、指定された項目の約束として使用されるオブジェクト。指定された項目がリストにない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.current">現在の項目を取得します。</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">IItemPromise のインターフェイスを実装し、現在の項目の約束として使用されるオブジェクト。カーソルがリストの先頭または末尾を超えて移動した場合、約束は null 値になって完了します。現在の項目が削除か移動された場合、約束はエラーを返します。</msg>
  <msg name="WinJS.UI.IListBinding.previous">現在の項目の前にある項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">IItemPromise のインターフェイスを実装し、前の項目の約束として使用されるオブジェクト。カーソルがリストの先頭を超えて移動する場合、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.next">現在の項目の後にある項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">IItemPromise のインターフェイスを実装し、次の項目の約束として使用されるオブジェクト。カーソルがリストの末尾を超えて移動する場合、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">指定された項目の変更通知を停止する要求を作成します。解放呼び出しの数と IItemPromise.retain 呼び出しの数が一致したときのみ、その項目は解放されます。解放呼び出しの数が保持呼び出しの数を超えることはできません。このメソッドは、この IListBinding が作成されたときに IListDataSource.createListBinding に IListNotificationHandler を渡した場合のみ存在します。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">解放する IItem か IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.release">リソースを解放し、通知を停止し、この IListBinding が戻したすべての追跡されている項目の、未処理の約束をキャンセルします。</msg>
  <msg name="WinJS.UI.IListBinding.first">リストの最初の項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">要求された項目の約束として使用される IItemPromise。リストが空の場合、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.last">リストの最後の項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">指定されたキーを持つ項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">要求された項目のキー。それは空でない文字列である必要があります。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">取得時間を短縮するための、項目の位置に関する IListDataAdapter へのドメイン固有のヒント。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">要求された項目の約束として使用される IItemPromise。指定されたキーを持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">指定されたインデックスを持つ項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">取得する項目のインデックスである、0 以上の数値。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">要求された項目の約束として使用される IItemPromise。指定されたインデックスを持つ項目をリストが含まない場合は、IItemPromise は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">指定された説明を持つ項目を取得し、それを現在の項目にします。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">リスト データ アダプターによって解釈される、要求された項目のドメイン固有の説明。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">要求された項目の約束。指定された説明を持つ項目をリストが含まない場合は、IItemPromise は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">データ アダプターから再要求することによって、データ ソースにキャッシュ済みの項目を更新させます。データが変更された場合、データ ソースは通知を生成します。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">データが完全に更新され、すべての変更通知が送られたときに完了する約束。</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">データ ソース内の項目の数を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">指定したキーを持つ項目を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">取得時間を短縮するための、項目の位置に関する IListDataAdapter へのドメイン固有のヒント。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">要求された項目の約束。指定されたキーを持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">指定したインデックス位置にある項目を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">要求された項目のインデックスである、0 以上の数値。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">要求された項目の約束。指定されたインデックスを持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">指定した説明を持つ項目を取得します。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">IListDataAdapter によって解釈される、取得する項目を示すドメイン固有の情報</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">要求された項目の約束。指定された説明を持つ項目をリストが含まない場合は、約束は null 値になって完了します。</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">一連の編集を開始しようとしていることを、データ ソースに通知します。データ ソースは一連の編集において一度、IListNotificationHandler.beginNotifications と endNotifications をそれぞれ呼び出します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">項目をデータ ソースの最初に追加します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">わかる場合は挿入する項目のキー、それ以外の場合は null。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">追加する項目のデータ。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">追加された IItem を、またはエラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">別の項目の前に項目を挿入します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">挿入する項目のデータ。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">データ ソースの項目のキー。新しいデータはこの項目の前に挿入されます。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">別の項目の後に項目を挿入します。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">データ ソースの項目のためのキー。新しい項目はこのアイテムの後に追加されます。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">項目をデータ ソースの最後に追加します。</msg>
  <msg name="WinJS.UI.IListDataSource.change">指定された項目のデータを上書きします。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">置換する項目のキー。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">項目の新しいデータです。</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">更新された IItem を、またはエラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">指定された項目をデータ ソースの最初に移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">別の項目の前に指定された項目を移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">データ ソースの別の項目のキー。キー パラメーターで指定された項目がこの項目の直前の位置に移動されます。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">別の項目の後に項目を移動します。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">データ ソースの別の項目のキー。キー パラメーターで指定された項目がこの項目の直後の位置に移動されます。</msg>
  <msg name="WinJS.UI.IListDataSource.remove">データ ソースから項目を削除します。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">削除する項目のキー。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">操作が成功した場合は何も含まず、エラーが発生した場合は EditError を含む約束。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">カスタム データ ソースを定義したときは、基底クラスとして使用します。直接インスタンス化しないでください。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">別のデータ ソース内の項目にグループ情報を追加するデータ ソースを返します。このデータ ソースの "groups" プロパティは、グループ自体を列挙する他のデータ ソースを評価します。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">グループの各項目のデータ ソース。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">引数としてリストの項目を受け取るコールバック関数。リストの項目ごとに関数は呼び出され、文字列として項目のグループ キーを返します。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">引数として IListDataSource の項目を受け取るコールバック関数。各グループ 1 項目ずつに対して関数は呼び出され、そのグループのヘッダーを表すオブジェクトを返します。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">追加のオプションを指定するプロパティを含むことができるオブジェクト。groupCountEstimate: グループ数の最初の見積もりである数値。-1 を指定すると、実際のグループ数が決定されるまでこの関数は何も返しません。batchSize: グループを検索するときに、各プロセッシング パスの間にフェッチする項目数を指定する、0 より大きい数字。(指定された数に加え、前回のバッチから 1 項目は常に含まれています。)</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">元のデータ ソースの項目を含み、"groups" プロパティに追加のグループ情報を提供する IListDataSource。"groups" プロパティはリストの異なるグループを列挙する別の IListDataSource を返します。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">非同期処理が行われていること、および約束が完了するまでこのイベント ハンドラーは完了と見なされないことを、ListView に通知するために使用します。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">待機する約束。</msg>
  <msg name="WinJS.UI.ListView.ObjectType">IListViewEntity の型を指定します。</msg>
  <msg name="WinJS.UI.ListView.ObjectType.item">この値は、ListView 項目を表します。</msg>
  <msg name="WinJS.UI.ListView.ObjectType.groupHeader">この値は、ListView グループ ヘッダーを表します。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">ListView の選択モードを指定します。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">項目は選択できません。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">1 つの項目を選択している可能性があります。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">複数の項目を選択している可能性があります。</msg>
  <msg name="WinJS.UI.TapBehavior">ItemContainer、または ListView 内の項目がタップ操作にどのように応答するかを指定します。</msg>
  <msg name="WinJS.UI.TapBehavior.directSelect">項目をタップすることで、項目が呼び出され選択されます。キーボードによる項目への移動が選択を変更したため、フォーカスがある項目だけが選択されています。</msg>
  <msg name="WinJS.UI.TapBehavior.toggleSelect">項目をタップすると項目が呼び出されます。項目が選択されている場合は、それをタップすると選択を解除します。項目が選択されていない場合は、それをタップすると選択します。キーボードによる項目への移動は、項目を選択したり呼び出したりしません。</msg>
  <msg name="WinJS.UI.TapBehavior.invokeOnly">項目をタップすると項目が呼び出されます。キーボードによる項目への移動は、項目を選択したり呼び出したりしません。</msg>
  <msg name="WinJS.UI.TapBehavior.none">何も起こりません。</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior">ListView 内のグループ ヘッダーがタップ操作にどのように応答するかを指定します。</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior.invoke">グループ ヘッダーをタップして起動します。</msg>
  <msg name="WinJS.UI.SwipeBehavior">ユーザーがスワイプ操作を実行するときに、項目が選択されているかどうかを指定します。</msg>
  <msg name="WinJS.UI.SwipeBehavior.select">スワイプ操作によって、スワイプで触れた項目を選択します。</msg>
  <msg name="WinJS.UI.SwipeBehavior.none">選択されている項目はスワイプ操作によって変更されません。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">ListView のアニメーションが、開始のアニメーションか遷移のアニメーションかを指定します。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">アニメーションは ListView が最初に表示されるときに再生されます。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">アニメーションは ListView がコンテンツを変更しているときに再生されます。</msg>
  <msg name="WinJS.UI.Repeater.onitemsloaded">Repeater が新しいデータ セットの読み込みを完了したときに発生します。このイベントが発生するのは、構造体に対して起動されたときや、Repeater コントロールのデータ ソースまたはテンプレートが置換されるときのみです。</msg>
  <msg name="WinJS.UI.Repeater.onitemchanging">Repeater コントロールのデータ ソース内にある項目が変更された後、対応する DOM 要素が更新される前に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemchanged">Repeater コントロールのデータ ソース内にある項目が変更された後、および、対応する DOM 要素が更新された後に発生します。</msg>
  <msg name="WinJS.UI.Repeater.oniteminserting">Repeater コントロールのデータ ソースに対して項目が追加された後、対応する DOM 要素が追加される前に発生します。</msg>
  <msg name="WinJS.UI.Repeater.oniteminserted">Repeater コントロールのデータ ソースに対して項目が追加された後、および対応する DOM 要素が追加された後に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemmoving">Repeater コントロールのデータ ソース内であるインデックスから別のインデックスに対して項目が移動された後、対応する DOM 要素が移動される前に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemmoved">Repeater コントロールのデータ ソース内であるインデックスから別のインデックスに対して項目が移動された後、および対応する DOM 要素が移動された後に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemremoving">Repeater コントロールのデータ ソースから項目が削除された後、対応する DOM 要素が削除される前に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemremoved">Repeater コントロールのデータ ソース内であるインデックスから別のインデックスに対して項目が削除された後、対応する DOM 要素が削除された後に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloading">リストは更新済みであり、リスト内のデータに対するあらゆる参照は正しくない可能性があります。Repeater コントロールの基になるデータが更新された後、更新後の HTML を再読み込みする前に発生します。</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloaded">Repeater コントロールの基になるデータが更新された後、および更新後の HTML を再読み込みした後に発生します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">選択している項目数を返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">選択している項目数。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">選択している項目のインデックスのリストを返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">数のオブジェクトの配列としての、選択している項目のインデックスのリスト。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">選択している項目を含む配列を返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">要求された IItem オブジェクトの配列を含む約束。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">選択された項目のインデックス範囲の配列を取得します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">選択している各インデックス範囲の ISelectionRange オブジェクトを含む配列。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">データ ソースのすべての項目を含む選択かどうかを示す値を返します。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">選択にデータ ソースのすべてのアイテムが含まれている場合は True、それ以外の場合は False。</msg>
  <msg name="WinJS.UI._Overlay.onbeforeshow">コントロールが表示される直前に発生します。</msg>
  <msg name="WinJS.UI._Overlay.onaftershow">コントロールが表示された直後に発生します。</msg>
  <msg name="WinJS.UI._Overlay.onbeforehide">コントロールが非表示になる直前に発生します。</msg>
  <msg name="WinJS.UI._Overlay.onafterhide">コントロールが非表示になった直後に発生します。</msg>
  <msg name="WinJS.UI.AppBarIcon">AppBarIcon の列挙は AppBarCommand アイコンのプロパティと共に使用する一連のグラフィックスを提供します。</msg>
  <msg name="WinJS.UI.Pivot.onselectionchanged">ユーザーが異なる項目に切り替えた場合に発生します。</msg>
  <msg name="WinJS.UI.ItemCotrol.oninvoked">項目が呼び出されたときに発生します。tapBehavior プロパティを使用して、タップとクリックを行ったときに項目が起動されるかどうかを指定できます。</msg>
  <msg name="WinJS.UI.ItemCotrol.onselectionchanging">項目が選択または選択解除される直前に発生します。</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeopen">Tooltip が表示される直前に発生します。</msg>
  <msg name="WinJS.UI.Tooltip.onopened">Tooltip が表示されるときに発生します。</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeclose">Tooltip が非表示になる直前に発生します。</msg>
  <msg name="WinJS.UI.Tooltip.onclosed">ツールヒントがもう表示されなくなるときに発生します。</msg>
</messagebundle>