<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.IListDataSource.endEdits">Benachrichtigt die Datenquelle, dass eine Sequenz von Bearbeitungen beendet wurde. Die Datenquelle ruft IListNotificationHandler.beginNotifications und endNotifications jeweils einmal für eine Sequenz von Bearbeitungen auf.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">Verschiebt ein Element an das Ende der Datenquelle.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_p:key">Der Schlüssel des zu verschiebenden Elements.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_returnValue">Eine Zusicherung, die das IItem enthält, das verschoben wurde, oder ein EditError, wenn ein Fehler aufgetreten ist.</msg>
  <msg name="WinJS.UI.StorageDataSource">Erstellt eine Datenquelle, die eine IStorageQueryResultBase auflistet.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">Das aufzulistende Objekt. Es muss IStorageQueryResultBase unterstützen.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">Ein Objekt, das Optionen für die Datenquelle angibt. Dieser Parameter ist optional. Es kann folgende Eigenschaften enthalten: "mode": Ein Windows.Storage.FileProperties.ThumbnailMode - ein Wert, der angibt, ob Miniaturansichten angefordert werden und welcher Typ von Miniaturansichten angefordert wird. "requestedThumbnailSize": Eine Zahl, die die Größe der Miniaturansichten angibt. "thumbnailOptions": Ein Windows.Storage.FileProperties.ThumbnailOptions-Wert, der zusätzliche Optionen für die Miniaturansichten angibt. "waitForFileLoad": Wenn Sie diesen Wert auf "true" festlegen, gibt die Datenquelle erst Elemente zurück, nachdem sie ihre Eigenschaften und Miniaturansichten geladen hat.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">Gibt eine Zusicherung für ein Bildelement zurück, das abgeschlossen wird, wenn die vollwertige Miniaturansicht des angegebenen Elements in das Bildelement gezeichnet wird.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">Das Element, für das eine Miniaturansicht abgerufen werden soll.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">Das zu verwendende Bildelement. Wenn noch kein Element bereitgestellt wurde, wird ein neues Bildelement erstellt.</msg>
  <msg name="WinJS.UI.FlipView.constructor">Erstellt eine neue FlipView.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">Das DOM-Element, das als Host des Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements. Ereignisnamen müssen mit "on" beginnen. Um beispielsweise einen Handler für das Ereignis "pageselected" bereitzustellen, fügen Sie dem Optionsobjekt eine Eigenschaft mit dem Namen "onpageselected" hinzu und legen Sie ihren Wert auf den Ereignishandler fest. Dieser Parameter ist optional.</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">Das neue FlipView-Steuerelement.</msg>
  <msg name="WinJS.UI.FlipView.dispose">Löscht dieses FlipView.</msg>
  <msg name="WinJS.UI.FlipView.next">Navigiert zum nächsten Element.</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">"True", wenn die FlipView mit dem Navigieren zur nächsten Seite beginnt; "false", wenn sich die FlipView auf der letzten Seite oder in der Mitte einer anderen Navigationsanimation befindet.</msg>
  <msg name="WinJS.UI.FlipView.previous">Navigiert zum vorherigen Element.</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">"True", wenn die FlipView mit dem Navigieren zur vorherigen Seite beginnt; "false", wenn sich die FlipView bereits auf der ersten Seite oder in der Mitte einer anderen Navigationsanimation befindet.</msg>
  <msg name="WinJS.UI.FlipView.element">Das DOM-Element, das als Host des FlipView-Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.FlipView.currentPage">Ruft den Index der derzeit angezeigten Seite ab oder legt diesen fest. Der Mindestwert ist 0 und der maximale Wert ist eins weniger als die Gesamtzahl der Elemente, die von der Datenquelle zurückgegeben werden.</msg>
  <msg name="WinJS.UI.FlipView.orientation">Ruft die Layoutausrichtung der FlipView ab bzw. legt diese fest: horizontal oder vertikal.</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">Ruft die Datenquelle ab, die die FlipView mit Elementen zur Anzeige versorgt, oder legt diese fest. Die FlipView zeigt ein Element zurzeit jeweils auf einer eigenen Seite an.</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">Ruft WinJS.Binding.Template oder eine Funktion ab, die HTML für die Seite jedes Elements definiert, oder legt diese fest.</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">Ruft den Abstand zwischen Elementen in Pixel ab oder legt ihn fest.</msg>
  <msg name="WinJS.UI.FlipView.count">Gibt die Anzahl der Elemente in der itemDataSource des FlipView-Objekts zurück.</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">Eine Zusicherung, die die Anzahl der Elemente in der Liste oder in WinJS.UI.CountResult.unknown enthält, wenn die Anzahl nicht verfügbar ist.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">Legt benutzerdefinierte Animationen fest, die die FlipView beim Navigieren zwischen den Seiten verwenden soll.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">Ein Objekt, das bis zu drei Felder enthält, und zwar eins für jede Navigationsaktion: "Weiter", "Zurück" und "Springen". Jedes dieser Felder muss eine Funktion mit folgender Signatur sein: function (outgoingPage, incomingPage). Diese Funktion gibt ein WinJS.Promise-Objekt zurück, das abgeschlossen wird, sobald die Animationen beendet sind. Wenn ein Feld NULL oder nicht definiert ist, wird die FlipView auf die Standardanimation für diese Aktion zurückgesetzt.</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">Erzwingt, dass die FlipView das Layout aktualisiert. Verwenden Sie diese Funktion, wenn die FlipView erneut sichtbar gemacht wird, nachdem ihre style.display-Eigenschaft auf "None" festgelegt wurde.</msg>
  <msg name="WinJS.UI.FlipView">Zeigt eine Auflistung, wie ein Satz von Fotos, mit jeweils einem Element zurzeit an.</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">Wird ausgelöst, wenn sich die Anzahl der Elemente in der itemDataSource ändert.</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">Wird ausgelöst, wenn eine FlipView-Seite sichtbar oder nicht sichtbar wird.</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">Wird ausgelöst, wenn die FlipView eine Seite spiegelt.</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">Wird ausgelöst, wenn die FlipView eine Seite spiegelt und die Renderingfunktion abgeschlossen wird.</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">Das gesamte FlipView-Steuerelement.</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">Die allgemeine Klasse für alle FlipView-Navigationsschaltflächen.</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">Die linke Navigationsschaltfläche.</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">Die rechte Navigationsschaltfläche.</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">Die obere Navigationsschaltfläche.</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">Die untere Navigationsschaltfläche.</msg>
  <msg name="WinJS.UI._LayoutCommon.groupHeaderPosition">Ruft die Position von Gruppenheadern in Bezug auf ihre Elemente ab oder legt sie fest. Der Standardwert ist "top".</msg>
  <msg name="1">Ruft die Ausrichtung für das Layout ab oder legt sie fest. Der Standardwert ist "Horizontal".</msg>
  <msg name="WinJS.UI.Layout.constructor">Erstellt ein neues Layoutobjekt.</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">Der Satz von Optionen, der zuerst auf das neue Layoutobjekt angewendet werden soll.</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">Das neue Layoutobjekt.</msg>
  <msg name="WinJS.UI._LegacyLayout.disableBackdrop">Ruft einen Wert ab, der angibt, ob das Layout die Hintergrundfunktion, die leere Bereiche vermeidet, bei der Planung einer virtualisierten Liste deaktivieren soll. disableBackdrop ist veraltet, Format: .win-listview .win-container.win-backdrop { background-color:transparent; }.</msg>
  <msg name="WinJS.UI._LegacyLayout.backdropColor">Ruft die Füllfarbe für das Standardmuster für den Hintergrund ab oder legt diese fest. Der Standardwert ist "rgba (155.155.155.0,23)". backdropColor ist veraltet. Format stattdessen: .win-listview .win-container.win-backdrop { rgba(155.155.155.0,23); }.</msg>
  <msg name="WinJS.UI.GridLayout">Erstellt ein neues GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements.</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">Das neue GridLayout.</msg>
  <msg name="WinJS.UI.GridLayout.maximumRowsOrColumns">Ruft je nach Ausrichtung die maximale Anzahl von Zeilen oder Spalten ab, die vor dem Umbruch zum Layout anwesend sein sollten. Der Wert 0 (null) gibt an, dass kein Maximum vorhanden ist. Der Standardwert ist 0.</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">Ruft die Höchstanzahl der von ListView angezeigten Zeilen ab oder legt sie fest. WinJS.UI.GridLayout.maxRows kann geändert werden oder ist in der Windows-Bibliothek für JavaScript 2.0 nicht verfügbar. Verwenden Sie stattdessen die maximumRowsOrColumns-Eigenschaft.</msg>
  <msg name="WinJS.UI.GridLayout.itemInfo">Bestimmt die Größe des Elements und ob das Element in eine neue Spalte eingefügt werden soll. GridLayout.itemInfo kann geändert werden oder ist in zukünftigen Versionen nicht verfügbar. Verwenden Sie stattdessen CellSpanningLayout.</msg>
  <msg name="WinJS.UI.GridLayout.groupInfo">Gibt an, ob eine Gruppe über Elemente verfügt die sich über mehrere Zellen erstrecken und gibt die Ausmaße der Zelle an. GridLayout.groupInfo kann geändert werden oder ist in zukünftigen Versionen nicht verfügbar. Verwenden Sie stattdessen CellSpanningLayout.</msg>
  <msg name="WinJS.UI.ListLayout">Erstellt ein neues ListLayout-Objekt.</msg>
  <msg name="WinJS.UI.ListLayout_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Objekts. Ereignisnamen müssen mit "on" beginnen.</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">Das neue ListLayout-Objekt.</msg>
  <msg name="WinJS.UI.CellSpanningLayout">Erstellt ein neues CellSpanningLayout-Objekt.</msg>
  <msg name="WinJS.UI.CellSpanningLayout_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Objekt angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Objekts. Ereignisnamen müssen mit "on" beginnen.</msg>
  <msg name="WinJS.UI.CellSpanningLayout_returnValue">Das neue CellSpanningLayout-Objekt.</msg>
  <msg name="WinJS.UI.CellSpanningLayout.maximumRowsOrColumns">Ruft je nach Ausrichtung die maximale Anzahl von Zeilen oder Spalten ab oder legt sie fest, die angezeigt werden, bevor der Inhalt wird mit der Umschließung beginnt. Der Wert 0 (null) gibt an, dass kein Maximum vorhanden ist.</msg>
  <msg name="WinJS.UI.CellSpanningLayout.itemInfo">Ruft eine Funktion ab oder legt sie fest, die die Breite und Höhe eines Elements zurückgibt, und ob sie in einer neuen Spalte angezeigt werden soll. Das Festlegen dieser Funktion verbessert die Leistung, da die ListView Leerzeichen für ein Element verknüpfen kann, ohne sie zuerst messen zu müssen. Die Funktion akzeptiert einen einzigen Parameter: der Index des zu rendernden Elements. Die Funktion gibt ein Objekt zurück, das drei Eigenschaften hat: Breite: Die gesamte Breite des Elements. Höhe: Die gesamte Höhe des Elements. newColumn: Wird auf wahr festgelegt, um einen Spaltenumbruch zu erstellen, andernfalls falsch.</msg>
  <msg name="WinJS.UI.CellSpanningLayout.groupInfo">Ruft eine Funktion ab oder legt sie fest, die das Umfassen mehrerer Zellen ermöglicht, und richtet die Zellenmaße ein. Die Funktion gibt ein Objekt zurück, das über diese Eigenschaften verfügt: EnableCellSpanning: wird auf wahr festgelegt, damit die ListView Elemente mehrerer Größen enthalten kann. cellWidth: Die Breite der Basiszelle. cellHeight: Die Höhe der Basiszelle.</msg>
  <msg name="2">Ruft die Ausrichtung des Layouts ab. CellSpanning-Layout unterstützt nur horizontale Ausrichtung.</msg>
  <msg name="WinJS.UI.ListView.constructor">Erstellt eine neue ListView.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">Das DOM-Element, das als Host des ListView-Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements. Ereignisnamen müssen mit "on" beginnen. Um beispielsweise einen Handler für das Ereignis "selectionchanged" bereitzustellen, fügen Sie dem Optionsobjekt eine Eigenschaft mit dem Namen "onselectionchanged" hinzu und legen Sie ihren Wert auf den Ereignishandler fest.</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">Die neue ListView.</msg>
  <msg name="WinJS.UI.ListView.element">Ruft das DOM-Element ab, das als Host der ListView fungiert.</msg>
  <msg name="WinJS.UI.ListView.layout">Ruft ein Objekt ab, das das Layout der ListView steuert, oder legt es fest.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">Ruft die Anzahl von Seiten ab oder legt die Anzahl von Seiten fest, die geladen werden sollen, wenn der Benutzer einen Bildlauf über den durch die pagesToLoadThreshold-Eigenschaft angegebenen Schwellenwert hinaus durchführt, wenn die loadingBehavior-Eigenschaft auf inkrementell festgelegt ist. pagesToLoad ist veraltet. Das Steuerelement verwendet diese Eigenschaft nicht. Einzelheiten erfahren Sie im SDK-Beispiel "ListView-Ladenverhaltens für einen Leitfaden zu wie das Verhalten eines inkrementellen Ladevorgangs implementiert wird.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">Ruft den Schwellenwert (in Seiten) zum Initiieren eines inkrementellen Ladevorgangs ab oder legt ihn fest. Wenn sich das letzte sichtbare Element innerhalb der angegebenen Anzahl von Seiten vom Ende des geladenen Teils der Liste befindet und wenn automaticallyLoadPages "true" ist und loadingBehavior auf "inkrementell" eingestellt ist, initiiert die ListView einen inkrementellen Ladevorgang. pagesToLoadThreshold ist veraltet. Das Steuerelement verwendet diese Eigenschaft nicht. Einzelheiten erfahren Sie im SDK-Beispiel "ListView-Ladenverhaltens für einen Leitfaden zu wie das Verhalten eines inkrementellen Ladevorgangs implementiert wird.</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">Ruft die Datenquelle ab, die die Gruppen für die Elemente in der itemDataSource enthält, oder legt sie fest.</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">Ruft einen Wert ab, der angibt, ob die nächste Gruppe von Seiten automatisch geladen wird, wenn der Benutzer einen Bildlauf über die Anzahl der Seiten hinaus durchführt, die von der pagesToLoadThreshold-Eigenschaft angegeben werden. automaticallyLoadPages ist veraltet. Das Steuerelement legt den Standard diese Eigenschaft auf falsch fest. Einzelheiten erfahren Sie im SDK-Beispiel "ListView-Ladenverhaltens für einen Leitfaden zu wie das Verhalten eines inkrementellen Ladevorgangs implementiert wird.</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">Ruft einen Wert ab, der bestimmt, wie viele Datenelemente in das DOM geladen werden, oder legt ihn fest. pagesToLoadThreshold ist veraltet. Das Steuerelement legt den Standard diese Eigenschaft auf 'randomAccess' fest. Einzelheiten erfahren Sie im SDK-Beispiel "ListView-Ladenverhaltens für einen Leitfaden zu wie das Verhalten eines inkrementellen Ladevorgangs implementiert wird.</msg>
  <msg name="WinJS.UI.ListView.selectionMode">Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie viele ListView-Elemente der Benutzer auswählen kann: "Keine", "Einfach" oder "Mehrfach".</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie die ListView reagiert, wenn der Benutzer auf ein Element tippt oder klickt. Das Tippen oder Klicken kann das Element aufrufen, auswählen und aufrufen oder keine Auswirkungen haben.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTapBehavior">Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie die ListView reagiert, wenn der Benutzer auf einen Gruppenheader tippt oder klickt.</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie die ListView auf die Streifeninteraktion reagiert. Die Streifbewegung kann die gestreiften Elemente auswählen oder keine Auswirkungen auf die aktuelle Auswahl haben.</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">Ruft die Datenquelle ab, die Elemente für die ListView bereitstellt, oder legt diese fest.</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">Ruft die Vorlagenfunktion ab, die die DOM-Elemente für jedes Element in der itemDataSource erstellt, oder legt diese fest. Jedes Element kann mehrere DOM-Elemente enthalten, es wird jedoch empfohlen, ein einzelnes Stammelement zu verwenden.</msg>
  <msg name="WinJS.UI.ListView.resetItem">Ruft die Funktion ab oder legt sie fest, die aufgerufen wird, wenn ListView die Elementdarstellung eines Elements wiederverwendet. resetItem kann geändert werden oder ist möglicherweise in zukünftigen Versionen nicht verfügbar. Stattdessen markieren Sie das Element mit WinJS.Utilities.markDisposable als löschbar.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">Ruft die Vorlagenfunktion ab, die die DOM-Elemente für jeden Gruppenheader in der groupDataSource erstellt, oder legt sie fest. Jeder Gruppenheader kann mehrere Elemente enthalten, muss jedoch über ein einzelnes Stammelement verfügen.</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">Ruft die Funktion ab oder legt sie fest, die aufgerufen wird, wenn ListView die DOM-Elementdarstellung eines Gruppenheaders. wiederverwendet. resetGroupHeader kann geändert werden oder ist möglicherweise in zukünftigen Versionen nicht verfügbar. Stattdessen markieren Sie das Headerelement mit WinJS.Utilities.markDisposable als löschbar.</msg>
  <msg name="WinJS.UI.ListView.loadingState">Ruft einen Wert ab, der angibt, ob die ListView noch lädt oder ob das Laden abgeschlossen ist. Diese Eigenschaft kann einen der folgenden Werte zurückgeben: "itemsLoading", "viewPortLoaded", "itemsLoaded", "oder "complete".</msg>
  <msg name="WinJS.UI.ListView.selection">Ruft ein ISelections-Objekt ab, das die aktuell ausgewählten Elemente enthält.</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">Ruft das erste sichtbare Element ab oder legt es fest. Wenn Sie diese Eigenschaft festlegen, führt die ListView einen Bildlauf durch, sodass sich das Element mit dem angegebenen Index am Anfang der Liste befindet.</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">Ruft den Index des letzten sichtbaren Elements ab.</msg>
  <msg name="WinJS.UI.ListView.currentItem">Ruft ein Objekt ab oder legt ein Objekt fest, das angibt, welches Element den Tastaturfokus und den entsprechenden Fokusstatus erhalten soll. Das Objekt verfügt über folgende Eigenschaften: "index": der Index des Elements in der itemDataSource. "key": der Schlüssel des Elements in der itemDataSource. "hasFocus": Wenn diese Eigenschaft abgerufen wird, ist dieser Wert "true", wenn das Element bereits den Fokus besitzt; andernfalls "false". Legen Sie diesen Wert beim Einstellen dieser Eigenschaft auf "true" fest, wenn das Element den Fokus sofort erhalten soll. Andernfalls legen Sie es auf "false" fest. In diesem Fall erhält das Element den Fokus später. "showFocus": "true", wenn das Element das Fokusrechteck anzeigt; andernfalls "false".</msg>
  <msg name="WinJS.UI.ListView.zoomableView">Ruft eine ZoomableView ab. Diese API unterstützt die SemanticZoom-Infrastruktur und ist nicht zur direkten Verwendung im Code bestimmt.</msg>
  <msg name="WinJS.UI.ListView.itemsDraggable">Ruft ab oder legt fest, ob die Elemente von ListView über Drag &amp; Drop gezogen werden können.</msg>
  <msg name="WinJS.UI.ListView.itemsReorderable">Ruft ab oder legt fest, ob die Elemente von ListView über Drag &amp; Drop in sich selbst neu angeordnet werden können. Wenn ListView als neu anordnungsfähig markiert ist, können die Elemente in sich selbst herum gezogen werden, jedoch ist es nicht erforderlich die ausgelösten itemdrag-Ereignisse,zu behandeln.</msg>
  <msg name="WinJS.UI.ListView.maxDeferredItemCleanup">Ruft die maximale Anzahl von realisierten Elementen ab oder legt sie fest.</msg>
  <msg name="WinJS.UI.ListView.dispose">Löscht diesen ListView.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">Gibt das DOM-Element zurück, das das Element am angegebenen Index darstellt.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">Der Index des Elements.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">Das DOM-Element, das das angegebene Element darstellt.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">Gibt den Index des Elements zurück, das das angegebene DOM-Element anzeigt.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">Das DOM-Element, das das Element anzeigt.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">Der Index des Elements, das das angegebene DOM-Element anzeigt.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">Macht das angegebene Element sichtbar. Die ListView führt nach Bedarf einen Bildlauf zum Element durch.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:value">Der Index des ListView-Elements oder IListViewEntity, der angezeigt werden soll.</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">Lädt die nächste Gruppe von Seiten, wenn das loadingBehavior des ListView-Objekts auf "inkrementell" festgelegt wird. loadMorePages ist veraltet. Das Aufrufen dieser Funktion hat keine Auswirkungen. Einzelheiten erfahren Sie im SDK-Beispiel "ListView-Ladenverhaltens für einen Leitfaden zu wie das Verhalten eines inkrementellen Ladevorgangs implementiert wird.</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">Ordnet alle sichtbaren Elemente in der ListView neu, um sie für Elemente anzupassen, deren Größe sich geändert hat. Verwenden Sie diese Funktion oder forceLayout, wenn Sie die ListView erneut sichtbar machen, nachdem Sie die style.display-Eigenschaft auf "keine" festgelegt haben, oder nachdem Formatänderungen vorgenommen wurden, die die Größe oder die Position des ListView-Steuerelements oder seiner Elemente beeinflussen. Anders als forceLayout erstellt diese Methode keine Elemente neu, und sie zeigt keine Eingangsanimation an.</msg>
  <msg name="WinJS.UI.ListView.forceLayout">Erzwingt ein Update des ListView-Layouts. Verwenden Sie diese Funktion oder relcaculateItemPosition, wenn Sie ListView erneut sichtbar machen, nachdem Sie die style.display-Eigenschaft auf "keine" festgelegt haben, oder nachdem Formatänderungen vorgenommen wurden, die die Größe oder die Position des ListView-Steuerelements oder seiner Elemente beeinflussen. Nachdem Sie die style.display-Eigenschaft auf "keine" festlegen.</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">Ruft die Position der Bildlaufleiste der ListView ab oder legt die Position fest.</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">Löst den Abgangsdienst ListView manuell aus. Im Normalbetrieb wird dies bei der Instanziierung von ListView ausgelöst. In einigen Szenarien kann es jedoch angebracht sein, den Abgangsdienst manuell auszuführen.</msg>
  <msg name="WinJS.UI.ListView">Zeigt Elemente in einer benutzerdefinierbaren Liste oder in einem Raster an.</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">Wird ausgelöst, wenn die ListView im Begriff ist, eine Eingangs- oder Übergangsanimation wiederzugeben.</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">Wird ausgelöst, wenn der Benutzer auf ein Element tippt oder klickt.</msg>
  <msg name="WinJS.UI.ListView_e:groupheaderinvoked">Wird ausgelöst, wenn der Benutzer auf einen Gruppenheader tippt oder klickt.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">Wird ausgelöst, bevor Elemente aktiviert oder deaktiviert werden.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">Wird ausgelöst, nachdem Elemente aktiviert oder deaktiviert werden.</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">Wird ausgelöst, wenn der Ladezustand geändert wird.</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">Wird ausgelöst, wenn das fokussierte Element geändert wird.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragstart">Wird ausgelöst, wenn der Benutzer beginnt, ListView-Elemente zu ziehen.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragenter">Wird ausgelöst, wenn der Benutzer in die ListView zieht.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragend">Wird ausgelöst, wenn ein Ziehvorgang, der in einer ListView gestartet wird, beendet wird.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragbetween">Wird ausgelöst, wenn der Benutzer zwischen zwei ListView-Elementen zieht.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragleave">Wird ausgelöst, wenn der Benutzer außerhalb des ListView-Bereichs zieht.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragchanged">Wird ausgelöst, wenn die Elemente, die gezogen werden, aufgrund einer Datenquellenänderung geändert werden.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragdrop">Wird ausgelöst, wenn der Benutzer Elemente in der ListView ablegt.</msg>
  <msg name="WinJS.UI.ListView_e:accessibilityannotationcomplete">Wird ausgelöst, wenn die Barrierefreiheitsattribute den ListView-Elementen hinzugefügt wurden.</msg>
  <msg name="WinJS.UI.ListView_part:listView">Das gesamte ListView-Steuerelement.</msg>
  <msg name="WinJS.UI.ListView_part:viewport">Der Viewport der ListView.</msg>
  <msg name="WinJS.UI.ListView_part:surface">Der bildlauffähige Bereich der ListView.</msg>
  <msg name="WinJS.UI.ListView_part:item">Ein Element in der ListView.</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">Der Hintergrund eines Auswahlhäkchens.</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">Ein Auswahlhäkchen.</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">Der Header einer Gruppe.</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">Der Statusindikator der ListView.</msg>
  <msg name="WinJS.UI.Repeater.constructor">Erstellt ein neues Repeater-Steuerelement.</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:element">Das DOM-Element, das das neue Steuerelement hostet. Der Repeater erstellt ein Element, wenn der Wert NULL ist.</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf den neuen Repeater angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Objekts. Ereignisnamen müssen mit "on" beginnen.</msg>
  <msg name="WinJS.UI.Repeater.constructor_returnValue">Das neue Repeater-Steuerelement.</msg>
  <msg name="WinJS.UI.Repeater.element">Ruft das DOM-Element ab, das als Host des Repeaters fungiert.</msg>
  <msg name="WinJS.UI.Repeater.data">Ruft WinJS.Binding.List ab oder legt es fest, das dem Repeater-Steuerelement Elemente zur Anzeige bietet.</msg>
  <msg name="WinJS.UI.Repeater.template">Ruft eine Vorlage oder eine benutzerdefinierte Renderingfunktion ab oder legt sie fest, die die HTML jedes Elements innerhalb des Repeaters definiert.</msg>
  <msg name="WinJS.UI.Repeater.length">Ruft die Anzahl der Elemente im Repeater-Steuerelement ab.</msg>
  <msg name="WinJS.UI.Repeater.elementFromIndex">Gibt das HTML-Element für das Element mit dem angegebenen Index zurück.</msg>
  <msg name=" WinJS.UI.Repeater.elementFromIndex_returnValue">Das DOM-Element für das angegebene Element.</msg>
  <msg name="WinJS.UI.Repeater.dispose">Bereiten Sie diesen Repeater für Garbage Collection vor.</msg>
  <msg name="WinJS.UI.Repeater">Verwendet Vorlagen, um HTML aus einem Satz von Daten zu generieren.</msg>
  <msg name="WinJS.UI.Repeater_part:repeater">Das Repeater-Steuerelement selbst.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">Löscht die Auswahl.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">Eine Zusicherung, die erfüllt wird, wenn der Löschvorgang abgeschlossen ist.</msg>
  <msg name="WinJS.UI._Selection.prototype.set">Löscht die aktuelle Auswahl und ersetzt sie durch die angegebenen Elemente.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">Die Indizes oder die Schlüssel der Elemente, die die Auswahl bilden. Sie können verschiedene Typen von Objekten für den Elementparameter bereitstellen: Sie können einen Index, einen Schlüssel oder einen Bereich von Indizes angeben. Es kann auch ein Array sein, das eine oder mehrere dieser Objekte enthält.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">Eine Zusicherung, die erfüllt wird, wenn der Vorgang abgeschlossen ist.</msg>
  <msg name="WinJS.UI._Selection.prototype.add">Fügt der Auswahl mindestens ein Element hinzu.</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">Die Indizes oder die Schlüssel der Elemente, die hinzugefügt werden sollen. Sie können verschiedene Typen von Objekten für den Elementparameter bereitstellen: Sie können einen Index, einen Schlüssel oder einen Bereich von Indizes angeben. Es kann auch ein Array sein, das eine oder mehrere dieser Objekte enthält.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">Entfernt die angegebenen Elemente aus der Auswahl.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">Die Indizes oder die Schlüssel der Elemente, die entfernt werden sollen. Sie können verschiedene Typen von Objekten für den Elementparameter bereitstellen: Sie können einen Index, einen Schlüssel oder einen Bereich von Indizes angeben. Es kann auch ein Array sein, das eine oder mehrere dieser Objekte enthält.</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">Fügt der Auswahl alle Elemente in der ListView hinzu.</msg>
  <msg name="WinJS.UI._Overlay">Erstellt das Overlaysteuerelement und ordnet es dem zugrunde liegenden DOM-Element zu.</msg>
  <msg name="WinJS.UI._Overlay_p:element">Das DOM-Element, das dem Overlaysteuerelement zugeordnet werden soll.</msg>
  <msg name="WinJS.UI._Overlay_p:options">Der Satz von Optionen, der zuerst auf das Overlaysteuerelement angewendet werden soll.</msg>
  <msg name="WinJS.UI._Overlay_returnValue">Ein vollständig erstelltes Overlaysteuerelement.</msg>
  <msg name="WinJS.UI._Overlay.element">Das DOM-Element, an das das Overlay angefügt ist</msg>
  <msg name="WinJS.UI._Overlay.disabled">Deaktivieren Sie ein Overlay, indem Sie das deaktivierte HTML-Attribut festlegen oder abrufen. Wenn es deaktiviert ist, wird das Overlay nicht mehr mit show() angezeigt und wird ausgeblendet, wenn es aktuell sichtbar ist.</msg>
  <msg name="WinJS.UI.Overlay.dispose">Löscht dieses Overlay.</msg>
  <msg name="WinJS.UI._Overlay.show">Zeigt das Overlay an, wenn es ausgeblendet ist, unabhängig von einem anderen Zustand</msg>
  <msg name="WinJS.UI._Overlay.hide">Blendet das Overlay aus, wenn es sichtbar ist, unabhängig von einem anderen Zustand</msg>
  <msg name="WinJS.UI._Overlay.hidden">Schreibgeschützt, "true", wenn ein Overlay derzeit nicht sichtbar ist.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">Fügen Sie dem DOM-Element für dieses Overlay einen Ereignislistener hinzu</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">Erforderlich. Hinzuzufügender Ereignistyp, "beforehide", "afterhide", "beforeshow" oder "aftershow"</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">Erforderlich. Die diesem Ereignis zugeordnete Ereignishandlerfunktion.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">Optional. "True", für die Registrierung für die Ereigniserfassungsphase. "False" für die Eventbubblingphase.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">Entfernen Sie einen Ereignislistener aus dem DOM-Element für dieses Overlay</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">Erforderlich. Zu entfernender Ereignistyp, "beforehide", "afterhide", "beforeshow" oder "aftershow"</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">Erstellt ein neues AppBarCommand-Steuerelement.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">Das DOM-Element, das das Steuerelement hostet. AppBarCommand erstellt eins, wenn es NULL ist.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">Der Satz von Eigenschaften und Werten, der auf das neue AppBarCommand angewendet werden soll.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">Das neue AppBarCommand-Steuerelement.</msg>
  <msg name="WinJS.UI.AppBarCommand.id">Ruft die ID von AppBarCommand ab oder legt sie fest.</msg>
  <msg name="WinJS.UI.AppBarCommand.type">Ruft den Typ des AppBarCommand ab bzw. legt diesen fest. Mögliche Werte sind "Schaltfläche", "Toggle", "Flyout" oder "Trennzeichen".</msg>
  <msg name="WinJS.UI.AppBarCommand.label">Ruft die Bezeichnung für AppBarCommand ab oder legt sie fest.</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">Ruft das Symbol von AppBarCommand ab oder legt sie fest.</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">Ruft die Funktion ab oder legt sie fest, die beim Klicken auf den Befehl aufgerufen wird.</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">Für AppBarCommands vom Typ "Flyout", gibt diese Eigenschaft WinJS.UI.Flyout zurück, das diesen Befehl aufruft. Wenn Sie diese Eigenschaft festlegen, können Sie auch die Zeichenfolgen-ID des Flyouts verwenden, um das DOM-Objekt für das Flyout oder das WinJS.UI.Flayout-Objekt selbst aufzurufen.</msg>
  <msg name="WinJS.UI.AppBarCommand.section">Ruft den Abschnitt ab oder legt ihn fest, in dem sich AppBarCommand befindet. Mögliche Werte sind "Auswahl" und "global".</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">Ruft den QuickInfo-Text von AppBarCommand ab oder legt diesen fest.</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">Legen Sie den Auswahlzustand einer Umschaltfläche fest oder rufen Sie ihn ab.</msg>
  <msg name="WinJS.UI.AppBarCommand.element">Das DOM-Element, das AppBarCommad hostet.</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">Ruft einen Wert ab, der angibt, ob die AppBarCommand deaktiviert ist, oder legt diesen fest. Ein Wert wahr deaktiviert AppBarCommand, und der Wert falsch aktiviert es.</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">Ruft einen Wert ab, der angibt, ob AppBarCommand ausgeblendet wird oder im Bergriff ist ausgeblendet zu werden. Ein wahr-Wert gibt an, ob AppBarCommand ausgeblendet wird oder im Bergriff ist ausgeblendet zu werden.</msg>
  <msg name="WinJS.UI.AppBarCommand.firstElementFocus">Ruft das HTMLElement in einem "Inhalt"-Typ AppBarCommand ab oder legt es fest, der den Fokus erhalten soll, wenn der Fokus über POS1 oder die Pfeiltasten bewegt wird, vom vorherigen AppBarCommand zu diesem AppBarCommand. Gibt das Hostelement des AppBarCommand-Objekts standardmäßig zurück.</msg>
  <msg name="WinJS.UI.AppBarCommand.lastElementFocus">Ruft das HTMLElement in einem "Inhalt"-Typ AppBarCommand ab oder legt es fest, das denFokus erhalten soll, wenn der Fokus sich über die Ende- oder Pfeiltasten vom folgenden AppBarCommand zu diesem AppBarCommand bewegen würde. Gibt das Hostelement des AppBarCommand-Objekts standardmäßig zurück.</msg>
  <msg name="WinJS.UI.AppBarCommand.dispose">Gibt dieses Steuerelement frei.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">Registriert einen Ereignishandler für das angegebene Ereignis.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">Erforderlich. Der Name des zu registrierenden Ereignisses. Es muss "beforeshow", "beforehide", "aftershow" oder "afterhide" sein.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:useCapture">Optional. Auf "true" festgelegt, um den Ereignishandler für die Erfassungsphase zu registrieren ; andernfalls auf "false" festgelegt, um den Ereignishandler für die Bubblingphase zu registrieren.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">Entfernt einen Ereignishandler, den die addEventListener-Methode registriert hat.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">Erforderlich. Der Name des zu entfernenden Ereignisses.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:listener">Erforderlich. Die zu entfernende Ereignishandlerfunktion.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:useCapture">Optional. Auf "true" festgelegt, um den Ereignishandler für die Erfassungsphase zu entfernen ; andernfalls auf "false" festgelegt, um den Ereignishandler für die Bubblingphase zu entfernen.</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">Fügt eine zusätzliche CSS-Klasse während der Konstruktion hinzu.</msg>
  <msg name="WinJS.UI.AppBarCommand">Stellt einen Befehl dar, der in einem AppBar angezeigt wird.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">Das eigentliche AppBarCommand-Steuerelement.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">Das Symbolfeld des AppBarCommand.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">Die Imageformatierung des AppBarCommand-Symbols.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">Der Ring des AppBarCommands-Symbols.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">Die Bezeichnung des AppBarCommand</msg>
  <msg name="WinJS.UI.AppBar.constructor">Erstellt ein neues AppBar-Steuerelement.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">Das DOM-Element, das das Steuerelement hostet.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">Der Satz von Eigenschaften und Werten, der auf das neue AppBar-Steuerelement angewendet werden soll.</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">Das neue AppBar-Steuerelement.</msg>
  <msg name="WinJS.UI.AppBar.placement">Die Platzierung der AppBar in der Anzeige. Werte sind "oben" oder "unten".</msg>
  <msg name="WinJS.UI.AppBar.layout">Ruft das Layout des AppBar-Inhalts ab oder legt es entweder auf "Befehle" oder "Benutzerdefiniert" fest.</msg>
  <msg name="WinJS.UI.AppBar.sticky">Ruft einen Wert ab, der angibt, ob AppBar sichtbar oder fixiert ist, oder legt diesen fest. Dieser Wert ist wahr, wenn das AppBar fixiert ist; andernfalls ist er falsch.</msg>
  <msg name="WinJS.UI.AppBar.commands">Legt die Befehle für die AppBar fest. Diese Eigenschaft akzeptiert ein Array von AppBarCommand-Objekten.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">Ruft den Befehl mit der angegebenen ID aus dieser AppBar ab. Wenn mehr als ein Befehl gefunden wird, gibt diese Methode alle zurück.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">Die ID des Befehls, der zurückgegeben werden soll.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">Der gefundene Befehl, ein Array von Befehlen, wenn mehr als einer dieselbe ID haben, oder NULL, wenn kein Befehl gefunden wird.</msg>
  <msg name="WinJS.UI.AppBar.showCommands">Zeigt die angegebenen Befehle der AppBar an.</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">Ein Array der darzustellenden Befehle. Die Arrayelemente können AppBarCommand-Objekte oder Zeichenfolgenbezeichner (IDs) von Befehlen sein.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">Blendet die angegebenen Befehle der AppBar aus.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">Erforderlich. Befehl oder Befehle, die ausgeblendet werden sollen, entweder eine Zeichenfolge, DOM-Elemente oder WinJS-Objekte.</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">Zeigen Sie die angegebenen Befehle an und blenden Sie alle anderen Befehle in der AppBar aus.</msg>
  <msg name="WinJS.UI.AppBar.show">Zeigt die AppBar an, wenn sie ausgeblendet ist, unabhängig von einem anderen Zustand</msg>
  <msg name="WinJS.UI.AppBar.hide">Blendet die AppBar aus.</msg>
  <msg name="WinJS.UI.AppBar">Stellt eine Anwendungssymbolleiste für Anzeigenbefehle dar.</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">Wird unmittelbar vor dem Anzeigen einer AppBar ausgelöst.</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">Wird unmittelbar nach dem vollständigen Anzeigen einer AppBar ausgelöst.</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">Wird unmittelbar vor dem Ausblenden einer AppBar ausgelöst.</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">Wird unmittelbar nach dem vollständigen Ausblenden einer AppBar ausgelöst.</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">Das AppBar-Steuerelement selbst.</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">Format für eine benutzerdefinierte Layout-AppBar.</msg>
  <msg name="WinJS.UI.Flyout.constructor">Erstellt ein neues Flyout-Steuerelement.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">Der Satz von Eigenschaften und Werten, der auf das neue Flyout angewendet werden soll.</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">Das neue Flyout-Steuerelement.</msg>
  <msg name="WinJS.UI.Flyout.anchor">Ruft den Anker des Flyout-Steuerelement ab oder legt diesen fest. Das Ankerelement ist das HTML-Element, von dem das Flyout stammt, und wird relativ dazu positioniert. (Diese Einstellung kann überschrieben werden, wenn Sie die Show-Methode aufrufen.)</msg>
  <msg name="WinJS.UI.Flyout.placement">Ruft die Standardplatzierung dieses Flyouts ab oder legt sie fest. (Diese Einstellung kann überschrieben werden, wenn Sie die Show-Methode aufrufen.)</msg>
  <msg name="WinJS.UI.Flyout.alignment">Ruft den Standardausrichtung für dieses Flyout ab oder legt ihn fest. (Diese Einstellung kann überschrieben werden, wenn Sie die Show-Methode aufrufen.)</msg>
  <msg name="WinJS.UI.Flyout.show">Zeigt das Flyout an, wenn es ausgeblendet ist, unabhängig von anderen Zuständen.</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">Das DOM-Element oder die ID eines DOM-Elements zur Verankerung des Flyouts, mit dem bzw. der die Ankereigenschaft nur einmalig überschrieben wird.</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">Die Platzierung des Flyouts auf dem Anker: "Auto" (Standard), "Oben", "Unten", "Links" oder "Rechts". Dieser Parameter überschreibt die Platzierungseigenschaft nur für diese Anzeige.</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">Für die Platzierung oben oder unten kann das Flyout am Rand des Ankers mit folgenden Optionen ausgerichtet werden: "zentriert" (Standard), "links" oder "rechts". Dieser Parameter überschreibt die Ausrichtungseigenschaft nur für diese Anzeige.</msg>
  <msg name="WinJS.UI.Flyout.hide">Blendet das Flyout aus, wenn es sichtbar ist, unabhängig von anderen Zuständen.</msg>
  <msg name="WinJS.UI.Flyout">Zeigt eine einfache Benutzeroberfläche, die entweder der Information dient oder einen Benutzereingriff erfordert. Anders als ein Dialogfeld kann ein Flyout "Light Dismissed" sein, indem davon weggeklickt oder weggetippt wird.</msg>
  <msg name="WinJS.UI.Flyout_name">Flyout</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">Wird unmittelbar vor dem Anzeigen eines Flyouts ausgelöst.</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">Wird unmittelbar nach dem vollständigen Anzeigen eines Flyouts ausgelöst.</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">Wird unmittelbar vor dem Ausblenden eines Flyouts ausgelöst.</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">Wird unmittelbar nach dem vollständigen Ausblenden eines Flyouts ausgelöst.</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">Das Flyoutsteuerelement selbst.</msg>
  <msg name="WinJS.UI.Menu.constructor">Erstellt ein neues Menu-Steuerelement.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">Der Satz von Eigenschaften und Werten, der auf das Steuerelement angewendet werden soll.</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">Das neue Menu-Steuerelement.</msg>
  <msg name="WinJS.UI.Menu.commands">Legt die MenuCommand-Objekte fest, die im Menü angezeigt werden. Dies kann auf ein einzelnes MenuCommand oder ein Array von MenuCommand-Objekte festlegt werden.</msg>
  <msg name="WinJS.UI.Menu.getCommandById">Rufen Sie den Befehl mit der angegebenen ID aus diesem Menü ab. Wenn mehr als ein Befehl gefunden wird, werden alle zurückgegeben.</msg>
  <msg name="WinJS.UI.Menu.getCommandById_p:id">Die ID des zu suchenden Befehls.</msg>
  <msg name="WinJS.UI.Menu.showCommands">Zeigt die angegebenen Befehle des Menüs an.</msg>
  <msg name="WinJS.UI.Menu.showCommands_p:commands">Die anzuzeigenden Befehle. Die Arrayelemente können Menü-Objekte oder Zeichenfolgenbezeichner (IDs) von Befehlen sein.</msg>
  <msg name="WinJS.UI.Menu.hideCommands">Blendet das Menü aus.</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">Zeigt die angegebenen Befehle des Menüs beim Ausblenden aller weiteren Befehle.</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands_p:commands">Die anzuzeigenden Befehle. Die Arrayelemente können MenuCommand-Objekte oder Zeichenfolgenbezeichner (IDs) von Befehlen sein.</msg>
  <msg name="WinJS.UI.Menu.show">Zeigt das Menü an, wenn es ausgeblendet ist, unabhängig von anderen Zuständen.</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">Das DOM-Element oder die ID eines DOM-Elements zum verankern des Menüs. Dieser Parameter überschreibt die Ankereigenschaft für nur diesen Methodenaufruf.</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">Die Platzierung des Menüs auf dem Anker: "Auto" (Standard), "Oben", "Unten", "Links" oder "Rechts". Dieser Parameter überschreibt die Platzierungseigenschaft für nur diesen Methodenaufruf.</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">Für die Platzierung oben oder unten kann das Menü am Rand des Ankers mit folgenden Optionen ausgerichtet werden: "zentriert" (Standard), "links" oder "rechts". Dieser Parameter überschreibt die Anordnungseigenschaft für nur diesen Methodenaufruf.</msg>
  <msg name="WinJS.UI.Menu">Stellt ein Menüflyout zum Anzeigen der Befehle dar.</msg>
  <msg name="WinJS.UI.Menu_name">Menü</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">Wird unmittelbar vor dem Anzeigen eines Menüs ausgelöst.</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">Wird unmittelbar nach dem vollständigen Anzeigen eines Menüs ausgelöst.</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">Wird unmittelbar vor dem Ausblenden eines Menüs ausgelöst.</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">Wird unmittelbar nach dem vollständigen Ausblenden eines Menüs ausgelöst.</msg>
  <msg name="WinJS.UI.Menu_part:menu">Das Menüsteuerelement selbst</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">Erstellt ein neues MenuCommand-Objekt.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">Der Satz von Eigenschaften und Werten, der auf das neue MenuCommand angewendet werden soll.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">Ein MenuCommand-Steuerelement.</msg>
  <msg name="WinJS.UI.MenuCommand.id">Ruft die ID des MenuCommand ab.</msg>
  <msg name="WinJS.UI.MenuCommand.type">Ruft den Typ des MenuCommands ab. Mögliche Werte sind "Schaltfläche", "Toggle", "Flyout" oder "Trennzeichen".</msg>
  <msg name="WinJS.UI.MenuCommand.label">Die Bezeichnung des MenuCommand</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">Für MenuCommands vom Typ "Flyout", gibt diese Eigenschaft WinJS.UI.Flyout zurück, das diesen Befehl aufruft. Wenn Sie diese Eigenschaft festlegen, können Sie sie auf die Zeichenfolgen-ID des Flyouts, auf das DOM-Objekts, das das Flyout hostet, oder auf das Flyoutobjekt selbst festlegen.</msg>
  <msg name="WinJS.UI.MenuCommand.selected">Ruft den Auswahlzustand einer Umschaltfläche ab oder legt ihn fest. Diese Eigenschaft ist wahr, wenn die Umschaltfläche ausgewählt wird; andernfalls ist sie falsch.</msg>
  <msg name="WinJS.UI.MenuCommand.element">Ruft das DOM-Element ab, das dieses MenuCommand hostet.</msg>
  <msg name="WinJS.UI.MenuCommand.disabled">Ruft einen Wert ab, der angibt, ob der MenuCommand deaktiviert ist, oder legt diesen fest. Dieser Wert ist wahr, wenn MenuCommand deaktiviert wird; andernfalls falsch.</msg>
  <msg name="WinJS.UI.MenuCommand.hidden">Bestimmen Sie, ob ein Befehl derzeit ausgeblendet ist.</msg>
  <msg name="WinJS.UI.MenuCommand.extraClass">Ruft die zusätzliche CSS-Klasse ab oder legt sie fest, die auf das DOM-Element des Hosts angewendet wird.</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:type">Der Name des zu registrierenden Ereignisses.</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:listener">Die Funktion, die das Ereignis behandelt.</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:useCapture">Auf "true" festgelegt, um den Ereignishandler für die Erfassungsphase zu registrieren ; andernfalls auf "false" festgelegt, um den Ereignishandler für die Bubblingphase zu registrieren.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener">Entfernt den angegebenen Ereignishandler, den die addEventListener-Methode registriert hat.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:type">Der Name des zu entfernenden Ereignisses.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:listener">Die zu entfernende Ereignishandlerfunktion.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:useCapture">Auf "true" festgelegt, um den Ereignishandler für die Erfassungsphase zu entfernen; auf "false" festgelegt, um den Ereignishandler für die Bubblingphase zu entfernen.</msg>
  <msg name="WinJS.UI.MenuCommand">Stellt einen Befehl dar, der in einem Menü angezeigt wird. MenuCommand-Objekte stellen Schaltfläche, Umschaltfläche, Flyoutschaltfläche oder Trennzeichenfunktionalität für Menü-Steuerelemente bereit.</msg>
  <msg name="WinJS.UI.MenuCommand_name">Das MenuCommand-Steuerelement selbst</msg>
  <msg name="WinJS.UI.Pivot.constructor">Erstellt ein neues Pivot-Steuerelement.</msg>
  <msg name="WinJS.UI.Pivot.constructor_p:element">Das DOM-Element, das als Host des Pivot-Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.Pivot.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements. Ereignisnamen müssen mit "on" beginnen. Um beispielsweise einen Handler für das IndexChanged-Ereignis bereitzustellen, fügen Sie dem Optionsobjekt eine Eigenschaft mit dem Namen "onselectionchanged" hinzu und legen Sie ihren Wert auf den Ereignishandler fest.</msg>
  <msg name="WinJS.UI.Pivot.constructor_returnValue">Das neue Pivot-Element.</msg>
  <msg name="WinJS.UI.Pivot.element">Ruft das DOM-Element ab, das das Pivot-Element hostet.</msg>
  <msg name="WinJS.UI.Pivot.locked">Ruft einen Wert ab, der angibt, ob das Pivot-Element für das aktuelle Element gesperrt ist.</msg>
  <msg name="WinJS.UI.Pivot.items">Ruft WinJS.Binding.List von PivotItem-Objekten, die zu diesem Pivot-Element gehören, ab oder legt sie fest.</msg>
  <msg name="WinJS.UI.Pivot.title">Ruft den Titel für das Pivot-Element ab oder legt diesen fest.</msg>
  <msg name="WinJS.UI.Pivot.selectedIndex">Ruft den Index des Elements in der Ansicht ab oder legt diesen fest. Diese Eigenschaft ist für das Wiederherstellen einer vorherigen Ansicht nützlich, wenn die App gestartet oder fortgesetzt wird.</msg>
  <msg name="WinJS.UI.Pivot.selectedItem">Ruft das Element in der Ansicht ab oder legt dieses fest. Diese Eigenschaft ist für das Wiederherstellen einer vorherigen Ansicht nützlich, wenn die App gestartet oder fortgesetzt wird.</msg>
  <msg name="WinJS.UI.Pivot">Tab-Steuerelement, das ein Inhaltselement anzeigt.</msg>
  <msg name="WinJS.UI.Pivot_e:selectionchanged">Wird ausgelöst, wenn sich das Element im Bildschirm geändert hat.</msg>
  <msg name="WinJS.UI.Pivot_e:itemloaded">Wird ausgelöst, wenn die Animation des Elements startet.</msg>
  <msg name="WinJS.UI.Pivot_e:itemanimationend">Wird ausgelöst, wenn die Animation des Elements endet.</msg>
  <msg name="WinJS.UI.Pivot_part:pivot">Das gesamte Pivot-Steuerelement.</msg>
  <msg name="WinJS.UI.Pivot_part:title">Der Titel für das Pivot-Steuerelement.</msg>
  <msg name="WinJS.UI.Pivot_part:header">Ein Header eines Pivot-Elements.</msg>
  <msg name="WinJS.UI.Pivot_part:progress">Die Statusanzeige für das Pivot-Element.</msg>
  <msg name="WinJS.UI.PivotItem.constructor">Erstellt ein neues PivotItem.</msg>
  <msg name="WinJS.UI.PivotItem.constructor_p:element">Das DOM-Element, das als Host des PivotItem-Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.PivotItem.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements.</msg>
  <msg name="WinJS.UI.PivotItem.constructor_returnValue">Das neue PivotItem.</msg>
  <msg name="WinJS.UI.PivotItem.element">Ruft das DOM-Element ab, das als PivotItem-Host fungiert.</msg>
  <msg name="WinJS.UI.PivotItem.contentElement">Ruft das DOM-Element ab, das den PivotItem-Inhalt hostet.</msg>
  <msg name="WinJS.UI.PivotItem.header">Abrufen oder Festlegen des PivotItem-Headers. Nachdem Sie diese Eigenschaft festlegen, rendert das Pivot-Element den Header erneut.</msg>
  <msg name="WinJS.UI.PivotItem">Definiert ein Element eines Pivot-Steuerelements.</msg>
  <msg name="WinJS.UI.PivotItem_part:pivotitem">Das gesamte PivotItem-Steuerelement.</msg>
  <msg name="WinJS.UI.PivotItem_part:content">Der PivotItem-Inhaltsbereich.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor">Erstellt ein neues ItemContainer-Steuerelement.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:element">Das DOM-Element, das als Host des ItemContainer-Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements. Ereignisnamen müssen mit "on" beginnen. Um beispielsweise einen Handler für das Ereignis "selectionchanging" bereitzustellen, fügen Sie dem Optionsobjekt eine Eigenschaft mit dem Namen "onselectionchanging" hinzu und legen Sie ihren Wert auf den Ereignishandler fest.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_returnValue">Das neue ItemContainer-Steuerelement.</msg>
  <msg name="WinJS.UI.ItemContainer.element">Ruft das DOM-Element ab, das als Host des itemContainer-Steuerelements fungiert.</msg>
  <msg name="WinJS.UI.ItemContainer.draggable">Ruft einen Wert ab, der angibt, ob das Element gezogen werden kann, oder legt diesen fest. Der Standardwert ist false.</msg>
  <msg name="WinJS.UI.ItemContainer.selected">Ruft einen Wert ab, der angibt, ob das Element ausgewählt ist, oder legt diesen fest.</msg>
  <msg name="WinJS.UI.ItemContainer.swipeOrientation">Ruft die Schweifausrichtung vom ItemContainer-Steuerelement ab oder legt sie fest. Der Standardwert ist "vertikal".</msg>
  <msg name="WinJS.UI.ItemContainer.tapBehavior">Ruft einen Wert ab oder legt einen Wert fest, der angibt, wie das ItemContainer-Steuerelement reagiert, wenn der Benutzer auf ein Element tippt oder klickt. Das Tippen oder Klicken kann das Element aufrufen, auswählen und aufrufen oder keine Auswirkungen haben. Mögliche Werte: "toggleSelect", "invokeOnly" und "keine". Der Standardwert ist "invokeOnly".</msg>
  <msg name="WinJS.UI.ItemContainer.swipeBehavior">Ruft ab oder legt fest, wie das ItemContainer-Steuerelement auf Streifeninteraktion reagiert. Mit der Streifbewegung kann das Element ausgewählt werden, oder sie hat keine Auswirkungen auf die aktuelle Auswahl. Mögliche Werte: "Sie wählen", "Keine" aus. Der Standardwert ist: "select".</msg>
  <msg name="WinJS.UI.ItemContainer.selectionDisabled">Ruft ab oder legt fest, ob die Elementauswahl deaktiviert ist. Der Standardwert ist false.</msg>
  <msg name="WinJS.UI.ItemContainer.forceLayout">Erzwingt das ItemContainer-Steuerelement zu Aktualisierung des Layouts. Verwenden Sie diese Funktion, wenn sich die Lesenrichtung der App ändert, nachdem das Steuerelement initialisiert wurde.</msg>
  <msg name="WinJS.UI.ItemContainer">Definiert ein Element, das gedrückt, gestreift und abgerufen werden kann.</msg>
  <msg name="WinJS.UI.ItemContainer_e:invoked">Wird ausgelöst, wenn der Benutzer auf ein Element tippt oder klickt.</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanging">Wird ausgelöst, bevor das Element aktiviert oder deaktiviert ist.</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanged">Wird ausgelöst, nachdem das Element aktiviert oder deaktiviert ist.</msg>
  <msg name="WinJS.UI.ItemContainer_part:itemcontainer">Hauptcontainer für das Auswahlelementsteuerelement.</msg>
  <msg name="WinJS.UI.ItemContainer_part:focusedoutline">Wird verwendet, um einen Umriss anzuzeigen, wenn der Hauptcontainer den Tastaturfokus hat.</msg>
  <msg name="WinJS.UI.Tooltip.constructor">Erstellt eine neue QuickInfo.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">Das DOM-Element, das die QuickInfo hostet.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">Ein Objekt, das ein oder mehrere Eigenschaft/Wert-Paare enthält, die auf das neue Steuerelement angewendet werden sollen. Jede Eigenschaft des Optionsobjekts entspricht einer der Eigenschaften oder einem der Ereignisse des Steuerelements. Ereignisnamen müssen mit "on" beginnen. Um beispielsweise einen Handler für das Ereignis "opened" bereitzustellen, fügen Sie dem Optionsobjekt eine Eigenschaft mit dem Namen "onopened" hinzu und legen Sie ihren Wert auf den Ereignishandler fest. Dieser Parameter ist optional.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">Die neue QuickInfo.</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">Ruft den HTML-Inhalt der QuickInfo ab oder legt diesen fest.</msg>
  <msg name="WinJS.UI.Tooltip.element">Ruft das DOM-Element ab, das als Host für die QuickInfo fungiert, oder legt dieses fest.</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">Ruft das DOM-Element ab, das den Inhalt für die QuickInfo darstellt, oder legt dieses fest.</msg>
  <msg name="WinJS.UI.Tooltip.placement">Ruft die Position für die QuickInfo relativ zu ihrem Zielelement ab oder legt sie fest: oben, unten, links oder rechts.</msg>
  <msg name="WinJS.UI.Tooltip.infotip">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die QuickInfo ein Infotipp ist oder eine QuickInfo, die viele Informationen enthält und länger als eine typische QuickInfo angezeigt werden soll. Der Standardwert ist false.</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">Ruft zusätzliche CSS-Klassen ab, die auf das Hostelement des QuickInfo-Steuerelements angewendet werden sollen, oder legt diese fest.</msg>
  <msg name="WinJS.UI.Tooltip.dispose">Gibt diese QuickInfo frei.</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:eventName">Der Name des Ereignisses.</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:eventCallback">Die diesem Ereignis zugeordnete Ereignishandlerfunktion.</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:capture">Auf "true" festgelegt, um den Ereignishandler für die Erfassungsphase zu registrieren; auf "false" festgelegt zur Registrierung für die Bubbling-Phase.</msg>
  <msg name="WinJS.UI.Tooltip.removeEventListener">Hebt die Registrierung eines Ereignishandlers für das angegebene Ereignis auf.</msg>
  <msg name="WinJS.UI.Tooltip.removeEventListener:capture">Auf "true" festgelegt, um die Registrierung des Ereignishandlers für die Erfassungsphase aufzuheben; andernfalls auf "false" festgelegt, um die Registrierung des Ereignishandlers für die Bubblingphase aufzuheben.</msg>
  <msg name="WinJS.UI.Tooltip.open">Zeigt die QuickInfo an.</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">Der Typ der QuickInfo, die angezeigt werden soll: "Fingereingabe", "Mouseover", "Mousedown" oder "Tastatur". Der Standardwert ist "Mousedown".</msg>
  <msg name="WinJS.UI.Tooltip.close">Blendet die QuickInfo aus.</msg>
  <msg name="WinJS.UI.Tooltip">Zeigt eine QuickInfo an, die Bilder und Formatierung enthalten kann.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">Wird ausgelöst, kurz bevor die QuickInfo angezeigt wird.</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">Wird ausgelöst, wenn die QuickInfo angezeigt wird.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">Wird ausgelöst, kurz bevor die QuickInfo ausgeblendet wird.</msg>
  <msg name="WinJS.UI.Tooltip_e:close">Wird ausgelöst, wenn die QuickInfo ausgeblendet wird.</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">Das gesamte QuickInfo-Steuerelement.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">Erstellt eine Erweiterungsanimation. Nachdem Sie das ExpandAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das ExpandAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">Ein einzelnes Element oder eine Auflistung von Elementen, die aufgedeckt wurden.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">Ein einzelnes Element oder eine Auflistung von Elementen, deren Positionen von dem Erweitern betroffen wurden.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">Ein ExpandAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">Erstellt eine Animation zur Reduzierung der Ebene. Nachdem Sie das CollapseAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das CollapseAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">Ein einzelnes Element oder eine Auflistung von Elementen, die aus der Ansicht entfernt werden. Wenn die Animation abgeschlossen wird, sollte die Anwendung die Elemente ausblenden oder sie aus dem Dokument entfernen.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">Ein einzelnes Element oder eine Auflistung von Elementen, deren Positionen von dem Reduzieren betroffen wurden.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">Ein CollapseAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">Erstellt eine Animation zur Neuanordnung. Nachdem Sie das RepositionAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das RepositionAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die neu angeordnet wurden.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">RepositonAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.fadeIn">Führt eine Animation zum Einblenden aus.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die eingeblendet werden sollen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 1.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">Zusicherungsobjekt, das bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.fadeOut">Führen Sie eine Ausblendanimation aus.</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die ausgeblendet werden sollen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 0.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">Erstellt eine Animation, die einer Liste hinzugefügt werden soll. Nachdem Sie das AddToListAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das AddToListAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">Ein einzelnes Element oder eine Auflistung von Elementen, die hinzugefügt wurden.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">Ein einzelnes Element oder eine Auflistung von Elementen, deren Positionen von dem Hinzufügen betroffen wurden.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">Ein AddToListAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">Erstellt eine Animation für das Löschen in einer Liste. Nachdem Sie das DeleteFromListAnimation-Objekt erstellt haben, ändern Sie das Dokument dem Löschvorgang entsprechend, und rufen Sie dann die execute-Methode für das DeleteFromListAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">Ein einzelnes Element oder eine Auflistung von Elementen, die gelöscht werden. Wenn die Animation abgeschlossen wird, sollte die Anwendung die Elemente ausblenden oder sie aus dem Dokument entfernen.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">Ein einzelnes Element oder eine Auflistung von Elementen, deren Positionen von dem Löschen betroffen wurden.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">Ein DeleteFromListAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">Erstellt eine Animation für das Hinzufügen zu einer Liste von Suchergebnissen. Dies entspricht einer AddToListAnimation, ist jedoch schneller. Nachdem Sie das AddToSearchListAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das AddToSearchListAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">AddToSearchListAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">Erstellt eine Animation zum Löschen aus einer Liste mit Suchergebnissen. Dies entspricht einer DeleteFromListAnimation, ist jedoch schneller. Nachdem Sie das DeleteFromSearchListAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das DeleteFromSearchListAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">Ein DeleteFromSearchListAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">Verschiebt ein Element oder Elemente an die entsprechende Position am Bildschirmrand. Diese Animation ist für ein kleines Objekt wie eine AppBar vorgesehen.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die an ihre Position verschoben werden sollen. Die Elemente müssen bei Aufruf der Funktion an ihre endgültigen Positionen verschoben sein.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">Optionales Offsetobjekt oder Auflistung von Offsetobjekt-Arrays, die den Anfangspunkt der Animation beschreiben. Wenn die Anzahl der Offsetobjekte kleiner als die Länge des Elementparameters ist, wird der letzte Wert für alle verbleibenden Elemente wiederholt. Wenn dieser Parameter ausgelassen wird, wird ein Standardwert verwendet.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:options">Optionales Objekt, das den Mechanismus angeben kann , der verwendet wird, um der Animation wiederzugeben. Standardmäßig werden css-Animationen verwendet, aber wenn { mechanism: "transition" } angegeben ist, werden css-Übergänge verwendet.</msg>
  <msg name="WinJS.UI.Animation.showPanel">Verschiebt ein Element oder Elemente an die entsprechende Position am Bildschirmrand. Diese Animation ist für ein großes Objekt wie eine Tastatur vorgesehen.</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">Zusicherungsobjekt</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">Verschiebt ein Element oder Elemente am Bildschirmrand aus dem sichtbaren Bereich. Diese Animation ist für ein kleines Objekt wie eine AppBar vorgesehen.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die aus dem sichtbaren Bereich verschoben werden sollen. Die Elemente müssen bei Aufruf der Funktion an ihre Positionen auf dem Bildschirm verschoben sein.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">Optionales Offsetobjekt oder Auflistung von Offsetobjekt-Arrays, die den Endpunkt der Animation beschreiben. Wenn die Anzahl der Offsetobjekte kleiner als die Länge des Elementparameters ist, wird der letzte Wert für alle verbleibenden Elemente wiederholt. Wenn dieser Parameter ausgelassen wird, wird ein Standardwert verwendet.</msg>
  <msg name="WinJS.UI.Animation.hidePanel">Verschiebt ein Element oder Elemente am Bildschirmrand aus dem sichtbaren Bereich. Diese Animation ist für ein großes Objekt wie eine Tastatur vorgesehen.</msg>
  <msg name="WinJS.UI.Animation.showPopup">Zeigt ein Element oder Elemente in Form eines Popups an.</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die wie ein Popup angezeigt werden sollen.</msg>
  <msg name="WinJS.UI.Animation.hidePopup">Entfernt ein Popup vom Bildschirm.</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die wie ein Popup ausgeblendet werden sollen. Wenn die Animation abgeschlossen wird, sollte die Anwendung die Elemente ausblenden oder sie aus dem Dokument entfernen.</msg>
  <msg name="WinJS.UI.Animation.pointerDown">Führen Sie eine Zeiger-nach-unten-Animation aus. Verwenden Sie die pointerUp-Animation, um die Auswirkungen dieser Animation umzukehren.</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die auf das Zeiger-nach-unten-Ereignis reagieren. Am Ende der Animation wurden die Eigenschaften der Elemente dem Zustand Zeiger-nach-unten entsprechend geändert.</msg>
  <msg name="WinJS.UI.Animation.pointerUp">Führen Sie eine Zeiger-nach-oben-Animation aus. Damit werden die Auswirkungen einer pointerDown-Animation umgekehrt.</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die auf das Zeiger-nach-oben-Ereignis reagieren. Am Ende der Animation werden die Eigenschaften der Elemente auf die normale Einstellung zurückgesetzt.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">Führen Sie eine Animation zum Start des Ziehens aus. Verwenden Sie die dragSourceEnd-Animation, um die Auswirkungen dieser Animation umzukehren.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">Ein einzelnes Element oder eine Auflistung von Elementen, die gezogen werden. Am Ende der Animation wurden die Eigenschaften der Elemente dem Ziehzustand entsprechend geändert.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">Ein einzelnes Element oder eine Auflistung von Elementen, die als nicht zu ziehen markiert werden sollen. Am Ende der Animation wurden die Eigenschaften der Elemente dem Ziehzustand entsprechend geändert.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">Führen Sie eine Animation zum Ende des Ziehens aus. Dadurch werden die Auswirkungen der dragSourceStart-Animation umgekehrt.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">Ein einzelnes Element oder eine Auflistung von Elementen, die nicht mehr gezogen werden sollen. Am Ende der Animation werden die Eigenschaften der Elemente auf die normale Einstellung zurückgesetzt.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">Optionales Offsetobjekt oder Auflistung von Offsetobjekt-Arrays, die den Anfangspunkt der Animation beschreiben. Wenn die Anzahl der Offsetobjekte kleiner als die Länge des dragSource-Parameters ist, wird der letzte Wert für alle verbleibenden Elemente wiederholt. Wenn dieser Parameter ausgelassen wird, wird ein Standardwert verwendet.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">Ein einzelnes Element oder eine Auflistung von Elementen, die als nicht zu ziehen markiert wurden. Am Ende der Animation werden die Eigenschaften der Elemente auf die normale Einstellung zurückgesetzt.</msg>
  <msg name="WinJS.UI.Animation.enterContent">Führen Sie eine Animation zur Eingabe von Inhalt aus.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">Ein einzelnes Element oder eine Auflistung von Elementen, die den eingehenden Inhalt darstellen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 1.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">Optionales Offsetobjekt oder Auflistung von Offsetobjekt-Arrays, die den Anfangspunkt der Animation beschreiben. Wenn die Anzahl der Offsetobjekte kleiner als die Länge des eingehenden Parameters ist, wird der letzte Wert für alle verbleibenden Elemente wiederholt. Wenn dieser Parameter ausgelassen wird, wird ein Standardwert verwendet.</msg>
  <msg name="WinJS.UI.Animation.exitContent">Führen Sie eine Animation zur Beendigung des Inhalts aus.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">Ein einzelnes Element oder eine Auflistung von Elementen, die den ausgehenden Inhalt darstellen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 0.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">Optionales Offsetobjekt oder Auflistung von Offsetobjekt-Arrays, die den Endpunkt der Animation beschreiben. Wenn die Anzahl der Offsetobjekte kleiner als die Länge des ausgehenden Parameters ist, wird der letzte Wert für alle verbleibenden Elemente wiederholt. Wenn dieser Parameter ausgelassen wird, wird ein Standardwert verwendet.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">Führen Sie eine Animation aus, die angibt, dass ein gezogenes Objekts zwischen anderen Elementen abgelegt werden kann. Verwenden Sie die dragBetweenLeave-Animation, um die Auswirkungen dieser Animation umzukehren.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">Ein einzelnes Element oder eine Auflistung von Elementen (normalerweise zwei), zwischen denen das gezogene Objekt abgelegt werden kann. Am Ende der Animation sind die Eigenschaften der Elemente dem Zieh-Zwischen-Zustand entsprechend geändert worden.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">Führen Sie eine Animation aus, die angibt, dass ein gezogenes Objekts nicht mehr zwischen anderen Elementen abgelegt wird. Dadurch werden die Auswirkungen der dragBetweenEnter-Animation umgekehrt.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">Ein einzelnes Element oder eine Auflistung von Elementen (normalerweise zwei), zwischen denen das gezogene Objekt nicht mehr abgelegt wird. Am Ende der Animation sind die Eigenschaften der Elemente auf den dragSourceStart-Zustand festgelegt worden.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">Schieben Sie ein durch Streifen ausgewähltes Objekt wieder in Position, wenn der Zeiger freigegeben wird, und zeigen Sie die Auswahlmarke an.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">Ein einzelnes Element oder eine Auflistung von Elementen, die ausgewählt werden. Am Ende der Animation werden die Eigenschaften der Elemente auf die normale Einstellung zurückgesetzt.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">Ein einzelnes Element oder eine Auflistung von Elementen, die die Auswahlmarke darstellen.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">Schieben Sie ein Objekt, dessen Auswahl durch Streifen aufgehoben wurde, wieder in Position, wenn der Zeiger freigegeben wird, und blenden Sie die Auswahlmarke aus.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">Ein einzelnes Element oder eine Auflistung von Elementen, deren Auswahl aufgehoben wird. Am Ende der Animation werden die Eigenschaften der Elemente auf die normale Einstellung zurückgesetzt.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">Decken Sie ein Objekt als Ergebnis einer Streifbewegung auf, oder schieben Sie das durch Streifen ausgewählte Objekt nach dem Aufdecken wieder zurück in Position.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">Ein einzelnes Element oder eine Auflistung von Elementen, die ausgewählt werden. Am Ende der Animation sind die Eigenschaften der Elemente dem angegebenen Offset entsprechend geändert worden.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">Optionales Offsetobjekt oder Auflistung von Offsetobjekt-Arrays, die den Endpunkt der Animation beschreiben. Wenn das Objekt zurück in Position verschoben wird, sollte der Offset wie folgt lauten: {top: "0px", left: "0px"}. Wenn die Anzahl der Offsetobjekte kleiner als die Länge des Elementparameters ist, wird der letzte Wert für alle verbleibenden Elemente wiederholt. Wenn dieser Parameter ausgelassen wird, wird ein Standardwert verwendet. Der Standardwert beschreibt die Bewegung für eine Aufdeckung.</msg>
  <msg name="WinJS.UI.Animation.enterPage">Führen Sie eine enterPage-Animation aus.</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die die eingehende Seite darstellen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 1.</msg>
  <msg name="WinJS.UI.Animation.exitPage">Führen Sie eine exitPage-Animation aus.</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">Ein einzelnes Element oder eine Auflistung von Elementen, die die ausgehende Seite darstellen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 0.</msg>
  <msg name="WinJS.UI.Animation.crossFade">Führen Sie eine crossFade-Animation aus.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">Ein einzelnes Element oder eine Auflistung von eingehenden Elementen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 1.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">Ein einzelnes ausgehendes Element oder eine Auflistung von ausgehenden Elementen. Am Ende der Animation beträgt die Durchlässigkeit der Elemente 0.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">Erstellt eine Peek-Animation. Nachdem Sie das PeekAnimation-Objekt erstellt haben, ändern Sie das Dokument, um die Elemente auf ihre neuen Positionen zu verschieben, und rufen Sie dann die execute-Methode für das PeekAnimation-Objekt auf.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">Ein einzelnes Element oder eine Auflistung von Elementen, die für den Peek neu angeordnet werden.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">PeekAnimation-Objekt, dessen execute-Methode eine Zusicherung zurückgibt, die bei Abschluss der Animation abgeschlossen wird.</msg>
  <msg name="WinJS.UI.Animation.updateBadge">Führen Sie eine updateBadge-Animation aus.</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">Ein einzelnes Element oder eine Auflistung von Elementen, die den eingehendem Infoanzeiger darstellen.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">Initialisiert die VirtualizedDataSource-Basisklasse einer benutzerdefinierten Datenquelle.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">Ein Objekt, das IListDataAdapter implementiert und Daten für die VirtualizedDataSource bereitstellt.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">Ein Objekt, das die Eigenschaften enthält, die zusätzliche Optionen für die VirtualizedDataSource angeben: "cacheSize": eine Zahl, die die Mindestanzahl nicht angeforderter Elemente angibt, die zwischengespeichert werden sollen für den Fall, dass sie angefordert werden. Der Optionsparameter ist optional.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">Eine Implementierung von IListDataNotificationHandler, der der IListDataAdapter.setNotificationHandler-Methode übergeben wird.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">Benachrichtigt die VirtualizedDataSource, dass einige Daten geändert wurden, ohne anzugeben, welche Daten dies sind. Es ist für einige Datenquellen nicht empfehlenswert, diese Methode für beliebige oder alle Änderungen aufzurufen. Daher ist dieser Aufruf optional. Wenn ein angegebener Datenadapter ihn jedoch nie aufruft, sollte die Anwendung für die VirtualizedDataSource in regelmäßigen Abständen "invalidateAll" aufrufen, um die Daten zu aktualisieren.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">Eine Zusicherung, die abgeschlossen wird, wenn die Daten vollständig aktualisiert und alle Änderungsbenachrichtigungen gesendet wurden.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">Benachrichtigt die Listendatenquelle, dass die Listendaten so umfassend geändert wurden, dass es besser ist, die Daten von Grund auf neu zu laden.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">Gibt den Anfang eines Benachrichtigungsbatch an. Rufen Sie ihn vor einer Sequenz anderer Benachrichtigungsaufrufe auf, um die Anzahl der countChanged- und indexChanged-Benachrichtigungen zu minimieren, die an den Client der VirtualizedDataSource gesendet werden. Sie müssen dies mit einem Aufruf der endNotifications koppeln, und gekoppelte Paare können nicht geschachtelt werden.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">Löst eine Benachrichtigung aus, dass ein Element eingefügt wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">Das eingefügte Element. Es muss über eine Schlüssel- und eine Dateneigenschaft verfügen (es muss die IItem-Schnittstelle implementieren).</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">Der Schlüssel des Elements vor der Einfügemarke oder NULL, wenn das Element am Anfang der Liste eingefügt wurde. Es kann NULL sein, wenn Sie nextKey angegeben haben.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">Der Schlüssel des Elements nach der Einfügemarke oder NULL, wenn das Element am Ende der Liste eingefügt wurde. Es kann NULL sein, wenn Sie previousKey angegeben haben.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">Der Index des eingefügten Elements.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">Löst eine Benachrichtigung aus, dass ein Element geändert wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">Ein IItem, das das geänderte Element darstellt.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">Löst eine Benachrichtigung aus, dass ein Element verschoben wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">Das Element, das verschoben wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">Der Schlüssel des Elements vor der Einfügemarke oder NULL, wenn das Element auf den Anfang der Liste verschoben wurde. Es kann NULL sein, wenn Sie nextKey angegeben haben.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">Der Schlüssel des Elements nach der Einfügemarke oder NULL, wenn das Element an das Ende der Liste verschoben wurde. Es kann NULL sein, wenn Sie previousKey angegeben haben.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">Der Index des Elements, bevor es verschoben wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">Der Index des Elements, nachdem es verschoben wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">Löst eine Benachrichtigung aus, dass ein Element entfernt wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">Der Schlüssel des Elements, das entfernt wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">Der Index des Elements, das entfernt wurde.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">Schließt eine Sequenz von Benachrichtigungen ab, die mit einem Aufruf von beginNotifications begann.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">Erstellt ein IListBinding-Objekt, das einem Client ermöglicht, aus der Liste zu lesen und Benachrichtigungen für Änderungen zu empfangen, die sich auf die Teile dieser Liste auswirken, die der Client bereits gelesen hat.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">Ein Objekt, das die IListNotificationHandler-Schnittstelle implementiert. Wenn Sie diesen Parameter weglassen, sind keine Änderungsbenachrichtigungen verfügbar.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">Ein Objekt, das die IListBinding-Schnittstelle implementiert.</msg>
  <msg name="WinJS.UI.IListBinding">Eine Schnittstelle, die es einem Client ermöglicht, aus der Liste zu lesen und Benachrichtigungen für Änderungen zu empfangen, die sich auf die Teile dieser Liste auswirken, die der Client bereits gelesen hat. IListBinding kann auch in Listen aufgeführt werden, die sich jederzeit ändern können.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">Definiert das angegebene Element als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">Das IItem oder die IItemPromise, um das aktuelle Element zu definieren.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">Ein Objekt, das die IItemPromise-Schnittstelle implementiert und als Zusicherung für das angegebene Element dient. Wenn das angegebene Element nicht in der Liste enthalten ist, schließt die Zusicherung mit dem Wert NULL ab.</msg>
  <msg name="WinJS.UI.IListBinding.current">Ruft das aktuelle Element ab.</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">Ein Objekt, das die IItemPromise-Schnittstelle implementiert und als Zusicherung für das aktuelle Element dient. Wenn der Cursor über den Anfang oder das Ende der Liste hinaus bewegt wird, schließt die Zusicherung mit dem Wert NULL ab. Wenn das aktuelle Element gelöscht oder verschoben wurde, gibt die Zusicherung einen Fehler zurück.</msg>
  <msg name="WinJS.UI.IListBinding.previous">Ruft das Element vor dem aktuellen Element ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">Ein Objekt, das die IItemPromise-Schnittstelle implementiert und als Zusicherung für das vorherige Element dient. Wenn der Cursor über den Anfang der Liste hinaus bewegt wird, schließt die Zusicherung mit dem Wert NULL ab.</msg>
  <msg name="WinJS.UI.IListBinding.next">Ruft das Element nach dem aktuellen Element ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">Ein Objekt, das die IItemPromise-Schnittstelle implementiert und als Zusicherung für das nächste Element dient. Wenn der Cursor über das Ende der Liste hinaus bewegt wird, schließt die Zusicherung mit dem Wert NULL ab.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">Erstellt eine Anforderung, um Änderungsbenachrichtigungen für das angegebene Element zu beenden. Das Element wird nur freigegeben, wenn die Zahl der Freigabeaufrufe der Anzahl der IItemPromise.retain-Aufrufe entspricht. Die Anzahl der Freigabeaufrufe darf die Anzahl der Beibehaltungsaufrufe nicht überschreiten. Diese Methode ist nur vorhanden, wenn Sie einen IListNotificationHandler an IListDataSource.createListBinding übergeben haben, als diese IListBinding erstellt wurde.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">Die freizugebende IItem- oder IItemPromise-Zusicherung.</msg>
  <msg name="WinJS.UI.IListBinding.release">Gibt Ressourcen frei, beendet Benachrichtigungen und bricht ausstehende Zusicherungen für alle verfolgten Elemente ab, die diese IListBinding zurückgegeben hat.</msg>
  <msg name="WinJS.UI.IListBinding.first">Ruft das erste Element in der Liste ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">Eine IItemPromise, die als Zusicherung für das angeforderte Element dient. Wenn die Liste leer ist, wird die Zusicherung mit einem Wert von NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListBinding.last">Ruft das letzte Element in der Liste ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">Ruft das Element mit dem angegebenen Schlüssel ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">Der Schlüssel des angeforderten Elements. Dies muss eine nicht leere Zeichenfolge sein.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">Domänenspezifische Hinweise zum IListDataAdapter über den Speicherort des Elements, um die Abrufzeit zu verbessern.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">Eine IItemPromise, die als Zusicherung für das angeforderte Element dient. Wenn die Liste kein Element mit dem angegebenen Schlüssel enthält, wird die Zusicherung mit dem Wert NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">Ruft das Element mit dem angegebenen Index ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">Ein Wert größer oder gleich 0, der den Index des abzurufenden Elements darstellt.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">Eine IItemPromise, die als Zusicherung für das angeforderte Element dient. Wenn die Liste kein Element mit dem angegebenen Index enthält, wird die IItemPromise mit dem Wert NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">Ruft das Element mit der angegebenen Beschreibung ab und definiert es als aktuelles Element.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">Die domänenspezifische Beschreibung des angeforderten Elements, die vom Listendatenadapter interpretiert werden soll.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">Eine Zusicherung für das angeforderte Element. Wenn die Liste kein Element mit der angegebenen Beschreibung enthält, wird die IItemPromise mit dem Wert NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">Ermöglicht der Datenquelle, die zwischengespeicherten Elemente zu aktualisieren, indem sie sie vom Datenadapter erneut anfordert. Die Datenquelle generiert Benachrichtigungen, wenn die Daten geändert wurden.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">Eine Zusicherung, die abgeschlossen wird, wenn die Daten vollständig aktualisiert und alle Änderungsbenachrichtigungen gesendet wurden.</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">Ruft die Anzahl der Elemente in der Datenquelle ab.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">Ruft das Element mit dem angegebenen Schlüssel ab.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">Domänenspezifische Hinweise zum IListDataAdapter über den Speicherort des Elements, um die Abrufzeit zu verbessern.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">Eine Zusicherung für das angeforderte Element. Wenn die Liste kein Element mit dem angegebenen Schlüssel enthält, wird die Zusicherung mit dem Wert NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">Ruft das Element am angegebenen Index ab.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">Ein Wert größer oder gleich NULL, der den Index des angeforderten Elements darstellt.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">Eine Zusicherung für das angeforderte Element. Wenn die Liste kein Element mit dem angegebenen Index enthält, wird die Zusicherung mit dem Wert NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">Ruft das Element mit der angegebenen Beschreibung ab.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">Domänenspezifische Informationen, die das abzurufende Element beschreiben und vom IListDataAdapter interpretiert werden.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">Eine Zusicherung für das angeforderte Element. Wenn die Liste kein Element mit der angegebenen Beschreibung enthält, wird die Zusicherung mit dem Wert NULL abgeschlossen.</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">Benachrichtigt die Datenquelle, dass in Kürze eine Sequenz von Bearbeitungen startet. Die Datenquelle ruft IListNotificationHandler.beginNotifications und endNotifications jeweils einmal für eine Sequenz von Bearbeitungen auf.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">Fügt ein Element am Anfang der Datenquelle hinzu.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">Der Schlüssel des Elements, das eingefügt werden soll, falls es bekannt ist; andernfalls NULL.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">Die Daten für das Element, das hinzugefügt werden soll.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">Eine Zusicherung, die das IItem enthält, das hinzugefügt wurde, oder ein EditError, wenn ein Fehler aufgetreten ist.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">Fügt ein Element vor einem anderen Element ein.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">Die Daten für das Element, das eingefügt werden soll.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">Der Schlüssel eines Elements in der Datenquelle. Die neuen Daten werden vor diesem Element eingefügt.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">Fügt ein Element nach einem anderen Element ein.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">Der Schlüssel für ein Element in der Datenquelle. Das neue Element wird nach diesem Element hinzugefügt.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">Fügt ein Element am Ende der Datenquelle hinzu.</msg>
  <msg name="WinJS.UI.IListDataSource.change">Überschreibt die Daten des angegebenen Elements.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">Der Schlüssel für das Element, das ersetzt werden soll.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">Die neuen Daten für das Element.</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">Eine Zusicherung, die das IItem enthält, das aktualisiert wurde, oder ein EditError, wenn ein Fehler aufgetreten ist.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">Verschiebt das angegebene Element an den Anfang der Datenquelle.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">Verschiebt das angegebene Element vor ein anderes Element.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">Der Schlüssel eines anderen Elements in der Datenquelle. Das Element, das durch den Schlüsselparameter angegeben wird, wird auf die Position direkt vor diesem Element verschoben.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">Verschiebt ein Element nach einem anderen Element.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">Der Schlüssel eines anderen Elements in der Datenquelle. Das Element, das durch den Schlüsselparameter angegeben wird, wird auf die Position direkt nach diesem Element verschoben.</msg>
  <msg name="WinJS.UI.IListDataSource.remove">Entfernt ein Element aus der Datenquelle.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">Der Schlüssel des zu entfernenden Elements.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">Eine Zusicherung, die keine Daten enthält, wenn der Vorgang erfolgreich war, oder ein EditError, wenn ein Fehler aufgetreten ist.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">Verwenden Sie diese als Basisklasse, wenn eine benutzerdefinierte Datenquelle definiert wird. Führen Sie keine direkte Instanziierung aus.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">Gibt eine Datenquelle zurück, die den Elementen einer anderen Datenquelle Gruppeninformationen hinzufügt. Die groups-Eigenschaft dieser Datenquelle ergibt eine andere Datenquelle, die die Gruppen selbst auflistet.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">Die Datenquelle für die einzelnen Elemente, die gruppiert werden sollen.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">Eine Rückruffunktion, die ein Element in der Liste als Argument verwendet. Die Funktion wird für jedes Element in der Liste aufgerufen und gibt den Gruppenschlüssel für das Element als Zeichenfolge zurück.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">Eine Rückruffunktion, die ein Element in der IListDataSource als Argument verwendet. Die Funktion wird für ein Element in jeder Gruppe aufgerufen und gibt ein Objekt zurück, das den Header dieser Gruppe darstellt.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">Ein Objekt, das Eigenschaften enthalten kann, die zusätzliche Optionen angeben: "groupCountEstimate": ein Zahlenwert, der die anfängliche Schätzung für die Anzahl von Gruppen darstellt. Wenn Sie -1 angeben, gibt diese Funktion solange kein Ergebnis zurück, bis die tatsächliche Anzahl von Gruppen bestimmt wurde. "batchSize": eine Zahl größer als 0, die die Anzahl der Elemente angibt, die bei jedem Verarbeitungsdurchlauf beim Suchen nach Gruppen abgerufen werden soll. (Neben der angegebenen Zahl wird immer ein Element aus dem vorherigen Batch eingeschlossen.)</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">Eine IListDataSource, die die Elemente in der ursprünglichen Datenquelle enthält und zusätzliche Gruppeninformationen in einer groups-Eigenschaft bereitstellt. Die groups-Eigenschaft gibt eine andere IListDataSource zurück, die die verschiedenen Gruppen in der Liste aufzählt.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">Wird verwendet, um die ListView zu informieren, dass asynchrone Arbeit ausgeführt wird und dass dieser Ereignishandler erst als vollständig gilt, wenn die Zusicherung abgeschlossen ist.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">Die Zusicherung, auf die gewartet werden soll.</msg>
  <msg name="WinJS.UI.ListView.ObjectType">Gibt den Typ eines IListViewEntity an.</msg>
  <msg name="WinJS.UI.ListView.ObjectType.item">Dieser Wert stellt ein ListView-Element dar.</msg>
  <msg name="WinJS.UI.ListView.ObjectType.groupHeader">Dieser Wert stellt einen ListView-Gruppenheader dar.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">Gibt den Auswahlmodus für eine ListView an.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">Elemente können nicht ausgewählt werden.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">Ein einzelnes Element kann ausgewählt werden.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">Mehrere Elemente können ausgewählt werden.</msg>
  <msg name="WinJS.UI.TapBehavior">Gibt an, wie ein ItemContainer oder Elemente in einer ListView auf die Tippeninteraktion reagieren.</msg>
  <msg name="WinJS.UI.TapBehavior.directSelect">Durch Tippen auf das Element wird es aufgerufen und ausgewählt. Durch Navigieren zum Element mit der Tastatur wird die Auswahl geändert, sodass das Element, das den Fokus besitzt, das einzige ausgewählte Element ist.</msg>
  <msg name="WinJS.UI.TapBehavior.toggleSelect">Durch Tippen auf das Element wird es aufgerufen. Wenn das Element ausgewählt wurde, wird die Auswahl durch Tippen aufgehoben. Wenn das Element nicht ausgewählt wurde, wird das Element durch Tippen ausgewählt. Durch Navigieren zum Element mit der Tastatur wird dies weder ausgewählt noch aufgerufen.</msg>
  <msg name="WinJS.UI.TapBehavior.invokeOnly">Durch Tippen auf das Element wird es aufgerufen. Durch Navigieren zum Element mit der Tastatur wird dies weder ausgewählt noch aufgerufen.</msg>
  <msg name="WinJS.UI.TapBehavior.none">Nichts geschieht.</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior">Gibt an, wie Gruppenheader in einer ListView auf die Tippeninteraktion reagieren.</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior.invoke">Durch Tippen auf den Gruppenheader wird er aufgerufen.</msg>
  <msg name="WinJS.UI.SwipeBehavior">Gibt an, ob Elemente ausgewählt werden, wenn der Benutzer eine Streifeninteraktion ausführt.</msg>
  <msg name="WinJS.UI.SwipeBehavior.select">Die Streifeninteraktion wählt die Elemente aus, die vom Streifen betroffen sind.</msg>
  <msg name="WinJS.UI.SwipeBehavior.none">Durch die Streifeninteraktion wird die Auswahl der Elemente nicht geändert.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">Gibt an, ob die ListView-Animation eine Eingangsanimation oder eine Übergangsanimation ist.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">Die Animation wird wiedergegeben, wenn die ListView zum ersten Mal angezeigt wird.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">Die Animation wird wiedergegeben, wenn die ListView den Inhalt ändert.</msg>
  <msg name="WinJS.UI.Repeater.onitemsloaded">Wird ausgelöst, wenn der Repeater das Laden eines neuen Satzes von Daten beendet. Dieses Ereignis wird nur bei Konstruktion ausgelöst, oder wenn die Datenquelle oder die Vorlage des Repeater-Steuerelements ersetzt wird.</msg>
  <msg name="WinJS.UI.Repeater.onitemchanging">Wird ausgelöst, nachdem sich ein Element in der Datenquelle des Repeater-Steuerelements geändert hat, aber bevor das zugehörige DOM-Element aktualisiert wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemchanged">Wird ausgelöst, nachdem sich ein Element in der Datenquelle des Repeater-Steuerelements geändert hat, und nachdem das zugehörige DOM-Element aktualisiert wurde.</msg>
  <msg name="WinJS.UI.Repeater.oniteminserting">Wird ausgelöst, nachdem ein Element der Datenquelle des Repeater-Steuerelements hinzugefügt wurde, jedoch bevor das zugehörige DOM-Element hinzugefügt wurde.</msg>
  <msg name="WinJS.UI.Repeater.oniteminserted">Wird ausgelöst, nachdem ein Element der Datenquelle des Repeater-Steuerelements hinzugefügt wurde, und nachdem das zugehörige DOM-Element hinzugefügt wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemmoving">Wird ausgelöst, nachdem ein Element aus einem Index zu einem Anderen in der Datenquelle des Repeater-Steuerelements verschoben wurde, jedoch bevor das zugehörige DOM-Element verschoben wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemmoved">Wird ausgelöst, nachdem ein Element aus einem Index zu einem Anderen in der Datenquelle des Repeater-Steuerelements verschoben wurde, und nachdem das zugehörige DOM-Element verschoben wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemremoving">Wird ausgelöst, nachdem ein Element aus der Datenquelle des Repeater-Steuerelements entfernt wurde, jedoch bevor das zugehörige DOM-Element entfernt wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemremoved">Wird ausgelöst, nachdem ein Element aus einem Index zu einem Anderen in der Datenquelle des Repeater-Steuerelements entfernt wurde, und nachdem das zugehörige DOM-Element entfernt wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloading">Die Liste wurde aktualisiert und alle Verweise auf Daten in der Liste sind möglicherweise falsch. Wird ausgelöst, nachdem die zugrunde liegenden Daten des Repeater-Steuerelements aktualisiert wurden, aber bevor das aktualisierte HTML erneut geladen wurde.</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloaded">Wird ausgelöst, nachdem die zugrunde liegenden Daten des Repeater-Steuerelements aktualisiert wurden, und nachdem das aktualisierte HTML erneut geladen wurde.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">Gibt die Anzahl der Elemente in der Auswahl zurück.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">Die Anzahl der Elemente in der Auswahl.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">Gibt eine Liste der Indizes für die Elemente in der Auswahl zurück.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">Die Liste von Indizes für die Elemente in der Auswahl als Array der Zahlobjekte.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">Gibt ein Array zurück, das die Elemente in der Auswahl enthält.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">Eine Zusicherung, die ein Array der angeforderten IItem-Objekte enthält.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">Ruft ein Array der Indexbereiche für die ausgewählten Elemente ab.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">Ein Array, das ein ISelectionRange-Objekt für jeden Indexbereich in der Auswahl enthält.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">Gibt einen Wert zurück, der angibt, ob die Auswahl jedes Element in der Datenquelle enthält.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">"True", wenn die Auswahl jedes Element in der Datenquelle enthält; andernfalls "false".</msg>
  <msg name="WinJS.UI._Overlay.onbeforeshow">Tritt sofort vor dem Anzeigen des Steuerelement auf.</msg>
  <msg name="WinJS.UI._Overlay.onaftershow">Tritt sofort nach dem Anzeigen des Steuerelement auf.</msg>
  <msg name="WinJS.UI._Overlay.onbeforehide">Tritt auf, bevor das Steuerelement ausgeblendet ist.</msg>
  <msg name="WinJS.UI._Overlay.onafterhide">Tritt sofort nach dem Verbergen des Steuerelement auf.</msg>
  <msg name="WinJS.UI.AppBarIcon">Die AppBarIcon-Enumeration stellt eine Reihe von Symbolen für die Verwendung mit der AppBarCommand-Symboleigenschaft bereit.</msg>
  <msg name="WinJS.UI.Pivot.onselectionchanged">Wird ausgelöst, wenn der Benutzer in ein anderes Element geändert wird.</msg>
  <msg name="WinJS.UI.ItemCotrol.oninvoked">Wird ausgelöst, wenn das Element aufgerufen wird. Sie können die tapBehavior-Eigenschaft verwenden, um anzugeben, ob Tippen und anklicken das Element aufrufen.</msg>
  <msg name="WinJS.UI.ItemCotrol.onselectionchanging">Wird ausgelöst, grade bevor das Element aktiviert oder deaktiviert ist.</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeopen">Wird unmittelbar vor Erscheinen der QuickInfo ausgelöst.</msg>
  <msg name="WinJS.UI.Tooltip.onopened">Wird ausgelöst, wenn die QuickInfo angezeigt wird.</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeclose">Wird unmittelbar vor Verbergen der QuickInfo ausgelöst.</msg>
  <msg name="WinJS.UI.Tooltip.onclosed">Wird ausgelöst, wenn die QuickInfo nicht mehr angezeigt wird.</msg>
</messagebundle>