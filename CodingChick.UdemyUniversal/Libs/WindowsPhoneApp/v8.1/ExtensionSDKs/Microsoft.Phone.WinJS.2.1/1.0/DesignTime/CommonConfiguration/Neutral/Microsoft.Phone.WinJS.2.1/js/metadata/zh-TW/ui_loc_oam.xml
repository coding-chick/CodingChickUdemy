<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.IListDataSource.endEdits">請注意資料來源編輯序列已結束。資料來源會呼叫 IListNotificationHandler.beginNotifications 和 endNotifications 為每一個編輯序列。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">將項目移動至資料來源的結尾。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_p:key">要移動之項目的索引鍵。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_returnValue">承諾包含移動的 IItem 或 EditError，當錯誤發生時。</msg>
  <msg name="WinJS.UI.StorageDataSource">建立列舉 IStorageQueryResultBase 的資料來源。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">要列舉的物件。它必須支援IStorageQueryResultBase。</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">指定資料來源之選項的物件。這個參數是一個選擇性項目。它可以包含下列屬性：模式：Windows.Storage.FileProperties.ThumbnailMode -指定要求縮圖和縮圖的型別要求的值。requestedThumbnailSize：指定縮圖大小的數字。thumbnailOptions：為縮圖指定其他選項的Windows.Storage.FileProperties.ThumbnailOptions 值。waitForFileLoad：如果您將此項設定為true，該資料來源則只在會載入屬性和縮圖之後傳回項目。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">傳回完成的影像項目的一項承諾，而所提供之項目的完整品質縮圖繪製影像項目時。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">要擷取縮圖的項目。</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">要使用的影像項目。如果沒有提供，會建立新的影像項目。</msg>
  <msg name="WinJS.UI.FlipView.constructor">建立新的 FlipView。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">裝載控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。事件名稱的第一個字元必須為「on」。例如，為了提供 pageselected 事件一個處理常式，加入名為「onpageselected」的屬性給選項物件並將它的值設定至事件處理常式。這個參數是一個選擇性項目。</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">新 FlipVIew 控制項。</msg>
  <msg name="WinJS.UI.FlipView.dispose">處置這個 FlipView。</msg>
  <msg name="WinJS.UI.FlipView.next">巡覽到下一個項目。</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">如果FlipView開始巡覽到下一頁，則為true；如果FlipView在最後一頁或位於另一個巡覽動畫的中間，則為 false。</msg>
  <msg name="WinJS.UI.FlipView.previous">巡覽至上一個項目。</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">如果FlipView開始巡覽到上一頁，則為true；如果FlipView已經在第一頁或位於另一個巡覽動畫的中間，則為 false。</msg>
  <msg name="WinJS.UI.FlipView.element">裝載 FlipView 控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.FlipView.currentPage">取得或設定目前顯示頁面的索引。最小值是0，而最大的值則是比資料來源傳回的項目總數少一。</msg>
  <msg name="WinJS.UI.FlipView.orientation">取得或設定 FlipView 的配置方向：水平或垂直。</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">取得或設定提供FlipView使用項目來顯示資料來源。FlipView 一次顯示一個項目，每個在自己的頁面上。</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">取得或設定WinJS.Binding.Template或定義每個項目之網頁的HTML的函式。</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">取得或設定項目之間的間距 (以像素為單位)。</msg>
  <msg name="WinJS.UI.FlipView.count">傳回FlipView物件的itemDataSource的項目數目。</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">承諾包含清單中項目數目或 WinJS.UI.CountResult.unknown 當計數無法使用時。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">當在頁面之間巡覽時，設定自訂動畫給 FlipView 使用。</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">物件最多包含三個欄位，第一是每個巡覽動作：下一個、上一個，和跳頁。這些任一的欄位都必須是有這個簽章的函式：function (outgoingPage, incomingPage)。這個函式會傳回動畫完成後才完成的WinJS.Promise物件。如果欄位為null或未定義，FlipView還原為該動作的預設動畫。</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">強制FlipView更新其配置。請使用函式讓 FlipView 再次可見，當 style.display 屬性已設定為「None」之後。</msg>
  <msg name="WinJS.UI.FlipView">顯示集合，例如一組相片，一次一個項目。</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">引發事件，當itemDataSource的項目數目變更。</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">引發事件，當FlipView網頁成為可見或不可見。</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">引發事件，當FlipView翻轉至頁面。</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">引發事件，當FlipView翻轉至頁面和它的產生器函式完成時。</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">整個 FlipVIew 控制項。</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">所有FlipView巡覽按鈕的一般類別。</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">左巡覽按鈕。</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">右巡覽按鈕。</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">上巡覽按鈕。</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">下巡覽按鈕。</msg>
  <msg name="WinJS.UI._LayoutCommon.groupHeaderPosition">取得或設定群組標頭的位置相對於它們的項目。預設值為「Top」。</msg>
  <msg name="1">取得或設定配置的方向。預設值為 "horizontal"。</msg>
  <msg name="WinJS.UI.Layout.constructor">建立新的配置物件。</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">套用來起始新配置控制項的選項集。</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">新的配置物件。</msg>
  <msg name="WinJS.UI._LegacyLayout.disableBackdrop">取得或設定值，指出版面配置是否應停用底圖功能，在虛擬清單中平移來避免空白區域。disableBackdrop 已被取代。改用樣式：.win-listview .win-container.win-backdrop { background-color:transparent; }。</msg>
  <msg name="WinJS.UI._LegacyLayout.backdropColor">取得或設定底圖所用預設圖樣的填滿色彩。預設值為 "rgba(155,155,155,0.23)"。backdropColor 已被取代。改用樣式：.win-listview .win-container.win-backdrop { rgba(155,155,155,0.23); }。</msg>
  <msg name="WinJS.UI.GridLayout">建立新的 GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">新的GridLayout。</msg>
  <msg name="WinJS.UI.GridLayout.maximumRowsOrColumns">根據方向，取得應在將換行引入至配置前出現的最大列數或欄數。0 的值表示沒有最大值。預設值為 0。</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">取得或設定 ListView 顯示的最大列數。在 Windows Library for JavaScript 2.0 之後，可能會修改或者不提供 WinJS.UI.GridLayout.maxRows。請改用 maximumRowsOrColumns 屬性。</msg>
  <msg name="WinJS.UI.GridLayout.itemInfo">判斷項目的大小，以及是否應該將這個項目放在新的資料行。在未來的版本中，可能會修改或者不提供 GridLayout.itemInfo。請改用 CellSpanningLayout。</msg>
  <msg name="WinJS.UI.GridLayout.groupInfo">指出群組是否有跨越項目的儲存格，並指定儲存格的維度。在未來的版本中，可能會修改或者不提供 GridLayout.groupInfo。請改用 CellSpanningLayout。</msg>
  <msg name="WinJS.UI.ListLayout">建立新的 ListLayout 物件。</msg>
  <msg name="WinJS.UI.ListLayout_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性會對應至其中一個物件的屬性或事件。事件名稱的第一個字元必須為「on」。</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">新的 ListLayout 物件。</msg>
  <msg name="WinJS.UI.CellSpanningLayout">建立新的 CellSpanningLayout 物件。</msg>
  <msg name="WinJS.UI.CellSpanningLayout_p:options">包含一或多個屬性/值的物件會套用至新的物件。選項物件的每個屬性會對應至其中一個物件的屬性或事件。事件名稱的第一個字元必須為「on」。</msg>
  <msg name="WinJS.UI.CellSpanningLayout_returnValue">新的 CellSpanningLayout 物件。</msg>
  <msg name="WinJS.UI.CellSpanningLayout.maximumRowsOrColumns">根據方向，取得或設定要在內容開始換行之前顯示的最大列數或欄數。0 的值表示沒有最大值。</msg>
  <msg name="WinJS.UI.CellSpanningLayout.itemInfo">取得或設定傳回項目寬度和高度，以及項目是否應出現於新欄的函式。設定這個函式會改善效能，因為 ListView 不需要先測量項目即可為其配置空間。函式接受單一參數：要顯示之項目的索引。函式會傳回具有三個屬性的物件：width：項目的總寬度。height：項目的總高度。newColumn：設為 true 以建立分欄符號，否則設為 false。</msg>
  <msg name="WinJS.UI.CellSpanningLayout.groupInfo">取得或設定啟用儲存格跨越和建立基底儲存格維度的函式。函式會傳回具有下列屬性的物件：enableCellSpanning：設為 true 以允許 ListView 包含多種大小的項目。cellWidth：基底儲存格的寬度。cellHeight：基底儲存格的高度。</msg>
  <msg name="2">取得配置的方向。CellSpanning 配置只支援水平方向。</msg>
  <msg name="WinJS.UI.ListView.constructor">建立新的 ListView。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">裝載 ListView 控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。事件名稱的第一個字元必須為「on」。例如，為了提供 selectionchanged 事件一個處理常式，加入名為「onselectionchanged」的屬性給選項物件並將它的值設定至事件處理常式。</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">新的 ListView。</msg>
  <msg name="WinJS.UI.ListView.element">取得裝載 ListView 的 DOM 項目。</msg>
  <msg name="WinJS.UI.ListView.layout">取得或設定控制 ListView 配置的物件。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">將取得或設定要在使用者捲動超出 pagesToLoadThreshold 屬性所指定之臨界值 (如果 loadingBehavior 屬性設定為累加) 時載入的頁數。pagesToLoad 已被取代。控制項將不會使用這個屬性。請參閱「ListView 載入表現方式」SDK 範例，以取得如何實作累加載入表現方式的指導。</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">取得或設定臨界值(網頁)來啟始累加負載。當最後一個可見項目與清單載入部分的結尾相距在指定的頁數之內時，如果 automaticallyLoadPages 為 true 且 loadingBehavior 設定為「累加」，則 ListView 會啟始累加載入。pagesToLoadThreshold 已被取代。控制項將不會使用這個屬性。請參閱「ListView 載入表現方式」SDK 範例，以取得如何實作累加載入表現方式的指導。</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">取得或設定資料來源，資料來源中包含 itemDataSource 項目的群組。</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">取得或設定值，這個值表示下一組頁面是否會在使用者捲動超出 pagesToLoadThreshold 屬性指定的頁數時自動載入。automaticallyLoadPages 已被取代。控制項會將這個屬性預設為 false。請參閱「ListView 載入表現方式」SDK 範例，以取得如何實作累加載入表現方式的指導。</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">取得或設定值，這個值決定載入多少個資料項目至 DOM。pagesToLoadThreshold 已被取代。控制項會將這個屬性預設為 'randomAccess'。請參閱「ListView 載入表現方式」SDK 範例，以取得如何實作累加載入表現方式的指導。</msg>
  <msg name="WinJS.UI.ListView.selectionMode">取得或設定值指定有多少ListView項目使用者可以選擇：「不」，「單一」或「多」。</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">取得或設定 ListView 如何回應，當使用者輕拍或按一下項目。點一下或按一下可以叫用項目，選取並叫用它或著沒有任何作用。</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTapBehavior">取得或設定 ListView 在使用者點選或按一下群組標題時的回應方式。</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">取得或設定 ListView 如何回應揮擊互動。揮擊筆勢可以選擇揮擊過的項目或對目前選取的無效。</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">取得或設定提供項目給 ListView 的資料來源。</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">取得或設定在 itemDataSource 建立每個項目的 DOM 項目的範本函式。每個項目都可以包含多個 DOM 項目，但是我們建議有一個根項目。</msg>
  <msg name="WinJS.UI.ListView.resetItem">取得或設定 ListView 回收項目 (Item) 的項目 (Element) 表示時所呼叫的函式。在未來的版本中，可能會修改或者不提供 resetItem。請改用 WinJS.Utilities.markDisposable，將項目標記為可處置。</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">取得或設定在 groupDataSource 建立每個群組標頭的 DOM 項目的範本函式。每個群組標頭都可以包含多個項目，但是必須要有一個根項目。</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">取得或設定 ListView 回收群組標題的 DOM 項目表示時所呼叫的函式。在未來的版本中，可能會修改或者不提供 resetGroupHeader。請改用 WinJS.Utilities.markDisposable，將標題項目標記為可處置。</msg>
  <msg name="WinJS.UI.ListView.loadingState">取得一個值表示 ListView 是否仍在載入或載入是否完成。這個屬性會傳回其中一個值：「itemsLoading」、「viewPortLoaded」、「itemsLoaded」或「完成」。</msg>
  <msg name="WinJS.UI.ListView.selection">取得包含目前選取之項目的 ISelection 物件。</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">取得或設定第一個可見的項目。當設定這個屬性時，ListView 捲動而指定索引的項目位在清單的頂端。</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">取得最後可見項目的索引。</msg>
  <msg name="WinJS.UI.ListView.currentItem">取得或設定物件表示哪個項目應取得鍵盤焦點和它的焦點狀態。物件具有下列屬性：索引：itemDataSource 的項目索引。機碼：itemDataSource 的項目機碼。hasFocus：在取得這個屬性時如果項目已經有焦點，此值為 true；否則為 false。當設定這個屬性時，請將此值設定為 true，如果這個項目應立即取得焦點；否則，請將它設為 false，而該項目最終會取得焦點。showFocus：項目顯示焦點矩形，則為true；否則為 false。</msg>
  <msg name="WinJS.UI.ListView.zoomableView">取得 ZoomableView。這個應用程式開發介面支援 SemanticZoom 基礎結構，但不建議直接在程式碼中使用。</msg>
  <msg name="WinJS.UI.ListView.itemsDraggable">取得或設定是否可透過拖放功能拖曳 ListView 的項目。</msg>
  <msg name="WinJS.UI.ListView.itemsReorderable">取得或設定是否可透過拖放功能重新排列 ListView 本身之中的項目。ListView 標記為可重新排列時，即可在其本身之內四處拖曳其項目，但是不需要引發要加以處理的 itemdrag 事件。</msg>
  <msg name="WinJS.UI.ListView.maxDeferredItemCleanup">取得或設定已實現項目的數目上限。</msg>
  <msg name="WinJS.UI.ListView.dispose">處置這個 ListView。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">傳回代表指定索引之項目的 DOM 項目。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">項目的索引。</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">DOM 項目代表指定的項目。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">傳回指定 DOM 項目顯示的項目索引。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">DOM 項目 (element) 顯示項目 (item)。</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">指定 DOM 項目顯示的項目索引。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">使指定的項目可見。必要時 ListView 捲動至該項目。</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:value">要帶入檢視之 ListView 項目或 IListViewEntity 的索引。</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">如果 ListView 物件的 loadingBehavior 設定為累加，則載入下一組頁面。loadMorePages 已被取代。叫用這個函式不會有任何作用。請參閱「ListView 載入表現方式」SDK 範例，以取得如何實作累加載入表現方式的指導。</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">重新定位在 ListView 的所有可見項目用來調整已變更大小的項目。當您將 style.display 屬性設定為 "none" 之後，或進行會影響 ListView 或其項目之大小或位置的樣式變更之後，重新將 ListView 設為可見時，請使用這個函式或 forceLayout。不同於 forceLayout，這個方法不會重新建立項目，而且不會顯示開場動畫。</msg>
  <msg name="WinJS.UI.ListView.forceLayout">強制 ListView 更新其配置。當您將 style.display 屬性設定為 "none" 之後，或進行會影響 ListView 或其項目之大小或位置的樣式變更之後，重新將 ListView 設為可見時，請使用這個函式或 relcaculateItemPosition。</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">取得或設定 ListView 捲軸位置。</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">以手動方式觸發 ListView 處置服務。在一般作業，這會在 ListView 具現化觸發。不過在某些情況下，手動執行執行處置服務可能比較適合。</msg>
  <msg name="WinJS.UI.ListView">以可自訂的清單或格子顯示項目。</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">引發事件，當 ListView 打算播放入場或過場動畫。</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">當使用者點一下或按一下項目時引發事件。</msg>
  <msg name="WinJS.UI.ListView_e:groupheaderinvoked">當使用者點選或按一下群組標題時引發。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">引發事件，在選取或取消選取項目之前。</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">引發事件，在選取或取消選取項目之後。</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">載入狀態變更時引發。</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">焦點項目變更時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragstart">當使用者開始拖曳 ListView 項目時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragenter">當使用者拖曳到 ListView 中時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragend">當在 ListView 中開始的拖曳作業結束時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragbetween">當使用者在兩個 ListView 項目之間拖曳時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragleave">當使用者拖曳到 ListView 之外時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragchanged">當拖曳中項目因為資料來源修改而變更時引發。</msg>
  <msg name="WinJS.UI.ListView_e:itemdragdrop">當使用者將項目置放到 ListView 中時引發。</msg>
  <msg name="WinJS.UI.ListView_e:accessibilityannotationcomplete">當可及性屬性已加入至 ListView 項目時引發。</msg>
  <msg name="WinJS.UI.ListView_part:listView">整個 ListVIew 控制項。</msg>
  <msg name="WinJS.UI.ListView_part:viewport">ListView 的檢視區。</msg>
  <msg name="WinJS.UI.ListView_part:surface">ListView的捲動區域。</msg>
  <msg name="WinJS.UI.ListView_part:item">ListView 中的項目。</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">選取核取記號的背景。</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">選取核取記號</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">群組的標頭。</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">ListView 的進度指示器。</msg>
  <msg name="WinJS.UI.Repeater.constructor">建立新的 Repeater 控制項。</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:element">將要裝載新控制項的 DOM 項目。如果這個值為 null，則 Repeater 會建立項目。</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:options">包含一個或多個屬性/值組的控制項會套用至新的 Repeater。選項物件的每個屬性會對應至其中一個物件的屬性或事件。事件名稱的第一個字元必須為「on」。</msg>
  <msg name="WinJS.UI.Repeater.constructor_returnValue">新的 Repeater 控制項</msg>
  <msg name="WinJS.UI.Repeater.element">取得裝載 Repeater 的 DOM 項目。</msg>
  <msg name="WinJS.UI.Repeater.data">取得或設定提供有項目要顯示之 Repeater 控制項的 WinJS.Binding.List。</msg>
  <msg name="WinJS.UI.Repeater.template">取得或設定一個定義 Repeater 內每個項目之 HTML 的範本或自訂顯示函式。</msg>
  <msg name="WinJS.UI.Repeater.length">取得 Repeater 控制項中的項目數。</msg>
  <msg name="WinJS.UI.Repeater.elementFromIndex">傳回具有指定索引之項目 (Item) 的 HTML 項目 (Element)。</msg>
  <msg name=" WinJS.UI.Repeater.elementFromIndex_returnValue">指定之項目 (Item) 的 DOM 項目 (Element)。</msg>
  <msg name="WinJS.UI.Repeater.dispose">準備這個 Repeater 以進行記憶體回收。</msg>
  <msg name="WinJS.UI.Repeater">使用範本以從一組資料產生 HTML。</msg>
  <msg name="WinJS.UI.Repeater_part:repeater">Repeater 控制項本身。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">清除選取。</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">當清除作業完成時實作的承諾。</msg>
  <msg name="WinJS.UI._Selection.prototype.set">清除目前的選取範圍並以指定的項目取代。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">構成選取的項目索引或機碼。您可以針對項目參數提供不同類型的物件：您可以指定索引、機碼或索引的範圍。它也可以是包含一個或多個這些物件的陣列。</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">當作業完成時實作的承諾。</msg>
  <msg name="WinJS.UI._Selection.prototype.add">將一個或多個項目加入選取中。</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">加入項目的索引或機碼。您可以針對項目參數提供不同類型的物件：您可以指定索引、機碼或索引的範圍。它也可以是包含一個或多個這些物件的陣列。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">從選取中移除指定項目。</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">移除項目的索引或機碼。您可以針對項目參數提供不同類型的物件：您可以指定索引、機碼或索引的範圍。它也可以是包含一個或多個這些物件的陣列。</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">在 ListView 加入所有項目至選取範圍。</msg>
  <msg name="WinJS.UI._Overlay">建構 Overlay 控制項並與基礎 DOM 項目相關聯。</msg>
  <msg name="WinJS.UI._Overlay_p:element">與 Overlay 控制項關聯的 DOM 項目。</msg>
  <msg name="WinJS.UI._Overlay_p:options">要套用來起始 Overlay 控制項的選項集。</msg>
  <msg name="WinJS.UI._Overlay_returnValue">完整地建構的 Overlay 控制項。</msg>
  <msg name="WinJS.UI._Overlay.element">Overlay 即會附加至 DOM 項目。</msg>
  <msg name="WinJS.UI._Overlay.disabled">停用 Overlay，設定或取得 HTML 停用屬性 (Attribute)。當停用 Overlay 就不會再顯示 show()，而且會隱藏如果目前可見。</msg>
  <msg name="WinJS.UI.Overlay.dispose">處置這個 Overlay。</msg>
  <msg name="WinJS.UI._Overlay.show">顯示 Overlay，如果隱藏，不論其他狀態</msg>
  <msg name="WinJS.UI._Overlay.hide">隱藏 Overlay，如果可見，不論其他狀態</msg>
  <msg name="WinJS.UI._Overlay.hidden">唯讀，如果 overlay 目前不是可見，則為True。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">為這個 Overlay 的 DOM 項目加入事件接聽程式。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">必要項。加入事件型別「beforehide」，「afterhide」，「beforeshow」或「aftershow」</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">必要項。與事件關聯的事件處理常式函式。</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">選擇項。True，註冊至事件擷取階段。Flase 在事件反昇階段。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">為這個 Overlay 的 DOM 項目移除事件接聽程式。</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">必要項。移除事件型別「beforehide」，「afterhide」，「beforeshow」或「aftershow」</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">建立新的 AppBarCommand 控制項。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">將要裝載控制項的 DOM 項目。AppBarCommand 會建立，如果為 null。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">要套用至新的 AppBarCommand 的一組屬性和值。</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">新的 AppBarCommand 控制項。</msg>
  <msg name="WinJS.UI.AppBarCommand.id">取得或設定 AppBarCommand 的識別碼。</msg>
  <msg name="WinJS.UI.AppBarCommand.type">取得或設定 AppBarCommand 的類型。可能的值為 "button"、"toggle"、"flyout" 或 "separator"。</msg>
  <msg name="WinJS.UI.AppBarCommand.label">取得或設定 AppBarCommand 的標籤。</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">取得或設定 AppBarCommand 的圖示。</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">取得或設定按一下命令時要叫用的函式。</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">對於彈出式視窗類型 AppBarCommand，這個屬性會傳回這個命令叫用的 WinJS.UI.Flyout。設定這個屬性時，您也可以使用要叫用的彈出式視窗的字串 ID、彈出式視窗的 DOM 項目或 WinJS.UI.Flayout 物件本身</msg>
  <msg name="WinJS.UI.AppBarCommand.section">取得或設定 AppBarCommand 所在的區段。可能的值為 "selection" 和 "global"。</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">取得或設定 AppBarCommand 的工具提示文字。</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">設定或取得切換按鈕的選取狀態。</msg>
  <msg name="WinJS.UI.AppBarCommand.element">裝載 AppBarCommad 的 DOM 項目。</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">取得或設定值，這個值表示是否停用 AppBarCommand。true 值會停用 AppBarCommand，false 值則啟用它。</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">取得或設定值，這個值指出 AppBarCommand 是在隱藏，還是在變成隱藏狀態的過程中。true 值表示 AppBarCommand 是在隱藏或在變成隱藏狀態的過程中。</msg>
  <msg name="WinJS.UI.AppBarCommand.firstElementFocus">取得或設定每當透過 Home 或方向鍵將焦點從上一個 AppBarCommand 移動至 "content" 類型 AppBarCommand 時，應在這個 AppBarCommand 內接收焦點的 HTMLElement。預設會傳回 AppBarCommand 物件的主項目。</msg>
  <msg name="WinJS.UI.AppBarCommand.lastElementFocus">取得或設定每當透過 End 或方向鍵將焦點從下一個 AppBarCommand 移動至 "content" 類型 AppBarCommand 時，應在這個 AppBarCommand 內接收焦點的 HTMLElement。預設會傳回這個 AppBarCommand 物件的主項目。</msg>
  <msg name="WinJS.UI.AppBarCommand.dispose">處置這個控制項。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener">為指定的事件註冊事件處理常式。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">必要項。要註冊的事件名稱。這必須是 "beforeshow"、"beforehide"、"aftershow" 或 "afterhide"。</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:useCapture">選擇項。設為 true 以註冊擷取階段的事件處理常式，否則設定為 false 以註冊反昇階段的事件處理常式。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">移除 addEventListener 方法註冊的事件處理常式。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">必要項。要移除的事件名稱。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:listener">必要項。要移除的事件處理常式函式。</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:useCapture">選擇項。設為 true 以移除擷取階段事件處理常式，否則設定為 false 以移除反昇階段事件處理常式。</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">：在建構期間加入額外的 CSS 類別。</msg>
  <msg name="WinJS.UI.AppBarCommand">表示要顯示在 AppBar 中的命令。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">AppBarCommand 控制項本身。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">AppBarCommand 的圖示方塊。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">AppBarCommand 圖示的影像格式。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">AppBarCommand 的圖示環。</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">AppBarCommand 的標籤</msg>
  <msg name="WinJS.UI.AppBar.constructor">建立新的 AppBar 控制項。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">將要裝載控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">要套用至新的 AppBar 控制項的一組屬性和值。</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">新的 AppBar 控制項。</msg>
  <msg name="WinJS.UI.AppBar.placement">顯示中 AppBar 的位置。值為「頂端」或「底部」。</msg>
  <msg name="WinJS.UI.AppBar.layout">取得或設定 AppBar 內容的配置，這若不是 "commands" 就是 "custom"。</msg>
  <msg name="WinJS.UI.AppBar.sticky">取得或設定值，這個值會指出 AppBar 是否為自黏的。如果 AppBar 是自黏的，則此值為 true，否則為 false。</msg>
  <msg name="WinJS.UI.AppBar.commands">設定 AppBar 的命令。這個屬性接受 AppBarCommand 物件的陣列。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">從這個 AppBar 擷取含有指定之識別碼的命令。如果找到多個命令，則這個方法會傳回所有的命令。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">命令的識別碼會傳回。</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">如果多個命令有相同的識別碼則為找到的命令 (命令陣列)，如果找不到命令則為 null。</msg>
  <msg name="WinJS.UI.AppBar.showCommands">顯示指定的 AppBar 命令。</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">要顯示的命令的陣列。陣列項目可以是 AppBarCommand 物件，或是命令的字串識別碼 (ID)。</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">隱藏指定的 AppBar 命令。</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">必要項。一個或多個命令隱藏，字串，DOM 項目或 WinJS 物件。</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">顯示指定的命令，隱藏任何在 AppBar 的其他。</msg>
  <msg name="WinJS.UI.AppBar.show">顯示 AppBar，如果隱藏，不論其他狀態</msg>
  <msg name="WinJS.UI.AppBar.hide">隱藏 AppBar。</msg>
  <msg name="WinJS.UI.AppBar">表示顯示命令的應用程式工具列。</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">在即將顯示 AppBar 之前引發。</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">立即在完整顯示 AppBar 後引發。</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">在即將隱藏 AppBar 之前引發。</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">立即在完整隱藏 AppBar 後引發。</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">AppBar 控制項本身。</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">自訂配置 AppBar 的樣式。</msg>
  <msg name="WinJS.UI.Flyout.constructor">建立新的彈出式視窗控制項。</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">套用到新的彈出式視窗的一組屬性和值。</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">新的彈出式視窗控制項。</msg>
  <msg name="WinJS.UI.Flyout.anchor">取得或設定彈出式視窗控制項的錨點。錨點項目是彈出式視窗所來自和做為相對參考位置的 HTML 項目 (當您呼叫顯示方法時，可以覆寫這個設定)。</msg>
  <msg name="WinJS.UI.Flyout.placement">取得或設定此 Flyout 的預設位置 (當您呼叫顯示方法時，可以覆寫這個設定)。</msg>
  <msg name="WinJS.UI.Flyout.alignment">取得或設定這個彈出式視窗的預設對齊方式 (當您呼叫顯示方法時，可以覆寫這個設定)。</msg>
  <msg name="WinJS.UI.Flyout.show">顯示彈出式視窗 (如果已隱藏)，不論其他狀態為何。</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">DOM 項目、錨定飛出視窗的 DOM 項目的 ID，只有這次會覆寫的錨點屬性。</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">飛出視窗錨點的位置：「自動」(預設)、「上」、「底」、「左」或「右」。這個參數僅為這個顯示覆寫位置屬性。</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">針對「上」或「底」位置，飛出視窗對齊方式的錨點邊緣：「中間」(預設)、「左」或「右」。這個參數僅為這個顯示覆寫對齊方式屬性。</msg>
  <msg name="WinJS.UI.Flyout.hide">隱藏彈出式視窗 (如果可見)，不論其他狀態為何。</msg>
  <msg name="WinJS.UI.Flyout">顯示僅供資訊參考或者需要使用者互動的輕量型 UI。不同於對話方塊，彈出式視窗只需從中按一下或點選，即可關閉。</msg>
  <msg name="WinJS.UI.Flyout_name">飛出視窗</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">在顯示飛出視窗之前引發。</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">飛出視窗完整顯示後立即引發。</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">在隱藏飛出視窗之前引發。</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">飛出視窗完整隱藏後立即引發。</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">彈出式視窗控制項本身。</msg>
  <msg name="WinJS.UI.Menu.constructor">建立新的功能表控制項。</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">要套用至新的控制項的一組屬性和值。</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">新的功能表控制項。</msg>
  <msg name="WinJS.UI.Menu.commands">設定出現在功能表中的 MenuCommand 物件。您可以將此設為單一 MenuCommand 或 MenuCommand 物件陣列。</msg>
  <msg name="WinJS.UI.Menu.getCommandById">從 Menu 擷取含有指定 ID 的命令。如果找到一個以上的命令，傳回所有。</msg>
  <msg name="WinJS.UI.Menu.getCommandById_p:id">要尋找之命令的識別碼。</msg>
  <msg name="WinJS.UI.Menu.showCommands">顯示指定的功能表命令。</msg>
  <msg name="WinJS.UI.Menu.showCommands_p:commands">要顯示的命令。陣列項目可以是功能表物件，或是命令的字串識別碼 (ID)。</msg>
  <msg name="WinJS.UI.Menu.hideCommands">隱藏功能表。</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">顯示指定的功能表命令，而隱藏所有其他命令。</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands_p:commands">要顯示的命令。陣列項目可以是 MenuCommand 物件，或是命令的字串識別碼 (ID)。</msg>
  <msg name="WinJS.UI.Menu.show">顯示功能表 (如果已隱藏)，不論其他狀態為何。</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">要錨定功能表的 DOM 項目 (DOM 項目識別碼)。這個參數僅覆寫這個方法呼叫的錨點屬性。</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">Menu 位置的錨點：「自動」(預設)、「上」、「底」、「左」或「右」。這個參數僅覆寫這個方法呼叫的位置屬性。</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">針對「上」或「底」位置，Menu 對齊方式的錨點邊緣：「中間」(預設)、「左」或「右」。這個參數僅覆寫這個方法呼叫的對齊屬性。</msg>
  <msg name="WinJS.UI.Menu">表示顯示命令的功能表彈出式視窗。</msg>
  <msg name="WinJS.UI.Menu_name">功能表</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">在顯示功能表之前引發。</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">功能表完整顯示後立即引發。</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">在隱藏功能表之前引發。</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">功能表完整隱藏後立即引發。</msg>
  <msg name="WinJS.UI.Menu_part:menu">Menu 控制項本身。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">建立新的 MenuCommand 物件。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">要套用至新的 MenuCommand 的一組屬性和值。</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">MenuCommands 控制項。</msg>
  <msg name="WinJS.UI.MenuCommand.id">取得 MenuCommand 的識別碼。</msg>
  <msg name="WinJS.UI.MenuCommand.type">取得 MenuCommand 的類型。可能的值為 "button"、"toggle"、"flyout" 或 "separator"。</msg>
  <msg name="WinJS.UI.MenuCommand.label">MenuCommands 的標籤</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">對於彈出式視窗類型 MenuCommand，這個屬性會傳回這個命令叫用的 WinJS.UI.Flyout。設定這個屬性時，您可以將其設定為彈出式視窗的字串識別碼、裝載彈出式視窗的 DOM 項目或彈出式視窗物件本身。</msg>
  <msg name="WinJS.UI.MenuCommand.selected">取得或設定切換按鈕的選取狀態。如果切換按鈕已選取，則此屬性為 true，否則為 false。</msg>
  <msg name="WinJS.UI.MenuCommand.element">取得裝載這個 MenuCommand 的 DOM 項目。</msg>
  <msg name="WinJS.UI.MenuCommand.disabled">取得或設定值，這個值表示是否停用 MenuCommand。如果 MenuCommand 是已停用，則此值為 true，否則為 false。</msg>
  <msg name="WinJS.UI.MenuCommand.hidden">判斷命令目前是否隱藏</msg>
  <msg name="WinJS.UI.MenuCommand.extraClass">取得或設定套用至主機 DOM 項目的額外 CSS 類別。</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:type">要註冊的事件名稱。</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:listener">處理事件的函式。</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:useCapture">設為 true 以註冊擷取階段的事件處理常式，否則設定為 false 以註冊反昇階段的事件處理常式。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener">移除 addEventListener 方法註冊的特定事件處理常式。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:type">要移除的事件名稱。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:listener">要移除的事件處理常式函式。</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:useCapture">設為 true 以移除擷取階段事件處理常式；設定為 false 以移除反昇階段事件處理常式。</msg>
  <msg name="WinJS.UI.MenuCommand">表示要顯示在功能表中的命令。MenuCommand 物件為功能表控制項提供按鈕、切換按鈕、彈出式視窗按鈕或分隔符號功能。</msg>
  <msg name="WinJS.UI.MenuCommand_name">MenuCommands 控制項本身</msg>
  <msg name="WinJS.UI.Pivot.constructor">建立新的樞紐分析控制項。</msg>
  <msg name="WinJS.UI.Pivot.constructor_p:element">裝載樞紐分析控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.Pivot.constructor_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。事件名稱的第一個字元必須為「on」。例如，為了提供索引已變更事件一個處理常式，加入名為「onselectionchanged」的屬性給選項物件並將它的值設定至事件處理常式。</msg>
  <msg name="WinJS.UI.Pivot.constructor_returnValue">新樞紐分析。</msg>
  <msg name="WinJS.UI.Pivot.element">取得裝載樞紐分析的 DOM 項目。</msg>
  <msg name="WinJS.UI.Pivot.locked">取得或設定值，這個值指定樞紐分析是否鎖定為目前項目。</msg>
  <msg name="WinJS.UI.Pivot.items">取得或設定屬於此樞紐分析之 PivotItem 物件的 WinJS.Binding.List。</msg>
  <msg name="WinJS.UI.Pivot.title">取得或設定樞紐分析的標題。</msg>
  <msg name="WinJS.UI.Pivot.selectedIndex">取得或設定檢視中的項目索引。當應用程式啟動或繼續時，此屬性很適合用來還原先前的檢視。</msg>
  <msg name="WinJS.UI.Pivot.selectedItem">取得或設定檢視中的項目。當應用程式啟動或繼續時，此屬性很適合用來還原先前的檢視。</msg>
  <msg name="WinJS.UI.Pivot">顯示內容項目的 Tab 控制項。</msg>
  <msg name="WinJS.UI.Pivot_e:selectionchanged">在螢幕上的項目變更時引發。</msg>
  <msg name="WinJS.UI.Pivot_e:itemloaded">在項目的動畫啟動時引發。</msg>
  <msg name="WinJS.UI.Pivot_e:itemanimationend">在項目的動畫結束時引發。</msg>
  <msg name="WinJS.UI.Pivot_part:pivot">整個樞紐分析控制項。</msg>
  <msg name="WinJS.UI.Pivot_part:title">樞紐分析控制項的標題。</msg>
  <msg name="WinJS.UI.Pivot_part:header">樞紐分析項目的標頭。</msg>
  <msg name="WinJS.UI.Pivot_part:progress">樞紐分析的進度列指示器。</msg>
  <msg name="WinJS.UI.PivotItem.constructor">建立新的 PivotItem。</msg>
  <msg name="WinJS.UI.PivotItem.constructor_p:element">裝載 PivotItem 控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.PivotItem.constructor_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。</msg>
  <msg name="WinJS.UI.PivotItem.constructor_returnValue">新 PivotItem。</msg>
  <msg name="WinJS.UI.PivotItem.element">取得裝載 PivotItem 的 DOM 項目。</msg>
  <msg name="WinJS.UI.PivotItem.contentElement">取得裝載 PivotItem 內容的 DOM 項目。</msg>
  <msg name="WinJS.UI.PivotItem.header">取得或設定 PivotItem 的標頭。設定這個屬性後，樞紐分析會重新顯示標頭。</msg>
  <msg name="WinJS.UI.PivotItem">定義樞紐分析控制項的項目。</msg>
  <msg name="WinJS.UI.PivotItem_part:pivotitem">整個 PivotItem 控制項。</msg>
  <msg name="WinJS.UI.PivotItem_part:content">PivotItem 的內容區域。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor">建立新的 ItemContainer 控制項。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:element">裝載 ItemContainer 控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。事件名稱的第一個字元必須為「on」。例如，若要提供 selectionchanging 事件的處理常式，將名為 "onselectionchanging" 的屬性加入至選項物件，並將它的值設定為事件處理常式。</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_returnValue">新的 ItemContainer 控制項。</msg>
  <msg name="WinJS.UI.ItemContainer.element">取得裝載 itemContainer 控制項的 DOM 項目。</msg>
  <msg name="WinJS.UI.ItemContainer.draggable">取得或設定值，這個值指定是否可以拖曳項目。預設值為 false。</msg>
  <msg name="WinJS.UI.ItemContainer.selected">取得或設定值，這個值指定項目是否已選取。</msg>
  <msg name="WinJS.UI.ItemContainer.swipeOrientation">取得或設定 ItemContainer 控制項的撥動方向。預設值為 "vertical"。</msg>
  <msg name="WinJS.UI.ItemContainer.tapBehavior">取得或設定 ItemContainer 控制項在使用者點選或按一下項目時的回應方式。點一下或按一下可以叫用項目，選取並叫用它或著沒有任何作用。可能值："toggleSelect"、"invokeOnly" 和 "none"。預設值為 "invokeOnly"。</msg>
  <msg name="WinJS.UI.ItemContainer.swipeBehavior">取得或設定 ItemContainer 控制項回應撥動互動的方式。撥動筆勢可以選取項目，或者也可以對目前的選取範圍無作用。可能值："select"、"none"。預設值為 "select"。</msg>
  <msg name="WinJS.UI.ItemContainer.selectionDisabled">設定或取得是否已停用項目選取。預設值為 false。</msg>
  <msg name="WinJS.UI.ItemContainer.forceLayout">強制 ItemContainer 控制項更新其配置。當應用程式的閱讀方向在控制項已初始化後變更時，請使用這個函式。</msg>
  <msg name="WinJS.UI.ItemContainer">定義可按下、撥動和拖曳的項目。</msg>
  <msg name="WinJS.UI.ItemContainer_e:invoked">當使用者點選或按一下項目時引發。</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanging">在選取或取消選取項目之前引發。</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanged">在選取或取消選取項目之後引發。</msg>
  <msg name="WinJS.UI.ItemContainer_part:itemcontainer">選取項目控制項的主要容器。</msg>
  <msg name="WinJS.UI.ItemContainer_part:focusedoutline">在主要容器具有鍵盤焦點時用來顯示外框。</msg>
  <msg name="WinJS.UI.Tooltip.constructor">建立新的工具提示。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">裝載 Tooltip 的 DOM 項目。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">包含一或多個屬性/值的物件會套用至新的控制項。選項物件的每個屬性對應至其中一個控制項的屬性或事件。事件名稱的第一個字元必須為「on」。例如，為了提供 opened 事件一個處理常式，加入名為「onopened」的屬性給選項物件並將它的值設定至事件處理常式。這個參數是一個選擇性項目。</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">新的 Tooltip。</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">取得或設定 Tooltip 的 HTML 內容。</msg>
  <msg name="WinJS.UI.Tooltip.element">取得或設定裝載 Tooltip 的 DOM 項目。</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">取得或設定 ToolTip 內容的 DOM 項目。</msg>
  <msg name="WinJS.UI.Tooltip.placement">取得或設定 Tooltip 的位置相對於其目標項目：上方，底部，左側或右側。</msg>
  <msg name="WinJS.UI.Tooltip.infotip">取得或設定值指定 Tooltip 是否為 infotip，工具提示包含大量資訊，而且應該比典型的工具提示顯示時間更長。預設值為 false。</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">取得或設定不同的CSS類別適用於工具提示控制項的主項目。</msg>
  <msg name="WinJS.UI.Tooltip.dispose">處置這個工具提示。</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:eventName">事件的名稱。</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:eventCallback">與事件關聯的事件處理常式函式。</msg>
  <msg name="WinJS.UI.Tooltip.addEventListener_p:capture">設為true登錄事件處理常式的擷取階段；設定為false登錄反昇階段。</msg>
  <msg name="WinJS.UI.Tooltip.removeEventListener">為指定的事件移除註冊事件處理常式。</msg>
  <msg name="WinJS.UI.Tooltip.removeEventListener:capture">設為 true 移除登錄事件處理常式的擷取階段；否則設定為 false 移除登錄事件處理常式的反昇階段。</msg>
  <msg name="WinJS.UI.Tooltip.open">顯示 Tooltip。</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">顯示工具提示類型：「觸控」，「mouseover」，「mousedown」或「鍵盤」。預設值是「mousedown」。</msg>
  <msg name="WinJS.UI.Tooltip.close">隱藏工具提示。</msg>
  <msg name="WinJS.UI.Tooltip">顯示可包含影像和格式的工具提示。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">引發事件當工具提示隨即出現時。</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">引發事件當工具提示顯示時。</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">引發事件當工具提示即將隱藏時。</msg>
  <msg name="WinJS.UI.Tooltip_e:close">引發事件當工具提示隱藏時。</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">整個 ToolTip 控制項。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">建立擴充動畫。在建立 ExpandAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 ExpandAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">顯示單一項目或項目的集合。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">單一項目或項目的集合的位置受展開的影響。</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue"> ExpandAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">建立摺疊動畫。在建立 CollapseAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 CollapseAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">從檢視中移除單一的項目或項目集合。當動畫結束時，應用程式應該隱藏項目或從文件中移除它們。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">單一項目或項目的集合的位置受折疊的影響。</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">CollapseAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">建立重新定位動畫。在建立 RepositionAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 RepositionAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">重新定位單一項目或項目的集合。</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">RepositionAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.fadeIn">執行淡入的動畫。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">單一項目或項目集合的淡入。在動畫結束時，項目的不透明度為1。</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">動畫完成時完成的承諾物件。</msg>
  <msg name="WinJS.UI.Animation.fadeOut">執行淡出的動畫。</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">單一項目或集合逐漸淡出。動畫結束時，項目透明度為 0。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">建立將動畫加入至清單。在建立 AddToListAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 AddToListAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">加入單一項目或項目的集合。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">單一項目或項目的集合的位置受加入的影響。</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">AddToListAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">建立從清單中刪除的動畫。在建立 DeleteFromListAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 DeleteFromListAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">刪除單一項目或項目的集合。當動畫結束時，應用程式應該隱藏項目或從文件中移除它們。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">單一項目或項目的集合的位置受刪除的影響。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">DeleteFromListAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">建立動畫加入至搜尋結果的清單。這類似 AddToListAnimation，但是較快。在建立 AddToSearchListAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 AddToSearchListAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">AddToSearchListAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">建立從搜尋結果的清單刪除的動畫。這類似 DeleteFromListAnimation，但是較快。在建立 DeleteFromSearchListAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 DeleteFromSearchListAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">DeleteFromSearchListAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">滑動項目到螢幕的邊緣位置。這個動畫為 appbar 這樣的小型物件設計的。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">滑動到位置的單一項目或項目的集合。在呼叫函式時，項目應該會在最後的位置。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">選擇性位移物件或位移物件陣列的集合說明動畫的開頭。如果位移物件數目少於項目參數的長度，則最後一個值給所有剩餘項目上重複出現。如果省略這個參數，則會使用預設值。</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:options">選擇性物件，這個物件可以指定要用來播放動畫的機制。預設會使用 CSS 動畫，但若是已提供 { mechanism: "transition" }，則會使用 CSS 轉換。</msg>
  <msg name="WinJS.UI.Animation.showPanel">滑動項目到螢幕的邊緣位置。這個動畫為鍵盤這樣的大型物件設計的。</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">承諾物件</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">滑動項目在檢視範圍之外的螢幕邊緣。這個動畫為 appbar 這樣的小型物件設計的。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">單一項目或集合逐漸滑出。在呼叫函式時，項目應該會在螢幕上的位置。</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">選擇性位移物件或位移物件陣列的集合說明動畫的結尾。如果位移物件數目少於項目參數的長度，則最後一個值給所有剩餘項目上重複出現。如果省略這個參數，則會使用預設值。</msg>
  <msg name="WinJS.UI.Animation.hidePanel">滑動項目在檢視範圍之外的螢幕邊緣。這個動畫為鍵盤這樣的大型物件設計的。</msg>
  <msg name="WinJS.UI.Animation.showPopup">以快顯樣式顯示項目。</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">顯示為快顯的單一項目或項目的集合。</msg>
  <msg name="WinJS.UI.Animation.hidePopup">從螢幕移除快顯功能表。</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">隱藏的單一項目或項目的集合快顯。當動畫結束時，應用程式應該隱藏項目或從文件中移除它們。</msg>
  <msg name="WinJS.UI.Animation.pointerDown">執行指標向下動畫。使用 pointerUp 動畫反轉動畫的效果。</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">單一項目或項目的集合回應指標向下事件。在動畫結束時，修改項目的屬性會反映指標向下狀態。</msg>
  <msg name="WinJS.UI.Animation.pointerUp">執行指標向上動畫。這個反轉 pointerDown 動畫的效果。</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">單一項目或項目的集合回應指標向上事件。在動畫結束時，項目的屬性傳回給一般。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">執行拖曳開始動畫。使用 dragSourceEnd 動畫反轉動畫的效果。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">單一項目或集合被拖曳。在動畫結束時，修改項目的屬性會反映指標拖曳狀態。</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">反白顯示未被拖曳的單一項目或集合。在動畫結束時，修改項目的屬性會反映指標拖曳狀態。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">執行拖曳結尾動畫。反轉 dragSourceStart 動畫的效果。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">單一項目或集合不再被拖曳。在動畫結束時，項目的屬性傳回給一般。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">選擇性位移物件或位移物件陣列的集合說明動畫的開頭。如果位移物件數目少於 dragSource 參數的長度，則最後一個值給所有剩餘項目上重複出現。如果省略這個參數，則會使用預設值。</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">反白顯示未被拖曳的單一項目或集合。在動畫結束時，項目的屬性傳回給一般。</msg>
  <msg name="WinJS.UI.Animation.enterContent">執行輸入內容動畫。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">單一項目或項目的集合代表傳入內容。動畫結束時，項目透明度為 1。</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">選擇性位移物件或位移物件陣列的集合說明動畫的開頭。如果位移物件數目少於傳入參數的長度，則最後一個值給所有剩餘項目上重複出現。如果省略這個參數，則會使用預設值。</msg>
  <msg name="WinJS.UI.Animation.exitContent">執行輸出內容動畫。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">單一項目或項目的集合代表流出內容。動畫結束時，項目透明度為 0。</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">選擇性位移物件或位移物件陣列的集合說明動畫的結尾。如果位移物件數目少於流出參數的長度，則最後一個值給所有剩餘項目上重複出現。如果省略這個參數，則會使用預設值。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">執行動畫指定一個被拖曳物件可以放置在其他項目之間。使用 dragBetweenLeave 動畫反轉動畫的效果。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">單一項目或項目的集合 (通常是兩個)，被拖曳的物件可以被放置在兩者之間。在動畫結束時，修改項目的屬性會反映指標兩者之間的拖曳狀態。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">執行動畫指定一個被拖曳物件將不再放置在其他項目之間。反轉 dragBetweenEnter 動畫的效果。</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">單一項目或項目的集合 (通常是兩個)，被拖曳的物件將不再被放置在兩者之間。在動畫結束時，項目的屬性設定為 dragSourceStart 狀態。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">滑動一個揮擊選取的物件回到位置當指標已釋放，並顯示選取標記。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">單一項目或集合被選取的。在動畫結束時，項目的屬性傳回給一般。</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">單一項目或項目的集合是選取範圍標記。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">滑動一個揮擊取消選取的物件回到位置當指標已釋放，並隱藏選取標記。</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">單一項目或集合被取消選取的。在動畫結束時，項目的屬性傳回給一般。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">顯示一個物件為揮擊結果，或滑動揮擊選取的物件回到位置在顯示之後。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">單一項目或集合被選取的。在動畫結束時，修改項目的屬性會反映指定的位移。</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">選擇性位移物件或位移物件陣列的集合說明動畫的結尾。當將物件搬回位置時，位移應該是 { top: "0px", left: "0px" }。如果位移物件數目少於項目參數的長度，則最後一個值給所有剩餘項目上重複出現。如果省略這個參數，則會使用預設值。預設值說明顯示的動作。</msg>
  <msg name="WinJS.UI.Animation.enterPage">執行 enterPage 動畫。</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">單一項目或項目的集合代表傳入頁面。動畫結束時，項目透明度為 1。</msg>
  <msg name="WinJS.UI.Animation.exitPage">執行 exitPage 動畫。</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">單一項目或項目的集合代表流出頁面。動畫結束時，項目透明度為 0。</msg>
  <msg name="WinJS.UI.Animation.crossFade">執行 crossFade 動畫。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">單一傳入項目或傳入項目的集合。動畫結束時，項目透明度為 1。</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">單一流出項目或流出項目的集合。動畫結束時，項目透明度為 0。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">建立窺視動畫。在建立 PeekAnimation 物件之後，請修改文件將項目移至其新位置，然後呼叫 PeekAnimation 物件的實作方法。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">單一項目或項目的集合將為窺視重新定位。</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue"> ExpandAnimation 物件的實作方法傳回一項承諾完成，當動畫完成。</msg>
  <msg name="WinJS.UI.Animation.updateBadge">執行 updateBadge 動畫。</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">單一項目或項目的集合代表傳入徽章。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">初始化自訂資料來源的 VirtualizedDataSource 基底類別。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">實作 IListDataAdapter 並提供資料給 VirtualizedDataSource 的物件。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">包含屬性並為 VirtualizedDataSource 指定額外選項的物件：cacheSize 數字用來指定快取不需要項目的最小數字，以免是必需的。選項參數為選擇性 (Optional)。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">IListDataNotificationHandler的實作傳遞至 IListDataAdapter.setNotificationHandler 方法。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">請注意 VirtualizedDataSource 某些資料已變更，而不需要指定哪些資料。某些資料來源因為任何或所有變更呼叫這個方法可能不實際，因此這個呼叫是選擇性的。不過，如果某個特定資料配接器從不呼叫它，應用程式應該定期呼叫 VirtualizedDataSource 的 invalidateAll 重新整理資料。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">當資料完全重新整理，而且所有變更告知皆傳送時完成的承諾。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">注意清單資料來源，因為清單資料變更很多最好從頭重新載入資料。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">表示通知批次的開頭。在其他通知序列呼叫之前呼叫以最小化會傳送至 VirtualizedDataSource 用戶端的 countChanged 和 indexChanged 通知數。您必須使用呼叫配對至 endNotifications，且不可以是巢狀。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">引發通知項目已插入。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">插入的項目。它必須具有機碼和資料屬性 (它就必須實作 IItem 介面)。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">項目的機碼在插入點之前，或為 null 如果項目插入了清單的開頭。如果您指定了 nextKey，它可能為 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">項目的機碼在插入點之後，或為 null 如果項目插入了清單的結尾。如果您指定了 previousKey，它可能為 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">插入項目的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">引發通知項目已變更。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">IItem 表示已變更的項目 。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">引發通知項目已移動。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">移動的項目。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">項目的機碼在插入點之前，或為 null 如果項目移動到了清單的開頭。如果您指定了 nextKey，它可能為 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">項目的機碼在插入點之後，或為 null 如果項目移動到了清單的結尾。如果您指定了 previousKey，它可能為 null。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">項目移動前的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">項目移動之後的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">引發通知項目已移動。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">已移除項目的機碼。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">已移除項目的索引。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">關閉透過呼叫 beginNotifications 啟動的通知序列。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">建立 IListBinding 物件可讓用戶端從清單中讀取並接受會影響用戶端已讀取的部分清單的變更通知 。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">實作 IListNotificationHandler 介面的物件。如果您省略參數，變更告知會無法使用。</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">實作 IListBinding 介面的物件</msg>
  <msg name="WinJS.UI.IListBinding">介面可讓用戶端從清單中讀取並接受會影響用戶端已讀取的部分清單的變更通知 。IListBinding 可以透過可能會隨時變更的清單列舉型別。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">將指定的項目設為目前的項目。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">將 IItem 或 IItemPromise 設為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">實作 IItemPromise 介面並對指定項目做為承諾的物件。如果清單中沒有指定的項目，承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListBinding.current">擷取目前的項目。</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">實作 IItemPromise 介面並對目前項目做為承諾的物件。如果游標移至超出清單的開頭或結尾，這項承諾完成的值為 null。如果目前的項目已刪除或移動的，這項承諾傳回錯誤。</msg>
  <msg name="WinJS.UI.IListBinding.previous">擷取在目前項目之前的項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">實作 IItemPromise 介面並對前一個項目做為承諾的物件。如果游標移至將清單的開頭，這項承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListBinding.next">擷取在目前項目之後的項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">實作 IItemPromise 介面並對下一個項目做為承諾。如果游標移至將清單的結尾，這項承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">建立一個要求停止指定的項目的變更通知。項目只有在發行的呼叫數與 IItemPromise.retain 呼叫數相符時才發行。發行的呼叫數不能超過保留的呼叫數。這個方法只有在您傳遞 IListNotificationHandler 給 IListDataSource.createListBinding，當建立 IListBinding 時才存在。</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">要釋放的 IItem 或 IItemPromise。</msg>
  <msg name="WinJS.UI.IListBinding.release">釋放資源，停止告知，並取消所有追蹤項目未完成的承諾即傳回 IListBinding。</msg>
  <msg name="WinJS.UI.IListBinding.first">擷取在清單中第一個項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">IItemPromise 對要求的項目做為承諾。如果清單是空的，承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListBinding.last">擷取在清單中最後一個項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">擷取在具有指定機碼的項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">要求項目的機碼。必須為非空白字串。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">對 IListDataAdapter 的網域特定提示關於項目的位置改善擷取階段。</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">IItemPromise 對要求的項目做為承諾。如果清單中沒有指定機碼的項目，承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">擷取在具有指定索引的項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">大於或等於 0 的值，這個值是要擷取的項目索引。</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">IItemPromise 對要求的項目做為承諾。如果清單中沒有指定索引的項目，IItemPromise 完成的值為 null。</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">擷取在具有指定描述的項目並使其成為目前項目。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">要求項目的特定網域的描述，將是由清單資料配接器解譯。</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">要求之項目中的一項承諾。如果清單中沒有指定描述的項目，IItemPromise 完成的值為 null。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">資料來源重新整理快取的項目藉由從資料配接器再次要求它們。當資料變更時，資料來源產生通知。</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">當資料完全重新整理，而且所有變更告知皆傳送時完成的承諾。</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">擷取資料來源中的項目數。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">擷取具有指定索引鍵的項目。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">IListDataAdapter 的網域特定提示關於項目的位置改善擷取階段。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">要求之項目中的一項承諾。如果清單中沒有指定機碼的項目，承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">擷取指定索引上的項目。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">大於或等於零的值，這個值是要求項目的索引。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">要求之項目中的一項承諾。如果清單中沒有指定索引的項目，承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">擷取具有指定敘述的項目。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">描述專案擷取的網域特定資訊，將由 IListDataAdapter 解譯。</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">要求之項目中的一項承諾。如果清單中沒有指定描述的項目，承諾完成的值為 null。</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">請注意資料來源編輯序列即將開始。資料來源呼叫 IListNotificationHandler.beginNotifications 和 endNotifications 一次為每一個編輯序列。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">將項目加入至資料來源的開始。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">欲插入項目的索引鍵，如果知道；否則為 null。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">要加入項目的資料。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">承諾包含加入的 IItem 或 EditError，當錯誤發生時。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">在另一個項目之前插入項目。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">要插入項目的資料。</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">資料來源中項目的索引鍵。在這個項目前面插入新資料。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">在另一個項目之後插入項目。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">資料來源中項目的索引鍵。新的項目已在項目之後加入。</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">將項目加入至資料來源的結尾。</msg>
  <msg name="WinJS.UI.IListDataSource.change">覆寫指定項目的資料。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">要取代項目的索引鍵。</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">項目的新資料。</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">承諾包含更新的 IItem 或 EditError，當錯誤發生時。</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">將指定的項目移至資料來源的開頭。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">將指定的項目移到另一個項目之前。</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">資料來源中項目的機碼。機碼參數指定的項目已移至這個項目之前的位置。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">移動項目在另一個項目之後。</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">資料來源中項目的機碼。機碼參數指定的項目已移至這個項目之後的位置。</msg>
  <msg name="WinJS.UI.IListDataSource.remove">從資料來源中移除項目。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">要移除的項目索引鍵。</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">承諾不包含任何東西當作業成功時或當錯誤發生時 EditError。</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">使用做為基底類別當定義自訂資料來源時。請勿直接個體化。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">傳回將群組資訊加至另一個資料來源項目的資料來源。「群組」資料來源屬性評估為列舉群組中的其他資料來源。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">群組的個別項目的資料來源。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">回呼函式使用清單中的某個項目做為引數。這個函式被在清單中的每個項目所呼叫並以字串傳回項目的群組機碼。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">回呼函式使用 IListDataSource 的某個項目做為引數。這個函式呼叫在每個群組的專案並傳回代表該群組標頭的物件。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">可以包含屬性指定其他選項的物件：groupCountEstimate：是群組數目的初始評估的數值。如果您指定 -1，則函式傳回沒有結果直到決定了群組的實際數目。batchSize：大於 0 的數字用來指定當搜尋群組時擷取在每個處理行程期間的項目數。(除了指定的數字之外，上一批次的一個項目永遠都包含在內)。</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">IListDataSource 包含在原始資料來源的項目並在「群組」屬性提供額外的群組資訊。「群組」屬性傳回列舉清單中的不同群組的另一 IListDataSource。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">用來通知 ListView 非同步工作已執行，這個事件處理常式不應該被視為完成直到承諾完成。</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">要等候的承諾。</msg>
  <msg name="WinJS.UI.ListView.ObjectType">指定 IListViewEntity 的類型。</msg>
  <msg name="WinJS.UI.ListView.ObjectType.item">這個值表示 ListView 項目。</msg>
  <msg name="WinJS.UI.ListView.ObjectType.groupHeader">這個值表示 ListView 群組標題。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">為 ListView 指定選取模式。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">項目不可選取。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">單一項目可能已經選取。</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">多重項目可能已經選取。</msg>
  <msg name="WinJS.UI.TapBehavior">指定 ListView 中的 ItemContainer 或項目回應點選互動的方式。</msg>
  <msg name="WinJS.UI.TapBehavior.directSelect">輕拍這個項目以叫用和選取它。巡覽至具有鍵盤變更選取範圍的項目，讓具有焦點的項目為唯一選取的項目。</msg>
  <msg name="WinJS.UI.TapBehavior.toggleSelect">點擊項目叫用它。如果項目已選取，點擊它來清除選取範圍。如果項目未被選取，點擊項目來選取。巡覽至鍵盤的項目不選取也不叫用它。</msg>
  <msg name="WinJS.UI.TapBehavior.invokeOnly">點擊項目叫用它。巡覽至鍵盤的項目不選取也不叫用它。</msg>
  <msg name="WinJS.UI.TapBehavior.none">則不會發生。</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior">指定 ListView 中的群組標題回應點選互動的方式。</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior.invoke">點選群組標題將會叫用它。</msg>
  <msg name="WinJS.UI.SwipeBehavior">指定項目是否已選取，當使用者執行揮擊互動。</msg>
  <msg name="WinJS.UI.SwipeBehavior.select">揮擊互動選取被揮擊接觸過的項目。</msg>
  <msg name="WinJS.UI.SwipeBehavior.none">揮擊互動不會變更已選取的項目。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">指定 ListView 動畫是否為進入點動畫或轉換動畫。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">當 ListView 第一次顯示時，動畫會執行。</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">當 ListView 變更內容時，動畫會執行。</msg>
  <msg name="WinJS.UI.Repeater.onitemsloaded">當 Repeater 完成載入新的資料集時引發。這個事件只會在建構函式中引發，或是只在取代 Repeater 控制項的資料來源或範本時引數。</msg>
  <msg name="WinJS.UI.Repeater.onitemchanging">在 Repeater 控制項資料來源中的項目變更之後，但在對應的 DOM 項目已更新之前引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemchanged">在 Repeater 控制項資料來源中的項目變更之後，而且在對應的 DOM 項目已更新之後引發。</msg>
  <msg name="WinJS.UI.Repeater.oniteminserting">在有項目加入至 Repeater 控制項的資料來源之後，但在對應的 DOM 項目已加入之前引發。</msg>
  <msg name="WinJS.UI.Repeater.oniteminserted">在有項目加入至 Repeater 控制項的資料來源之後，而且在對應的 DOM 項目已加入之後引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemmoving">在有項目從 Repeater 控制項資料來源中的一個索引移動至另一個索引之後，但在對應的 DOM 項目已移動之前引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemmoved">在有項目從 Repeater 控制項資料來源中的一個索引移動至另一個索引之後，而且在對應的 DOM 項目已移動之後引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemremoving">在有項目從 Repeater 控制項的資料來源中移除之後，但在對應的 DOM 項目已移除之前引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemremoved">在有項目從 Repeater 控制項資料來源中的一個索引移動至另一個索引之後，而且在對應的 DOM 項目已移動之後引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloading">清單已重新整理，而清單中資料的任何參考都可能會不正確。在 Repeater 控制項的基礎資料已更新之後，但在更新的 HTML 已重新載入之前引發。</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloaded">在 Repeater 控制項的基礎資料已更新之後，而且在更新的 HTML 已重新載入之後引發。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">傳回選取範圍中的項目數。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">選取範圍中項目數。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">回傳選取範圍中項目的索引清單。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">選取範圍中項目的索引清單做為 Number 物件的陣列。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">傳回選取範圍中包含項目的陣列。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">包含所要求的 IItem 物件陣列的承諾。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">取得選取之項目的索引範圍陣列。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">在選取範圍包含每個索引範圍中的 ISelectionRange 物件的陣列。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">傳回值，這個值指出選取範圍是否包含資料來源的每個項目。</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">如果選取範圍是否包含資料來源的每個項目則為true，否則為 false。</msg>
  <msg name="WinJS.UI._Overlay.onbeforeshow">立即在顯示控制項之前發生。</msg>
  <msg name="WinJS.UI._Overlay.onaftershow">立即在顯示控制項之後發生。</msg>
  <msg name="WinJS.UI._Overlay.onbeforehide">立即在隱藏控制項之前發生。</msg>
  <msg name="WinJS.UI._Overlay.onafterhide">立即在隱藏控制項之後發生。</msg>
  <msg name="WinJS.UI.AppBarIcon">AppBarIcon 列舉型別提供一組圖像 (Glyph) 以與 AppBarCommand 圖示屬性使用。</msg>
  <msg name="WinJS.UI.Pivot.onselectionchanged">當使用者變更為其他項目時引發。</msg>
  <msg name="WinJS.UI.ItemCotrol.oninvoked">當叫用項目時引發。您可以使用 tapBehavior 屬性來指定點選和按一下是否會叫用項目。</msg>
  <msg name="WinJS.UI.ItemCotrol.onselectionchanging">在即將選取或取消選取項目之前引發。</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeopen">在工具提示即將出現之前引發。</msg>
  <msg name="WinJS.UI.Tooltip.onopened">當工具提示顯示時引發。</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeclose">在工具提示即將隱藏之前引發。</msg>
  <msg name="WinJS.UI.Tooltip.onclosed">當工具提示不再顯示時引發。</msg>
</messagebundle>