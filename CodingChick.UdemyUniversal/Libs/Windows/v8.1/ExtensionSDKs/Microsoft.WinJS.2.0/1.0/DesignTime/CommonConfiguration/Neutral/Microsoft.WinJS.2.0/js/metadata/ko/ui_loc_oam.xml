<?xml version="1.0" encoding="utf-8"?>
<messagebundle>
  <msg name="WinJS.UI.IListDataSource.endEdits">편집 시퀀스가 끝났음을 데이터 원본에 알립니다. 데이터 원본은 IListNotificationHandler.beginNotifications 및 endNotifications를 각 시퀀스 편집당 한 번 호출합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd">데이터 원본 끝에 항목을 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_p:key">이동할 항목의 키입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToEnd_returnValue">이동한 IItem 또는 오류가 발생할 경우의 EditError를 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI.StorageDataSource">열거된 IStorageQueryResultBase 데이터 원본을 만듭니다.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:query">열거할 개체입니다. IStorageQueryResultBase를 지원해야 합니다.</msg>
  <msg name="WinJS.UI.StorageDataSource_p:options">데이터 원본에 대한 옵션을 지정하는 개체입니다. 이 매개 변수는 선택적 요소입니다. 이러한 등록 정보를 포함할 수 있습니다: 모드: A Windows.Storage.FileProperties.ThumbnailMode - 축소판 및 축소판 그림 요청 유형을 요청 여부를 지정하는 값입니다. requestedThumbnailSize: 축소판 그림의 크기를 지정하는 숫자입니다. thumbnailOptions: 축소판에 대한 추가 옵션을 지정하는 Windows.Storage.FileProperties.ThumbnailOptions 값입니다. waitForFileLoad: 이 값을 true로 설정하는 경우만 해당 속성과 축소판이 로드된 후 데이터 원본 항목을 반환합니다.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail">제공된 항목의 전체 품질 축소판 이미지 요소를 그릴 때 완료하는 이미지 요소에 대한 약속을 반환합니다.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:item">썸네일을 검색할 항목입니다.</msg>
  <msg name="WinJS.UI.StorageDataSource.loadThumbnail_p:image">사용할 이미지 요소입니다. 제공되지 않으면 새 이미지 요소가 만들어집니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor">새 FlipView를 만듭니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:element">컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 pageselected에 대한 이벤트 처리기를 제공하고 "onpageselected" 라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.FlipView.constructor_returnValue">새 FlipView 컨트롤입니다.</msg>
  <msg name="WinJS.UI.FlipView.dispose">이 FlipView을 삭제합니다.</msg>
  <msg name="WinJS.UI.FlipView.next">다음 항목으로 이동합니다.</msg>
  <msg name="WinJS.UI.FlipView.next_returnValue">FlipView를 다음 페이지로 이동하는 경우 true입니다. FlipView가 마지막 페이지이거나 다른 탐색 애니메이션의 중간이면 false입니다.</msg>
  <msg name="WinJS.UI.FlipView.previous">이전 항목을 탐색합니다.</msg>
  <msg name="WinJS.UI.FlipView.previous_returnValue">FlipView를 이전 페이지로 이동하는 경우 true입니다. FlipView가 이미 첫 페이지이거나 다른 탐색 애니메이션의 중간이면 false입니다.</msg>
  <msg name="WinJS.UI.FlipView.element">FlipView 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.FlipView.currentPage">현재 표시된 페이지의 인덱스를 가져오거나 설정합니다. 최소값은 0이며 최대값은 데이터 원본에서 반환되는 항목의 총 개수보다 하나 적습니다.</msg>
  <msg name="WinJS.UI.FlipView.orientation">FlipView의 레이아웃(가로 또는 세로) 방향을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.itemDataSource">표시할 항목의 FlipView를 제공하는 데이터 원본을 가져오거나 설정합니다. FlipView는 각각 자체 페이지에서 한 번에 하나의 항목을 표시합니다.</msg>
  <msg name="WinJS.UI.FlipView.itemTemplate">WinJS.Binding.Template 또는 페이지의 각 항목을 정의하는 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.itemSpacing">항목 사이의 간격(픽셀)을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.count">FlipView 개체의 itemDataSource의 항목 개수를 반환합니다.</msg>
  <msg name="WinJS.UI.FlipView.count_returnValue">카운트를 사용할 수 없는 경우 WinJS.UI.CountResult.unknown 또는 목록 항목의 수를 포함한 약속입니다.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations">페이지 사이를 탐색할 때 사용하는 FlipView에 대한 사용자 지정 애니메이션을 설정합니다.</msg>
  <msg name="WinJS.UI.FlipView.setCustomAnimations_p:animations">각 탐색 동작에 대한 최대 3개의 필드를 포함 하는 개체: 다음, 이전, 점프의 각 필드는 이 시그니처를 사용하는 함수이어야 합니다: 함수(outgoingPage, incomingPage). 이 함수는 애니메이션이 완료된 후 완료되는 WinJS.Promise 개체를 반환합니다. 필드가 null 또는 정의되지 않을 경우 FlipView는 기본 애니메이션이 동작으로 되돌립니다.</msg>
  <msg name="WinJS.UI.FlipView.forceLayout">FlipView가 강제로 레이아웃을 업데이트합니다. Style.display 속성이 "none"으로 설정된 후 FlipView를 다시 볼 수 있게 만들 때 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI.FlipView">한 번에 한 항목씩 일련의 사진같은 컬렉션을 표시합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:datasourcecountchanged">ItemDataSource의 항목 수가 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:pagevisibilitychanged">FlipView 페이지가 보이거나 보이지 않을 때 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:pageselected">페이지에 FlipView를 대칭 이동하는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_e:pagecompleted">페이지에 FlipView를 대칭 이동 및 렌더러 기능을 완료하는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.FlipView_part:flipView">전체 FlipView 컨트롤입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:navigationButton">모든 FlipView 탐색 단추에 대한 일반 클래스입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:leftNavigationButton">탐색 왼쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:rightNavigationButton">탐색 오른쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:topNavigationButton">탐색 위쪽 단추입니다.</msg>
  <msg name="WinJS.UI.FlipView_part:bottomNavigationButton">탐색 아래쪽 단추입니다.</msg>
  <msg name="WinJS.UI._LayoutCommon.groupHeaderPosition">해당 항목을 기준으로 그룹 헤더의 위치를 가져오거나 설정합니다. 기본값은 "top"입니다.</msg>
  <msg name="1">레이아웃의 방향을 가져오거나 설정합니다. 기본값은 "horizontal"입니다.</msg>
  <msg name="WinJS.UI.Layout.constructor">새 레이아웃 개체를 만듭니다.</msg>
  <msg name="WinJS.UI.Layout.constructor_p:options">새 레이아웃 개체에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.Layout.constructor_returnValue">새 레이아웃 개체입니다.</msg>
  <msg name="WinJS.UI._LegacyLayout.disableBackdrop">레이아웃에서 가상화된 목록을 이동하는 동안 빈 영역을 방지하는 밑그림 기능을 비활성화할지 여부를 나타내는 값을 가져오거나 설정합니다. disableBackdrop은 사용되지 않습니다. 대신 .win-listview .win-container.win-backdrop { background-color:transparent; } 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI._LegacyLayout.backdropColor">밑그림에 사용되는 기본 패턴의 채우기 색상을 가져오거나 설정합니다. 기본값은 "rgba(155,155,155,0.23)"입니다. backdropColor는 사용되지 않습니다. 대신 .win-listview .win-container.win-backdrop { rgba(155,155,155,0.23); } 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.GridLayout">새 GridLayout을 만듭니다.</msg>
  <msg name="WinJS.UI.GridLayout_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다.</msg>
  <msg name="WinJS.UI.GridLayout_returnValue">새 GridLayout입니다.</msg>
  <msg name="WinJS.UI.GridLayout.maximumRowsOrColumns">레이아웃에 줄 바꿈을 적용하기 전에 방향에 따라 표시해야 하는 최대 행 또는 열 개수를 가져옵니다. 0 값은 최대값이 없음을 나타냅니다. 기본값은 0입니다.</msg>
  <msg name="WinJS.UI.GridLayout.maxRows">ListView에서 표시하는 최대 항목 수를 가져오거나 설정합니다. WinJS.UI.GridLayout.maxRows는 Windows Library for JavaScript 2.0 이후 수정되거나 사용하지 못할 수 있습니다. 대신 maximumRowsOrColumns 속성을 사용합니다.</msg>
  <msg name="WinJS.UI.GridLayout.itemInfo">크기 항목, 새 열에 항목 배치 여부를 결정합니다. 이후 버전에서는 GridLayout.itemInfo가 수정되거나 사용하지 못할 수 있습니다. 대신 CellSpanningLayout을 사용합니다.</msg>
  <msg name="WinJS.UI.GridLayout.groupInfo">그룹에 셀 확장 항목이 있는지 여부를 나타내고 셀의 크기를 지정합니다. 이후 버전에서는 GridLayout.groupInfo가 수정되거나 사용하지 못할 수 있습니다. 대신 CellSpanningLayout을 사용합니다.</msg>
  <msg name="WinJS.UI.ListLayout">새 ListLayout 개체를 만듭니다.</msg>
  <msg name="WinJS.UI.ListLayout_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 옵션 개체의 각 속성은 개체의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다.</msg>
  <msg name="WinJS.UI.ListLayout_returnValue">새 ListLayout 개체입니다.</msg>
  <msg name="WinJS.UI.CellSpanningLayout">새 CellSpanningLayout 개체를 만듭니다.</msg>
  <msg name="WinJS.UI.CellSpanningLayout_p:options">새 개체에 적용할 하나 이상의 속성/값 쌍이 들어있는 개체입니다. 옵션 개체의 각 속성은 개체의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다.</msg>
  <msg name="WinJS.UI.CellSpanningLayout_returnValue">새 CellSpanningLayout 개체입니다.</msg>
  <msg name="WinJS.UI.CellSpanningLayout.maximumRowsOrColumns">콘텐츠 줄 바꿈을 시작하기 전에 방향에 따라 표시할 최대 행 또는 열의 개수를 가져오거나 설정합니다. 0 값은 최대값이 없음을 나타냅니다.</msg>
  <msg name="WinJS.UI.CellSpanningLayout.itemInfo">항목의 너비와 높이를 반환하고 새 열에 나타나야 하는지 여부를 지정하는 함수를 가져오거나 설정합니다. 이 함수를 설정하면 ListView에서 먼저 공간을 측정하지 않고도 항목에 공간을 할당할 수 있기 때문에 성능이 향상됩니다. 이 함수는 단일 매개 변수를 사용합니다. 렌더링할 항목의 인덱스입니다. 이 함수는 속성이 세 개인 개체를 반환합니다. width: 항목의 전체 너비. height: 항목의 전체 높이. newColumn: 시작 페이지를 만들려면 true로 설정하고, 그렇지 않으면 false로 설정합니다.</msg>
  <msg name="WinJS.UI.CellSpanningLayout.groupInfo">셀 확장을 사용하고 기본 셀 크기를 설정하는 함수를 가져오거나 설정합니다. 이 함수는 세 가지 속성이 있는 개체를 반환합니다. enableCellSpanning: ListView가 여러 크기로 된 항목을 포함할 수 있도록 하려면 true로 설정합니다. cellWidth: 기본 셀의 너비. cellHeight: 기본 셀의 높이.</msg>
  <msg name="2">레이아웃의 방향을 가져옵니다. CellSpanning 레이아웃은 가로 방향만 지원합니다.</msg>
  <msg name="WinJS.UI.ListView.constructor">새 ListView를 만듭니다.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:element">ListView 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ListView.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 selectionchanged에 대한 이벤트 처리기를 제공하고 "onselectionchanged" 라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.constructor_returnValue">새 ListView입니다.</msg>
  <msg name="WinJS.UI.ListView.element">ListView 컨트롤을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.ListView.layout">ListView의 레이아웃을 제어하는 개체를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoad">사용자가 loadingBehavior 속성을 증분으로 설정할 경우 pagesToLoadThreshold 속성에 의해 지정된 임계값을 초과 스크롤하면 로드하는 페이지 수를 가져오거나 설정합니다. pagesToLoad는 사용되지 않습니다. 컨트롤은 이 속성을 사용하지 않습니다. 증분 로드 동작을 구현하는 방법을 보려면 'ListView 로딩 동작' SDK 샘플을 참조하십시오.</msg>
  <msg name="WinJS.UI.ListView.pagesToLoadThreshold">증분 로드를 시작하기 위한 임계값(페이지)에 가져오거나 설정합니다. 마지막 표시 항목이 목록 끝에 로드된 부분에서 지정된 페이지 수 내에 있거나 automaticallyLoadPages가 true이고 loadingBehavior가 "증분"으로 설정된 경우 ListView는 증분 로드를 시작합니다. pagesToLoadThreshold는 사용되지 않습니다. 컨트롤은 이 속성을 사용하지 않습니다. 증분 로드 동작을 구현하는 방법을 보려면 'ListView 로딩 동작' SDK 샘플을 참조하십시오.</msg>
  <msg name="WinJS.UI.ListView.groupDataSource">itemDataSource에 있는 항목에 대한 그룹을 포함하는 데이터 원본을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.automaticallyLoadPages">사용자의 pagesToLoadThreshold 속성에 지정된 페이지 수를 넘어 스크롤할 때 다음 페이지 집합을 자동으로 로드할지 여부를 나타내는 값을 가져오거나 설정합니다. automaticallyLoadPages는 사용되지 않습니다. 이 컨트롤은 이 속성의 기본값을 false로 설정합니다. 증분 로드 동작을 구현하는 방법을 보려면 'ListView 로딩 동작' SDK 샘플을 참조하십시오.</msg>
  <msg name="WinJS.UI.ListView.loadingBehavior">얼마나 많은 데이터 항목을 DOM으로 로드할지 결정하는 값을 가져오거나 설정합니다. pagesToLoadThreshold는 사용되지 않습니다. 컨트롤은 이 속성의 기본값을 'randomAccess'로 설정합니다. 증분 로드 동작을 구현하는 방법을 보려면 'ListView 로딩 동작' SDK 샘플을 참조하십시오.</msg>
  <msg name="WinJS.UI.ListView.selectionMode">사용자가 선택할 수 있는 ListView 항목을 지정하는 값을 가져오거나 설정합니다: "none", "single" 또는 "multi".</msg>
  <msg name="WinJS.UI.ListView.tapBehavior">사용자가 항목을 탭하거나 클릭할 때 ListView 반응을 가져오거나 설정합니다. 누르거나 클릭하여 항목을 호출할 수 있고, 선택 및 호출하거나 영향을 주지 않을 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTapBehavior">사용자가 그룹 헤더를 누르거나 클릭할 때 ListView의 반응을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.swipeBehavior">ListView 스와이프 상호 작용에 반응하는 방법을 가져오거나 설정합니다. 스와이프 제스처는 스와이프된 항목을 선택하거나 현재 선택 영역에 영향을 주지 않을 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.itemDataSource">ListView에 대한 항목을 제공하는 데이터 원본을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.itemTemplate">DOM 요소의 각 항목에 대한 itemDataSource에서 만드는 템플릿 함수를 가져오거나 설정합니다. 각 항목에 여러 DOM 요소를 포함할 수 있지만 단일 루트 요소를 갖도록 하는 것이 좋습니다.</msg>
  <msg name="WinJS.UI.ListView.resetItem">ListView에서 항목의 요소 표현을 재활용할 경우 호출되는 함수를 가져오거나 설정합니다. resetItem은 이후 버전에서 수정되거나 사용하지 못할 수 있습니다. 대신, WinJS.Utilities.markDisposable을 사용하여 요소를 삭제 가능으로 표시합니다.</msg>
  <msg name="WinJS.UI.ListView.groupHeaderTemplate">DOM 요소의 각 그룹 헤더에 대한 groupDataSource에서 만드는 템플릿 함수를 가져오거나 설정합니다. 각 그룹 헤더에 여러 DOM 요소를 포함할 수 있지만 단일 루트 요소를 갖도록 해야 합니다.</msg>
  <msg name="WinJS.UI.ListView.resetGroupHeader">ListView에서 그룹 헤더의 DOM 요소 표현을 재활용할 경우 호출되는 함수를 가져오거나 설정합니다. resetGroupHeader는 이후 버전에서 수정되거나 사용하지 못할 수 있습니다. 대신, WinJS.Utilities.markDisposable을 사용하여 헤더 요소를 삭제 가능으로 표시합니다.</msg>
  <msg name="WinJS.UI.ListView.loadingState">ListView가 로드 중인지 여부를 나타내는 값 또는 로드가 완료되는 여부를 가져옵니다. 이 속성이 다음 값 중 하나를 반환할 수 있습니다: "itemsLoading", "viewPortLoaded", "itemsLoaded" 또는 "complete"입니다.</msg>
  <msg name="WinJS.UI.ListView.selection">현재 선택한 항목을 포함한 ISelection 개체를 가져옵니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfFirstVisible">첫 번째로 보이는 항목을 가져오거나 설정합니다. 이 속성을 설정할 때 지정된 인덱스의 항목 목록 상단에 오도록 ListView를 스크롤합니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfLastVisible">마지막으로 보이는 항목의 인덱스를 가져옵니다.</msg>
  <msg name="WinJS.UI.ListView.currentItem">키보드 포커스 및 포커스 상태를 가져와야 하는 항목을 나타내는 개체를 가져오거나 설정합니다. 개체에 이러한 속성이 있습니다: 인덱스: itemDataSource에 있는 항목 인덱스입니다. 키: itemDataSource에 있는 항목 키입니다. hasFocus:이 속성을 가져올 때 항목에 포커스가 이미 있을 경우 이 값은 true이고 그렇지 않은 경우 false입니다. 이 속성을 설정할 때 포커스를 즉시 가져와야 할 경우 이 값을 true로 설정합니다. 그렇지 않은 경우 false로 설정하고 결국 항목이 포커스를 발생합니다. showFocus: 항목이 포커스 사각형을 표시하는 경우 true, 그렇지 않은 경우 false입니다.</msg>
  <msg name="WinJS.UI.ListView.zoomableView">ZoomableView를 가져옵니다. 이 API는 SemanticZoom 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI.ListView.itemsDraggable">ListView의 항목을 끌어 놓을 수 있는지 여부를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.itemsReorderable">ListView의 항목을 끌어 놓기로 자체 내에서 재주문할 수 있는지 여부를 가져오거나 설정합니다. ListView가 재주문 가능으로 표시되면 해당 항목을 자체 내에서 끌 수 있지만 처리를 위해 itemdrag 이벤트를 발생시킬 필요는 없습니다.</msg>
  <msg name="WinJS.UI.ListView.maxDeferredItemCleanup">실현된 항목의 최대 항목 수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.dispose">이 ListView을 삭제합니다.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex">지정된 인덱스의 항목에 나타나는 DOM 개체를 반환합니다.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_p:itemIndex">해당 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.ListView.elementFromIndex_returnValue">지정된 항목을 나타내는 DOM 개체입니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement">지정된 DOM 요소를 표시하는 항목 인덱스를 반환합니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_p:element">항목을 표시하는 DOM 개체입니다.</msg>
  <msg name="WinJS.UI.ListView.indexOfElement_returnValue">지정된 DOM 요소가 표시하는 항목 인덱스입니다.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible">지정된 항목이 표시됩니다. 필요한 경우 ListView를 항목으로 스크롤합니다.</msg>
  <msg name="WinJS.UI.ListView.ensureVisible_p:value">보기로 가져올 ListView 항목 또는 IListViewEntity의 인덱스입니다.</msg>
  <msg name="WinJS.UI.ListView.loadMorePages">ListView 개체의 loadingBehavior 증분으로 설정되어 있으면 다음 페이지 집합을 로드합니다. loadMorePages는 사용되지 않습니다. 이 함수를 호출해도 아무 영향이 없습니다. 증분 로드 동작을 구현하는 방법을 보려면 'ListView 로딩 동작' SDK 샘플을 참조하십시오.</msg>
  <msg name="WinJS.UI.ListView.recalculateItemPosition">크기가 변경된 항목을 조정하려면 ListView에 있는 모든 보이는 항목을 다시 설정합니다. style.display 속성을 "없음"으로 설정한 후 또는 ListView 또는 해당 항목의 크기 또는 위치에 영향을 미치는 스타일을 변경한 후 ListView를 다시 표시할 경우 이 함수 또는 forceLayout을 사용합니다. forceLayout과 달리 이 메서드는 항목을 다시 만들지 않으며 나타내기 애니메이션을 표시하지 않습니다.</msg>
  <msg name="WinJS.UI.ListView.forceLayout">ListView가 강제로 레이아웃을 업데이트합니다. style.display 속성을 "없음"으로 설정한 후 또는 ListView 또는 해당 항목의 크기 또는 위치에 영향을 미치는 스타일을 변경한 후 ListView를 다시 표시할 경우 이 함수 또는 relcaculateItemPosition을 사용합니다.</msg>
  <msg name="WinJS.UI.ListView.scrollPosition">ListView 스크롤 막대의 위치를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ListView.triggerDispose">ListView 삭제 서비스를 수동으로 트리거합니다. 정상적인 작업에서는 ListView 인스턴스화할 때 트리거됩니다. 그러나 일부 시나리오에서는 해당 삭제 서비스를 수동으로 실행할 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView">사용자 지정 가능한 목록 또는 표로 항목을 표시합니다.</msg>
  <msg name="WinJS.UI.ListView_e:contentanimating">ListView가 입구 또는 전환 애니메이션을 재생할 때 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:iteminvoked">사용자가 이벤트를 탭하거나 클릭하면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:groupheaderinvoked">사용자가 그룹 헤더를 누르거나 클릭하면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanging">항목을 선택 또는 선택 취소하기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:selectionchanged">항목을 선택 또는 선택 취소한 후에 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:loadingstatechanged">로딩 상태가 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:keyboardnavigating">포커스가 있는 항목이 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragstart">사용자가 ListView 항목을 끌기 시작하면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragenter">사용자가 ListView로 끌어 올 때 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragend">ListView 끝에서 끌기 작업이 시작된 경우 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragbetween">사용자가 ListView 항목 사이에서 끌면 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragleave">사용자가 ListView 영역 밖으로 끌 때 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragchanged">데이터 소스 수정으로 인해 끌고 있는 항목이 변경된 경우 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:itemdragdrop">사용자가 ListView로 항목을 끌어 올 때 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_e:accessibilityannotationcomplete">액세스 가능성 특성이 ListView 항목에 추가된 경우 발생합니다.</msg>
  <msg name="WinJS.UI.ListView_part:listView">전체 ListView 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ListView_part:viewport">ListView의 뷰포트입니다.</msg>
  <msg name="WinJS.UI.ListView_part:surface">ListView의 스크롤할 수 있는 영역입니다.</msg>
  <msg name="WinJS.UI.ListView_part:item">ListView의 항목입니다.</msg>
  <msg name="WinJS.UI.ListView_part:selectionbackground">백그라운드의 체크 표시를 선택합니다.</msg>
  <msg name="WinJS.UI.ListView_part:selectioncheckmark">체크 표시에서 선택합니다.</msg>
  <msg name="WinJS.UI.ListView_part:groupHeader">그룹 헤더입니다.</msg>
  <msg name="WinJS.UI.ListView_part:progressbar">ListView의 진행률 표시기입니다.</msg>
  <msg name="WinJS.UI.Repeater.constructor">새 Repeater 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:element">새 컨트롤을 호스팅할 DOM 요소입니다. 이 값이 null이면 Repeater가 요소를 만듭니다.</msg>
  <msg name="WinJS.UI.Repeater.constructor_p:options">새 Repeater에 적용하려면 개체에 하나 이상의 속성/값 쌍이 있어야 합니다. 옵션 개체의 각 속성은 개체의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다.</msg>
  <msg name="WinJS.UI.Repeater.constructor_returnValue">새 Repeater 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Repeater.element">Repeater를 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.Repeater.data">표시할 항목과 함께 Repeater 컨트롤을 제공하는 WinJS.Binding.List를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Repeater.template">Repeater 내에서 각 항목의 HTML을 정의하는 템플릿 또는 사용자 지정 렌더링 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Repeater.length">Repeater 컨트롤의 항목 수를 가져옵니다.</msg>
  <msg name="WinJS.UI.Repeater.elementFromIndex">지정된 인덱스의 항목의 HTML 요소를 반환합니다.</msg>
  <msg name=" WinJS.UI.Repeater.elementFromIndex_returnValue">지정된 항목의 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Repeater.dispose">가비지 수집에 대해 이 Repeater를 준비합니다.</msg>
  <msg name="WinJS.UI.Repeater">데이터 집합에서 HTML을 생성하는 템플릿을 사용합니다.</msg>
  <msg name="WinJS.UI.Repeater_part:repeater">Repeater 컨트롤 자체</msg>
  <msg name="WinJS.UI._Selection.prototype.clear">선택을 지웁니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.clear_returnValue">지우기 작업이 완료된 경우 약속이 충족됩니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.set">현재 선택을 취소하고 지정된 항목으로 바꿉니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_items">선택하는 인덱스 또는 항목 키입니다. 매개 변수 항목에 서로 다른 형식의 개체를 제공할 수 있습니다: 인덱스, 키 또는 인덱스 범위를 지정할 수 있습니다. 이러한 개체 중 하나를 포함하는 배열일 수도 있습니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.set_returnValue">작업이 완료된 경우 약속이 충족됩니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.add">선택에 하나 이상의 항목을 추가합니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.add_items">추가할 항목의 키 또는 인덱스입니다. 매개 변수 항목에 서로 다른 형식의 개체를 제공할 수 있습니다: 인덱스, 키 또는 인덱스 범위를 지정할 수 있습니다. 이러한 개체 중 하나를 포함하는 배열일 수도 있습니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove">선택에서 지정한 항목을 제거합니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.remove_items">제거할 항목의 키 또는 인덱스입니다. 매개 변수 항목에 서로 다른 형식의 개체를 제공할 수 있습니다: 인덱스, 키 또는 인덱스 범위를 지정할 수 있습니다. 이러한 개체 중 하나를 포함하는 배열일 수도 있습니다.</msg>
  <msg name="WinJS.UI._Selection.prototype.selectAll">모든 항목을 ListView에서 선택 영역에 추가합니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor">새 DatePicker 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:element">DatePicker 컨트롤을 호스팅할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다.</msg>
  <msg name="WinJS.UI.DatePicker.constructor_returnValue">생성된 DatePicker 컨트롤입니다.</msg>
  <msg name="WinJS.UI.DatePicker.calendar">사용할 달력을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.current">DatePicker의 현재 날짜를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.disabled">DatePicker의 사용 여부를 지정하는 값을 가져오거나 설정합니다. true 값은 DatePicker를 사용하지 않음을 나타냅니다.</msg>
  <msg name="WinJS.UI.DatePicker.datePattern">날짜에 대한 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.element">DatePicker에 대한 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.DatePicker.minYear">선정할 최소 윤년을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.maxYear">선정할 최대 윤년을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.monthPattern">월별 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker.yearPattern">연별 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.DatePicker">사용자가 날짜 값을 선택할 수 있도록 합니다.</msg>
  <msg name="WinJS.UI.DatePicker_name">날짜 선택</msg>
  <msg name="WinJS.UI.DatePicker_e:change">현재 날짜가 변경될 때 발생합니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor">TimePicker 컨트롤의 새 인스턴스를 초기화합니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:element">TimePicker 컨트롤과 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_p:options">TimePicker 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.TimePicker.constructor_returnValue">생성된 TimePicker 컨트롤입니다.</msg>
  <msg name="WinJS.UI.TimePicker.clock">12HourClock 또는 24HourClock을 표시하려면 시계 유형을 가져오거나 설정합니다. 이 기본값은 사용자 설정입니다.</msg>
  <msg name="WinJS.UI.TimePicker.current">TimePicker의 현재 날짜와 시간을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.disabled">TimePicker가 비활성화 되어 있는지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.element">TimePicker에 대한 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.TimePicker.hourPattern">시간에 대한 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.minuteIncrement">분 증분을 가져오거나 설정합니다. 예를 들어 "15"는 TimePicker 분 컨트롤이 00, 15, 30, 45분만 표시하도록 지정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.minutePattern">분 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker.periodPattern">주기 표시 패턴을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.TimePicker">사용자가 시간 값을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.TimePicker_name">시간 선택</msg>
  <msg name="WinJS.UI.TimePicker_e:change">시간이 변경되면 발생합니다.</msg>
  <msg name="WinJS.UI.BackButton.constructor">새 BackButton 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.BackButton.constructor_p:element">컨트롤을 호스팅할 DOM 요소입니다. 이 매개 변수가 null이면 이 생성자가 새로 만들어줍니다.</msg>
  <msg name="WinJS.UI.MenuBackButtonCommand.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다.</msg>
  <msg name="WinJS.UI.BackButton.constructor_returnValue">BackButton 컨트롤입니다.</msg>
  <msg name="WinJS.UI.BackButton.element">BackButton 컨트롤을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.BackButton.dispose">이 컨트롤을 삭제합니다.</msg>
  <msg name="WinJS.UI.BackButton.refresh">'disabled' 특성을 설정하여 현재 탐색 기록 스택을 기준으로 값을 수정합니다.</msg>
  <msg name="WinJS.UI.BackButton">뒤로 탐색 기능을 제공합니다.</msg>
  <msg name="WinJS.UI.BackButton_part:BackButton">BackButton 컨트롤 자체</msg>
  <msg name="WinJS.UI.BackButton_part:BackArrowGlyph">뒤로 화살표 문자</msg>
  <msg name="WinJS.UI.Rating.constructor">새 등급을 만듭니다.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:element">새 등급을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Rating.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 이벤트를 취소하기 위한 처리기를 제공하고 "oncancel"이라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.Rating.constructor_returnValue">새 등급입니다.</msg>
  <msg name="WinJS.UI.Rating.maxRating">최대 가능한 등급 값을 가져오거나 설정합니다. 기본값은 5입니다.</msg>
  <msg name="WinJS.UI.Rating.userRating">사용자 등급을 가져오거나 설정합니다. 이 값은 0보다 크거나 같고 maxRating보다 작거나 같아야 합니다.</msg>
  <msg name="WinJS.UI.Rating.averageRating">평균 등급을 float 값으로 가져오거나 설정합니다. 이 값은 [0과 같고] 또는 [1보다 크거나 같아야 하고 maxRating보다 작거나 같아야 합니다].</msg>
  <msg name="WinJS.UI.Rating.disabled">컨트롤의 사용 여부를 지정하는 값을 가져오거나 설정합니다. 컨트롤이 비활성화 되면 사용자가 새로운 등급을 지정하거나 기존 등급을 수정할 수 없습니다.</msg>
  <msg name="WinJS.UI.Rating.enableClear">사용자가 컨트롤의 등급을 지울 수 있는지 여부를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Rating.tooltipStrings">도구 설명에 있는 등급 값을 표시하는 설명 집합을 가져오거나 설정합니다. 배열은 각 등급을 사용할 수 있는 값을 포함해야 하고 일반 등급 옵션에 대한 선택적 문자열(배열 끝)을 포함할 수 있습니다.</msg>
  <msg name="WinJS.UI.Rating.element">새 등급을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.Rating.dispose">이 등급을 삭제합니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener">지정된 이벤트에 대한 이벤트 처리기를 등록합니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventName">이벤트의 이름입니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:eventCallback">이 이벤트와 연결할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI.Rating.addEventListener_p:capture">캡처 단계에 대한 이벤트 처리기를 등록하려면 true로 설정 합니다. 버블링 단계에 대한 등록은 false로 설정합니다.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener">지정된 이벤트에 대한 이벤트 처리기를 등록 취소합니다.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:eventCallback">제거할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI.Rating.removeEventListener_p:capture">캡처 단계에 대한 이벤트 처리기를 등록 취소하려면 true로 설정 합니다. 그렇지 않으면 버블링 단계에 대한 등록 취소는 false로 설정합니다.</msg>
  <msg name="WinJS.UI.Rating">등급 컨트롤은 1에서 maxRating까지 부여할 수 있습니다(기본값은 5입니다).</msg>
  <msg name="WinJS.UI.Rating_e:previewchange">사용자가 새 미정 등급을 선택하지만 변경 되지 않았을 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Rating_e:cancel">사용자 등급 미정을 커밋하지 않고 등급 컨트롤과 상호 작용이 끝났을 때 발생합니다.</msg>
  <msg name="WinJS.UI.Rating_e:change">사용자가 userRating에 변경을 커밋하면 발생합니다.</msg>
  <msg name="WinJS.UI.Rating_part:rating">전체 등급 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Rating_part:average-empty">등급 컨트롤 평균 등급을 표시할 때 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:average-full">등급 컨트롤 평균 등급을 표시할 때 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:user-empty">등급 컨트롤 사용자 등급을 표시할 때 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:user-full">등급 컨트롤 사용자 등급을 표시할 때 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-empty">등급 컨트롤 임시 등급을 표시할 때 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:tentative-full">등급 컨트롤 임시 등급을 표시할 때 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-empty">컨트롤을 사용할 수 없는 경우 빈 별입니다.</msg>
  <msg name="WinJS.UI.Rating_part:disabled-full">컨트롤을 사용할 수 없는 경우 꽉 찬 별입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor">새 ToggleSwitch를 만듭니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:element">ToggleSwitch를 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 이벤트를 변경하기 위한 처리기를 제공하고 "onchange"라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.constructor_returnValue">새로운 ToggleSwitch입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.checked">컨트롤이 켜져 있거나(true로 체크됨) 꺼져 있을 때(false로 체크됨) 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.disabled">컨트롤의 사용 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.element">ToggleSwitch 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOn">컨트롤이 켜져 있을 때 표시되는 텍스트를 가져오거나 설정합니다(true로 체크됨). 기본값은 "On"입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.labelOff">컨트롤이 꺼져 있을 때 표시되는 텍스트를 가져오거나 설정합니다(false로 체크됨). 기본값은 "Off"입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.title">ToggleSwitch 컨트롤에 대한 기본 텍스트를 가져오거나 설정합니다. 이 텍스트는 컨트롤이 설정되어 있는지 해제되어 있는지에 관계없이 항상 표시됩니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.dispose">이 ToggleSwitch를 삭제합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch">옵션 설정 또는 해제를 전환할 수 있는 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_e:change">스위치가 켜져 있거나(true로 체크됨) 꺼져 있을 때(false로 체크됨) 발생합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:toggle">전체 ToggleSwitch 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:switch">슬라이더는 ToggleSwitch의 상태를 전환할 수 있습니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:title">ToggleSwitch 컨트롤의 기본 텍스트입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-on">스위치가 켜져 있을 때 텍스트입니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch_part:label-off:">스위치가 꺼져 있을 때 텍스트입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor">새 SemanticZoom을 만듭니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:element">SemanticZoom을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.constructor_returnValue">새 SemanticZoom 컨트롤입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.element">SemanticZoom 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.enableButton">Semantic zoom 단추를 표시할지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOut">축소 뷰가 현재 표시되었는지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomFactor">축소 뷰 범위를 지정하는 0.2와 0.85 사이의 값을 가져오거나 설정합니다. 기본값은 0.65입니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.locked">SemanticZoom이 잠기고 확대 보기를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedInItem">확대 시 대상이 되는 항목을 변경하는 데 사용할 수 있는 매핑 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.zoomedOutItem">축소 시 대상이 되는 항목을 변경하는 데 사용할 수 있는 매핑 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.dispose">이 SemanticZoom을 삭제합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom.forceLayout">SemanticZoom이 강제로 레이아웃을 업데이트합니다. Style.display 속성이 "none"으로 설정된 후 SemanticZoom을 다시 볼 수 있게 만들 때 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom">두 개의 자식 컨트롤에 의해 제공되는 확대/축소를 두 가지 뷰에서 사용할 수 있습니다. 이 두 자식 컨트롤 중 하나는 축소된 보기를 제공하고 나머지 하나는 확대된 보기를 제공합니다.</msg>
  <msg name="WinJS.UI.SemanticZoom_part:semanticZoom">전체 SemanticZoom 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Hub.constructor">새 허브 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.Hub.constructor_p:element">허브 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Hub.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 contentanimating 이벤트에 대한 이벤트 처리기를 제공하고 "oncontentanimating"이라는 속성을 옵션 개체에 추가한 다음 이벤트 처리기에 해당 값을 설정합니다.</msg>
  <msg name="WinJS.UI.Hub.constructor_returnValue">새 허브입니다.</msg>
  <msg name="WinJS.UI.Hub.element">새 허브를 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.Hub.orientation">허브 안에서 섹션 방향을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Hub.sections">이 허브에 속하는 HubSection 개체의 WinJS.Binding.List를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Hub.headerTemplate">각 HubSection에 대한 헤더를 나타내는 DOM 요소를 만드는 WinJS.Binding.Template 또는 템플릿 함수를 가져오거나 설정합니다. 각 헤더는 여러 DOM 요소를 포함할 수 있지만 단일 루트 요소만 포함하는 것이 좋습니다.</msg>
  <msg name="WinJS.UI.Hub.scrollPosition">허브 스크롤 막대의 위치를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Hub.sectionOnScreen">보기의 첫 번째 섹션의 인덱스를 가져오거나 설정합니다. 이 속성은 응용 프로그램을 시작하거나 다시 시작할 때 이전 보기를 복원하는 데 유용합니다.</msg>
  <msg name="WinJS.UI.Hub.indexOfFirstVisible">보기의 첫 번째 섹션의 인덱스를 최소한 부분적으로 가져오거나 설정합니다. 애니메이션에 사용합니다.</msg>
  <msg name="WinJS.UI.Hub.indexOfLastVisible">보기의 마지막 섹션의 인덱스를 최소한 부분적으로 가져오거나 설정합니다. 애니메이션에 사용합니다.</msg>
  <msg name="WinJS.UI.Hub.loadingState">허브가 로드 중인지 여부 또는 로드가 완료되었는지 여부를 나타내는 값을 가져옵니다. 이 속성은 "loading" 또는 "complete" 중 한 가지 값을 반환할 수 있습니다.</msg>
  <msg name="WinJS.UI.Hub.zoomableView">ZoomableView를 가져옵니다. 이 API는 SemanticZoom 인프라를 지원하며 사용자 코드에서 직접 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI.Hub.AnimationType">허브 애니메이션이 나타내기 애니메이션인지 아니면 전환 애니메이션인지를 지정합니다.</msg>
  <msg name="WinJS.UI.Hub.LoadingState">허브의 현재 로드 상태를 가져옵니다.</msg>
  <msg name="WinJS.UI.Hub">콘텐츠의 섹션을 표시합니다.</msg>
  <msg name="WinJS.UI.Hub_e:contentanimating">허브가 나타내기 또는 전환 애니메이션을 재생하려는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Hub_e:headerinvoked">헤더가 호출될 때 발생합니다.</msg>
  <msg name="WinJS.UI.Hub_part:hub">전체 허브 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Hub_part:progress">허브의 진행률 표시기입니다.</msg>
  <msg name="WinJS.UI.Hub_part:viewport">허브의 뷰포트입니다.</msg>
  <msg name="WinJS.UI.Hub_part:surface">허브의 스크롤할 수 있는 영역입니다.</msg>
  <msg name="WinJS.UI.HubSection.constructor">새 HubSection을 만듭니다.</msg>
  <msg name="WinJS.UI.HubSection.constructor_p:element">HubSection 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.HubSection.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다.</msg>
  <msg name="WinJS.UI.HubSection.constructor_returnValue">새 HubSection입니다.</msg>
  <msg name="WinJS.UI.HubSection.element">HubSection을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.HubSection.isHeaderStatic">헤더가 고정인지 여부를 지정하는 값을 가져오거나 설정합니다. 클릭 및 기타 상호 작용을 사용하지 않으려면 이 값을 true로 설정합니다.</msg>
  <msg name="WinJS.UI.HubSection.contentElement">HubSection의 콘텐츠를 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.HubSection.header">HubSection의 헤더를 가져오거나 설정합니다. 이 속성을 설정한 후에 허브가 헤더를 다시 렌더링합니다.</msg>
  <msg name="WinJS.UI.HubSection">허브 컨트롤의 섹션을 정의합니다.</msg>
  <msg name="WinJS.UI.HubSection_part:hubsection">전체 HubSection 컨트롤입니다.</msg>
  <msg name="WinJS.UI.HubSection_part:header">HubSection의 헤더 영역입니다.</msg>
  <msg name="WinJS.UI.HubSection_part:headertabstop">HubSection 헤더 영역의 탭 정지 영역입니다.</msg>
  <msg name="WinJS.UI.HubSection_part:headercontent">HubSection 헤더 영역의 콘텐츠 영역입니다.</msg>
  <msg name="WinJS.UI.HubSection_part:headerchevron">HubSection 헤더 영역의 펼침 단추 영역입니다.</msg>
  <msg name="WinJS.UI.HubSection_part:content">HubSection의 콘텐츠 영역입니다.</msg>
  <msg name="WinJS.UI._Overlay">오버레이 컨트롤을 생성하고 내부 DOM 요소에 연결합니다.</msg>
  <msg name="WinJS.UI._Overlay_p:element">오버레이 컨트롤에 연결할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI._Overlay_p:options">오버레이 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI._Overlay_returnValue">완전히 생성된 오버레이 컨트롤입니다.</msg>
  <msg name="WinJS.UI._Overlay.element">오버레이에 첨부되는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI._Overlay.disabled">오버레이 사용 안 함, 설정 또는 HTML 가져오기 특성을 사용할 수 있습니다. 오버레이를 사용하지 않을 때 show()에 더이상 표시되지 않으며 현재 표시되는 경우 숨겨집니다.</msg>
  <msg name="WinJS.UI.Overlay.dispose">이 오버레이를 삭제합니다.</msg>
  <msg name="WinJS.UI._Overlay.show">다른 상태에 관계 없이 숨겨진 경우 오버레이를 보여줍니다.</msg>
  <msg name="WinJS.UI._Overlay.hide">다른 상태에 관계 없이 표시되는 경우 오버레이를 숨깁니다.</msg>
  <msg name="WinJS.UI._Overlay.hidden">오버레이가 현재 표시되지 않은 경우만, true를 참조하십시오.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener">이 오버레이에 대한 DOM 요소에 이벤트 수신기를 추가합니다.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:type">필수적 요소로서, 추가할 이벤트 형식은 "beforehide", "afterhide", "beforeshow" 또는 "aftershow"입니다.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:listener">필수적 요소로서, 이 이벤트와 연결할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI._Overlay.addEventListener_p:useCapture">선택적 요소로서, True로 단계를 캡처하는 이벤트를 등록합니다. False이면 이벤트가 버블링 단계입니다.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener">이 오버레이에 대한 DOM 요소에 이벤트 수신기를 제거합니다.</msg>
  <msg name="WinJS.UI._Overlay.removeEventListener_p:type">필수적 요소로서, 제거할 이벤트 형식은 "beforehide", "afterhide", "beforeshow" 또는 "aftershow"입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor">새 AppBarCommand 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:element">컨트롤을 호스팅할 DOM 요소입니다. AppBarCommand 값이 null이면 만듭니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_p:options">새 AppBarCommand에 적용할 속성 및 값의 집합입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.constructor_returnValue">새 AppBarCommand 컨트롤입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.id">AppBarCommand의 ID를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.type">AppBarCommand의 형식을 가져오거나 설정합니다. 가능한 값은 "button", "toggle", "flyout" 또는 "separator"입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.label">AppBarCommand의 레이블을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.icon">AppBarCommand의 아이콘을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.onclick">명령을 클릭할 경우 호출할 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.flyout">이 속성은 플라이아웃 형식의 AppBarCommands에서 이 명령이 호출하는 WinJS.UI.Flyout을 반환합니다. 이 속성을 설정할 때는 호출할 플라이아웃의 문자열 ID, 플라이아웃의 DOM 개체 또는 WinJS.UI.Flayout 개체 자체를 사용할 수도 있습니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.section">AppBarCommand가 있는 섹션을 가져오거나 설정합니다. 가능한 값은 "selection" 및 "global"입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.tooltip">AppBarCommand의 도구 설명 텍스트를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.selected">설정/해제 단추의 선택된 상태를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.element">AppBarCommand를 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.disabled">AppBarCommand가 비활성화되었는지 여부를 나타내는 값을 가져오거나 설정합니다. true 값은 AppBarCommand를 비활성화하고 false 값은 활성화합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.hidden">AppBarCommand가 숨겨져 있는지 또는 숨겨지는 과정에 있는지를 나타내는 값을 가져옵니다. true 값은 AppBarCommand가 숨겨져 있거나 숨겨지는 과정에 있음을 나타냅니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.firstElementFocus">"콘텐츠" 형식 AppBarCommand 안에서 Home 또는 화살표 키를 통해 포커스가 이전 AppBarCommand에서 이 AppBarCommand로 이동할 때마다 포커스를 받아야 하는 HTMLElement를 가져오거나 설정합니다. 기본적으로 AppBarCommand 개체의 호스트 요소를 반환합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.lastElementFocus">"콘텐츠" 형식 AppBarCommand 안에서 End 또는 화살표 키를 통해 포커스가 다음 AppBarCommand에서 이 AppBarCommand로 이동할 때마다 포커스를 받아야 하는 HTMLElement를 가져오거나 설정합니다. 기본적으로 이 AppBarCommand 개체의 호스트 요소를 반환합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:type">필수적 요소로서, 등록할 이벤트의 이름입니다. "beforeshow", "beforehide", "aftershow" 또는 "afterhide"여야 합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.addEventListener_p:useCapture">선택적 요소로서, 캡처 단계에 대한 이벤트 처리기를 등록하려면 true로 설정합니다. 그렇지 않고 버블링 단계에 대해 등록하려면 false로 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener">addEventListener 메서드가 등록한 이벤트 처리기를 제거합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:type">필수적 요소로서, 제거할 이벤트의 이름입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:listener">필수적 요소로서, 제거할 이벤트 처리기 함수입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.removeEventListener_p:useCapture">선택적 요소로서, 캡처 단계 이벤트 처리기를 제거하려면 true로 설정합니다. 그렇지 않고 버블링 단계 이벤트 처리기를 제거하려면 false로 설정합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand.extraClass">생성 중에 추가 CSS 클래스를 추가합니다.</msg>
  <msg name="WinJS.UI.AppBarCommand">AppBar에 표시할 명령을 나타냅니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommand">AppBarCommand 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandIcon">AppBarCommand의 아이콘 상자입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandImage">AppBarCommand의 아이콘 이미지 서식 지정입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandRing">AppBarCommand의 아이콘 링입니다.</msg>
  <msg name="WinJS.UI.AppBarCommand_part:appBarCommandLabel">AppBarCommand의 레이블입니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor">새 AppBar 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:element">컨트롤을 호스팅할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor_p:options">새 AppBar 컨트롤에 적용할 속성 및 값의 집합입니다.</msg>
  <msg name="WinJS.UI.AppBar.constructor_returnValue">새 AppBar 컨트롤입니다.</msg>
  <msg name="WinJS.UI.AppBar.placement">AppBar를 디스플레이에 배치합니다. 값은 "top" 또는 "bottom"입니다.</msg>
  <msg name="WinJS.UI.AppBar.layout">AppBar 콘텐츠의 레이아웃을 가져오거나 "명령" 또는 "사용자 지정"으로 설정합니다.</msg>
  <msg name="WinJS.UI.AppBar.sticky">AppBar가 고정되는지 여부를 나타내는 값을 가져오거나 설정합니다. AppBar가 고정되면 true이고, 그렇지 않으면 false입니다.</msg>
  <msg name="WinJS.UI.AppBar.commands">AppBar의 명령을 설정합니다. 이 속성은 AppBarCommand 개체의 배열을 사용할 수 있습니다.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById">이 AppBar에서 지정된 ID를 사용하여 명령을 검색합니다. 둘 이상의 명령이 발견되면 이 메서드에서 모든 명령을 반환합니다.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_p:id">ID를 반환하는 명령입니다.</msg>
  <msg name="WinJS.UI.AppBar.getCommandById_returnValue">명령이 발견되고 두 개 이상의 동일한 ID가 있으면 명령 배열이고, 그렇지 않고 발견된 명령이 없으면 null입니다.</msg>
  <msg name="WinJS.UI.AppBar.showCommands">AppBar의 지정된 명령어를 표시합니다.</msg>
  <msg name="WinJS.UI.AppBar.showCommands_p:commands">표시할 명령의 배열입니다. 요소 배열은 AppBarCommand 개체이거나 명령의 문자열 식별자(ID)일 수 있습니다.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands">AppBar의 지정된 명령어를 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar.hideCommands_p:commands">필수적 요소로서, 문자열, DOM 요소 또는 WinJS 개체는 명령을 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar.showOnlyCommands">지정된 명령을 표시하고 AppBar에 있는 다른 모든 것을 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar.show">다른 상태에 관계 없이 숨겨진 경우 AppBar를 보여줍니다.</msg>
  <msg name="WinJS.UI.AppBar.hide">AppBar를 숨깁니다.</msg>
  <msg name="WinJS.UI.AppBar">명령을 표시하는 응용 프로그램 도구 모음을 나타냅니다.</msg>
  <msg name="WinJS.UI.AppBar_e:beforeshow">AppBar를 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:aftershow">AppBar가 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:beforehide">AppBar를 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_e:afterhide">AppBar가 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.AppBar_part:appbar">AppBar 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.AppBar_part:appBarCustom">사용자 지정 레이아웃 AppBar의 스타일입니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor">새 플라이아웃 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor_p:options">새 플라이아웃에 적용할 속성 및 값의 집합입니다.</msg>
  <msg name="WinJS.UI.Flyout.constructor_returnValue">새 플라이아웃 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Flyout.anchor">플라이아웃 컨트롤의 앵커를 가져오거나 설정합니다. 앵커 요소는 플라이아웃이 시작되고 상대적 배치의 기준이 되는 HTML 요소입니다. (show 메서드를 표시할 경우 이 설정을 재정의할 수 있습니다.)</msg>
  <msg name="WinJS.UI.Flyout.placement">이 플라이아웃의 기본 배치를 가져오거나 설정합니다. (show 메서드를 표시할 경우 이 설정을 재정의할 수 있습니다.)</msg>
  <msg name="WinJS.UI.Flyout.alignment">이 플라이아웃의 기본 맞춤을 가져오거나 설정합니다. (show 메서드를 표시할 경우 이 설정을 재정의할 수 있습니다.)</msg>
  <msg name="WinJS.UI.Flyout.show">숨겨진 경우 다른 상태와 상관없이 플라이아웃을 표시합니다.</msg>
  <msg name="WinJS.UI.Flyout.show_p:anchor">DOM 요소나 DOM 요소의 플라이 아웃, 이 시간에 대한 앵커 속성을 재정의합니다.</msg>
  <msg name="WinJS.UI.Flyout.show_p:placement">플라이 아웃을 앵커에 다음과 같이 배치합니다: 'auto'(기본값), 'top', 'bottom', 'left', 또는 'right'입니다. 배치 속성만이 쇼에서 이 매개 변수를 재정의합니다.</msg>
  <msg name="WinJS.UI.Flyout.show:alignment">'top' 또는 'bottom' 배치에 대해 플라이 아웃을 앵커 위쪽에 배치는 'center'(기본값), 'left' 또는 'right'입니다. 맞춤 속성만이 쇼에서 이 매개 변수를 재정의합니다.</msg>
  <msg name="WinJS.UI.Flyout.hide">표시된 경우 다른 상태와 상관없이 플라이아웃을 숨깁니다.</msg>
  <msg name="WinJS.UI.Flyout">정보를 제공하거나 사용자 상호 작용이 필요한 간단한 UI를 표시합니다. 대화 상자와 달리, 플라이아웃은 클릭하거나 누를 때 해제를 켜지 않을 수 있습니다.</msg>
  <msg name="WinJS.UI.Flyout_name">플라이 아웃</msg>
  <msg name="WinJS.UI.Flyout_e:beforeshow">플라이 아웃을 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_e:aftershow">플라이 아웃이 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_e:beforehide">플라이 아웃을 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_e:afterhide">플라이 아웃이 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Flyout_part:flyout">플라이아웃 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.Menu.constructor">새 메뉴 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.Menu.constructor_p:options">컨트롤에 적용할 속성 및 값의 집합입니다.</msg>
  <msg name="WinJS.UI.Menu.constructor_returnValue">새 메뉴 컨트롤입니다.</msg>
  <msg name="WinJS.UI.Menu.commands">메뉴에 표시되는 MenuCommand 개체를 설정합니다. 이 항목은 단일 MenuCommand 또는 MenuCommand 개체의 배열로 설정할 수 있습니다.</msg>
  <msg name="WinJS.UI.Menu.getCommandById">메뉴의 지정된 ID를 사용하여 명령을 검색합니다. 둘 이상의 명령이 있으면 모두 반환됩니다.</msg>
  <msg name="WinJS.UI.Menu.getCommandById_p:id">검색할 명령의 ID입니다.</msg>
  <msg name="WinJS.UI.Menu.showCommands">메뉴의 지정된 명령을 표시합니다.</msg>
  <msg name="WinJS.UI.Menu.showCommands_p:commands">표시할 명령입니다. 요소 배열은 메뉴 개체이거나 명령의 문자열 식별자(ID)일 수 있습니다.</msg>
  <msg name="WinJS.UI.Menu.hideCommands">메뉴를 숨깁니다.</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands">메뉴의 지정된 명령을 표시하고 나머지 명령을 모두 숨깁니다.</msg>
  <msg name="WinJS.UI.Menu.showOnlyCommands_p:commands">표시할 명령입니다. 요소 배열은 MenuCommand 개체이거나 명령의 문자열 식별자(ID)일 수 있습니다.</msg>
  <msg name="WinJS.UI.Menu.show">숨겨진 경우 다른 상태와 상관없이 메뉴를 표시합니다.</msg>
  <msg name="WinJS.UI.Menu.show_p:anchor">메뉴를 고정하기 위한 DOM 요소 또는 DOM 요소의 ID입니다. 이 매개 변수는 이 메서드 호출에 대해서만 앵커 속성을 재정의합니다.</msg>
  <msg name="WinJS.UI.Menu.show_p:placement">메뉴를 앵커에 다음과 같이 배치합니다: 'auto'(기본값), 'top', 'bottom', 'left', 또는 'right'입니다. 이 매개 변수는 이 메서드 호출에 대해서만 배치 속성을 재정의합니다.</msg>
  <msg name="WinJS.UI.Menu.show_p:alignment">'top' 또는 'bottom' 배치에 대해 메뉴를 앵커 위쪽에 배치는 'center'(기본값), 'left' 또는 'right'입니다. 이 매개 변수는 이 메서드 호출에 대해서만 정렬 속성을 재정의합니다.</msg>
  <msg name="WinJS.UI.Menu">명령 표시를 위한 메뉴 플라이아웃을 나타냅니다.</msg>
  <msg name="WinJS.UI.Menu_name">메뉴</msg>
  <msg name="WinJS.UI.Menu_e:beforeshow">메뉴를 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_e:aftershow">메뉴가 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_e:beforehide">메뉴를 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_e:afterhide">메뉴를 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.Menu_part:menu">메뉴 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor">새 MenuCommand 개체를 만듭니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_p:options">새 MenuCommand에 적용할 속성 및 값의 집합입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.constructor_returnValue">MenuCommand 컨트롤입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.id">MenuCommand의 ID를 가져옵니다.</msg>
  <msg name="WinJS.UI.MenuCommand.type">MenuCommand의 형식을 가져옵니다. 가능한 값은 "button", "toggle", "flyout" 또는 "separator"입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.label">MenuCommand의 레이블입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.flyout">이 속성은 플라이아웃 형식의 MenuCommand에서 이 명령이 호출하는 WinJS.UI.Flyout을 반환합니다. 이 속성을 설정할 때는 플라이아웃의 문자열 ID, 플라이아웃을 호스팅하는 DOM 개체 또는 플라이아웃 개체 자체로 설정할 수 있습니다.</msg>
  <msg name="WinJS.UI.MenuCommand.selected">설정/해제 단추의 선택 상태를 가져오거나 설정합니다. 설정/해제 단추가 선택되었으면 true이고, 그렇지 않으면 false입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.element">이 MenuCommand를 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.MenuCommand.disabled">MenuCommand를 사용하지 않는지 여부를 나타내는 값을 가져오거나 설정합니다. MenuCommand를 사용하지 않으면 true이고, 그렇지 않으면 false입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.hidden">명령이 현재 숨겨져 있는지 확인합니다.</msg>
  <msg name="WinJS.UI.MenuCommand.extraClass">호스트 DOM 요소에 적용되는 추가 CSS 클래스를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:type">등록할 이벤트의 이름입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:listener">이벤트를 처리하는 함수입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.addEventListener_p:useCapture">캡처 단계에 대한 이벤트 처리기를 등록하려면 true로 설정합니다. 그렇지 않고 버블링 단계에 대해 등록하려면 false로 설정합니다.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener">addEventListener 메서드가 등록한 지정 이벤트 처리기를 제거합니다.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:type">제거할 이벤트의 이름입니다.</msg>
  <msg name="WinJS.UI.MenuCommand.removeEventListener_p:useCapture">캡처 단계 이벤트 처리기를 제거하려면 true로 설정합니다. 버블링 단계 이벤트 처리기를 제거하려면 false로 설정합니다.</msg>
  <msg name="WinJS.UI.MenuCommand">메뉴에 표시할 명령을 나타냅니다. MenuCommand 개체는 메뉴 컨트롤에 대한 단추, 설정/해제 단추, 플라이아웃 단추 또는 구분 기호 기능을 제공합니다.</msg>
  <msg name="WinJS.UI.MenuCommand_name">MenuCommand 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.SearchBox.constructor">새 SearchBox를 만듭니다.</msg>
  <msg name="WinJS.UI.SearchBox.constructor_p:element">SearchBox를 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.SearchControl.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 querychanged 이벤트에 대한 이벤트 처리기를 제공하고 "onquerychanged"라는 속성을 옵션 개체에 추가한 다음 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.SearchBox.constructor_returnValue">새 SearchBox입니다.</msg>
  <msg name="WinJS.UI.SearchBox.placeholderText">SearchBox의 자리 표시자 텍스트를 가져오거나 설정합니다. 이 텍스트는 입력 상자에 다른 텍스트가 없을 경우 표시됩니다.</msg>
  <msg name="WinJS.UI.SearchBox.queryText">SearchBox의 쿼리 텍스트를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SearchBox.searchHistoryDisabled">SearchBox에서 검색 기록 사용 여부를 나타내는 값을 가져오거나 설정합니다. 기본값은 false입니다.</msg>
  <msg name="WinJS.UI.SearchBox.searchHistoryContext">SearchBox의 검색 기록 컨텍스트를 가져오거나 설정합니다. 검색 기록을 저장하기 위한 보조 키로 검색 기록 컨텍스트 문자열이 사용됩니다. (기본 키는 AppId입니다.) 앱은 검색 기록 컨텍스트 문자열을 사용하여 응용 프로그램 컨텍스트를 기준으로 다른 검색 기록을 저장할 수 있습니다. 이 속성을 설정하지 않을 경우 시스템은 앱의 모든 검색이 동일한 컨텍스트에서 발생하는 것으로 가정합니다. 검색 창에 제안 결과가 표시된 상태에서 이 속성을 업데이트할 경우 사용자가 다음 문자를 입력할 때까지 변경 사항이 적용되지 않습니다.</msg>
  <msg name="WinJS.UI.SearchBox.focusOnKeyboardInput">사용자가 앱 창에 입력할 때 자동으로 포커스를 검색 상자로 이동합니다(기본적으로 꺼져 있음). 이 설정을 사용하는 동안에는 현재 스레드에 입력하는 내용을 가로채서 검색 상자로 리디렉션합니다. 텍스트를 입력할 때만 검색 상자로 포커스가 이동합니다. 호출자는 계속해서 텍스트가 아닌 키(화살표, 탭 등)를 받습니다. 이 경우 WIN/CTRL/ALT 키 조합에 영향을 미치지 않습니다(Ctrl+V 붙여넣기 제외). 클라이언트에서 상자로 포커스를 이동하는 동작 이상이 필요할 경우(컨트롤 표시 등) 이벤트를 처리해야 합니다. 이 설정을 사용할 경우에는 사용자가 다른 편집 필드로 포커스를 이동할 때 앱이 그러한 동작을 비활성화해야 합니다.</msg>
  <msg name="WinJS.UI.SearchBox.chooseSuggestionOnEnter">사용자가 Enter를 누를 때 첫 번째 제안을 선택할지 여부를 가져오거나 설정합니다. true로 설정된 경우 사용자가 검색 상자에 입력하면 첫 번째 검색 제안에 포커스 사각형이 그려집니다(검색 제안이 있고 진행 중인 다른 IME 컴퍼지션이 없을 경우). Enter를 누르면 포커스가 있는 제안을 클릭한 것과 동일한 방식으로 동작하며, 아래쪽 화살표 키를 누르면 실제 포커스가 두 번째 제안으로 이동하고 위쪽 화살표를 누르면 포커스가 제거됩니다.</msg>
  <msg name="WinJS.UI.SearchBox.disabled">SearchBox의 사용 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.SearchBox.SetLocalContentSuggestionSettings">로컬 파일을 기준으로 제안이 검색 창에 자동으로 표시되는지 여부를 지정하고 시스템이 사용하는 검색 기준 및 제안 필터링 기준을 정의합니다.</msg>
  <msg name="WinJS.UI.SearchBox.setLocalContentSuggestionSettings_p:settings">로컬 콘텐츠 제안에 대한 새 설정입니다.</msg>
  <msg name="WinJS.UI.SearchBox">사용자가 검색 쿼리를 수행하고 제안 사항을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.SearchBox_e:querychanged">사용자 또는 앱이 쿼리 텍스트를 변경할 때 발생합니다.</msg>
  <msg name="WinJS.UI.SearchBox_e:querysubmitted">사용자가 검색 문자를 클릭하거나 Enter 키를 누를 때 발생합니다.</msg>
  <msg name="WinJS.UI.SearchBox_e:resultsuggestionchosen">사용자가 표시된 제안 중 하나를 클릭할 때 발생합니다.</msg>
  <msg name="WinJS.UI.SearchBox_e:suggestionsrequested">시스템이 이 앱에서 검색 제안을 요청하는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.SearchBox_e:receivingfocusonkeyboardinput">앱이 포커스를 검색 상자로 자동으로 리디렉션할 때 발생합니다. 이 이벤트는 focusOnKeyboardInput 속성이 true로 설정된 경우에만 발생할 수 있습니다.</msg>
  <msg name="WinJS.UI.SearchBox:search">전체 검색 상자 컨트롤의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Input">쿼리 입력 상자의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Button">검색 단추의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Flyout">결과 제안 플라이아웃의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Suggestion_Result">결과 형식 제안의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Suggestion_Query">쿼리 형식 제안의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Suggestion_Separator">구분 기호 형식 제안의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SearchBox_part:Suggestion_Selected">현재 선택한 제안의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor">새 SettingsFlyout 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_p:options">새 SettingsFlyout에 적용할 속성 및 값의 집합입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.constructor_returnValue">새 SettingsFlyout 컨트롤입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.width">SettingsFlyout의 너비, "narrow" 또는 "wide"입니다. 이후 버전에서는 SettingsFlyout.width가 수정되거나 사용하지 못할 수 있습니다. 대신 .win-settingsflyout 클래스를 사용하여 요소에서 CSS 너비 속성의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.settingsCommandId">SettingsFlyout 컨트롤에 대한 설정 명령 ID를 정의합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show">숨겨진 경우 SettingsFlyout을 보여줍니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.hide">다른 상태에 관계 없이 표시되는 경우 SettingsFlyout을 숨깁니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout">사용자가 현재 앱에 영향을 미치는 설정을 컨텍스트 안에서 빠르게 액세스할 수 있습니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_name">설정 플라이 아웃</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforeshow">SettingsFlyout을 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:aftershow">SettingsFlyout이 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:beforehide">SettingsFlyout을 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_e:afterhide">SettingsFlyout이 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout_part:settings">SettingsFlyout 컨트롤 자체입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor">새 ItemContainer 컨트롤을 만듭니다.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:element">ItemContainer 컨트롤을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 selectionchanging 이벤트 처리기를 제공하고 "onselectionchanging"이라는 속성을 옵션 개체에 추가한 다음 이벤트 처리기에 해당 값을 설정합니다.</msg>
  <msg name="WinJS.UI.ItemContainer.constructor_returnValue">새 ItemContainer 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.element">itemContainer 컨트롤을 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.ItemContainer.draggable">항목을 끌 수 있는지 여부를 지정하는 값을 가져오거나 설정합니다. 기본값은 false입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.selected">항목이 선택되었는지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.ItemContainer.swipeOrientation">ItemContainer 컨트롤의 살짝 밀기 방향을 가져오거나 설정합니다. 기본값은 "vertical"입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.tapBehavior">사용자가 항목을 누르거나 클릭할 때 ItemContainer 컨트롤의 반응을 가져오거나 설정합니다. 누르거나 클릭하여 항목을 호출할 수 있고, 선택 및 호출하거나 영향을 주지 않을 수 있습니다. 가능한 값은 "toggleSelect", "invokeOnly" 및 "none"입니다. 기본값은 "invokeOnly"입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.swipeBehavior">ItemContainer 컨트롤이 살짝 밀기 상호 작용에 반응하는 방식을 가져오거나 설정합니다. 살짝 밀기 제스처는 항목을 선택할 수도 있고 현재 선택 영역에 영향을 주지 않을 수도 있습니다. 가능한 값은 "select", "none"입니다. 기본값은 "select"입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.selectionDisabled">항목 선택을 사용하지 않을지 여부를 가져오거나 설정합니다. 기본값은 false입니다.</msg>
  <msg name="WinJS.UI.ItemContainer.forceLayout">ItemContainer 컨트롤이 레이아웃을 강제로 업데이트합니다. 컨트롤이 초기화된 후 앱 읽기 방향이 변경되는 경우 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI.ItemContainer">누르거나 살짝 밀거나 끌 수 있는 항목을 정의합니다.</msg>
  <msg name="WinJS.UI.ItemContainer_e:invoked">사용자가 이벤트를 누르거나 클릭할 때 발생합니다.</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanging">항목을 선택 또는 선택 취소하기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.ItemContainer_e:selectionchanged">항목을 선택 또는 선택 취소한 후에 발생합니다.</msg>
  <msg name="WinJS.UI.ItemContainer_part:itemcontainer">선택 항목 컨트롤의 기본 컨테이너입니다.</msg>
  <msg name="WinJS.UI.ItemContainer_part:focusedoutline">주 컨테이너에 키보드 포커스가 있을 경우 윤곽선을 표시하는 데 사용합니다.</msg>
  <msg name="WinJS.UI.NavBar.constructor">새 NavBar를 만듭니다.</msg>
  <msg name="WinJS.UI.NavBar.constructor_p:element">새 NavBar 컨트롤을 호스팅할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.NavBar.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다.</msg>
  <msg name="WinJS.UI.NavBar.constructor_returnValue">새 NavBar 컨트롤입니다.</msg>
  <msg name="WinJS.UI.NavBar.layout">NavBar 콘텐츠의 레이아웃입니다.</msg>
  <msg name="WinJS.UI.NavBar">사용자가 표시하거나 숨길 수 있는 도구 모음에서 탐색 명령을 표시합니다.</msg>
  <msg name="WinJS.UI.NavBar_e:beforeshow">NavBar를 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.NavBar_e:aftershow">NavBar가 완전히 표시되는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.NavBar_e:beforehide">NavBar를 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.NavBar_e:afterhide">NavBar가 완전히 숨겨지는 즉시 발생합니다.</msg>
  <msg name="WinJS.UI.NavBar_e:childrenprocessed">WinJS.UI.processAll 호출에서 NavBar 컨트롤의 자식을 처리한 경우 발생합니다.</msg>
  <msg name="WinJS.UI.NavBar_part:navbar">전체 NavBar의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.constructor">새 NavBarContainer를 만듭니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.constructor_p:element">새 NavBarContainer 컨트롤을 호스팅할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.constructor_returnValue">새 NavBarContainer입니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.element">NavBarContainer를 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.template">NavBarContainer 내에서 각 항목의 HTML을 정의하는 템플릿 또는 사용자 지정 렌더링 함수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.data">표시할 항목과 함께 NavBarContainer 컨트롤을 제공하는 WinJS.Binding.List를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.maxRows">추가 페이지에 항목을 배치하기 전에 사용할 수 있는 행 수를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.layout">NavBarContainer를 가로 레이아웃으로 표시할지 아니면 세로 레이아웃으로 표시할지를 지정하는 값을 가져오거나 설정합니다. 기본값은 "horizontal"입니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.currentIndex">현재 NavBarCommand의 인덱스를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.fixedSize">여러 페이지가 있을 때 자식 NavBarCommand 개체의 너비를 고정해야 하는지 여부를 지정하는 값을 가져오거나 설정합니다. true 값은 NavBarCommand 개체가 고정 너비를 사용함을 나타내며 false 값은 동적 너비를 사용함을 나타냅니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.forceLayout">NavBarContainer가 스크롤 위치를 강제로 업데이트하도록 하고 내부에 보류 중인 측정이 있으면 다시 측정합니다. style.display 속성을 "없음"으로 설정한 후 NavBarContainer를 다시 표시할 때 이 함수를 사용합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer">NavBar에 NavBarCommand 개체 그룹을 포함합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_e:invoked">NavBarCommand가 호출될 때 발생합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_e:splittoggle">NavBarCommand의 분할 단추가 설정/해제될 때 발생합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:navbarcontainer">NavBarContainer 컨트롤의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:pageindicators">NavBarContainer의 페이지 표시 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:indicator">각 페이지의 페이지 표시 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:currentindicator">현재 페이지의 표시 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:items">NavBarContainer 항목을 포함하는 영역의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:navigationArrow">왼쪽 및 오른쪽 탐색 화살표의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:leftNavigationArrow">왼쪽 탐색 화살표의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer_part:rightNavigationArrow">오른쪽 탐색 화살표의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.constructor">새 NavBarCommand를 만듭니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.constructor_p:element">새 NavBarCommand 컨트롤을 호스팅할 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.constructor_returnValue">새 NavBarCommand입니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.element">NavBarCommand를 호스팅하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.label">NavBarCommand의 레이블을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.tooltip">NavBarCommand의 도구 설명을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.icon">NavBarCommand의 아이콘을 가져오거나 설정합니다. 이 값은 AppBarIcon 열거형 값 또는 사용자 지정 PNG 파일 경로 중 하나입니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.location">명령의 대상 위치를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.state">탐색에 사용되는 상태를 가져오거나 설정합니다. 명령이 이 개체를 WinJS.Navigation.navigate 함수로 전달합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.splitButton">NavBarCommand에 분할 단추가 있는지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand.splitOpened">분할 단추가 열렸는지 여부를 지정하는 값을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand">NavBarContainer의 탐색 명령을 나타냅니다.</msg>
  <msg name="WinJS.UI.NavBarCommand_part:navbarcommand">전체 NavBarCommand 컨트롤의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand_part:button">NavBarCommand의 기본 단추 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand_part:splitbutton">NavBarCommand의 분할 단추 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand_part:icon">NavBarCommand의 기본 단추 아이콘의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.NavBarCommand_part:label">NavBarCommand의 기본 단추 레이블의 스타일을 지정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor">새 도구 설명을 만듭니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:element">도구 설명을 호스팅하는 DOM 요소입니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_p:options">새 컨트롤에 적용하려면 개체에 하나 이상의 속성/값 쌍이 들어있어야 합니다. 각 옵션 개체의 속성은 컨트롤의 속성 또는 이벤트 중 하나에 해당합니다. 이벤트 이름은 "on"으로 시작해야 합니다. 예를 들어 열린 이벤트에 대한 이벤트 처리기를 제공하고 "onopened" 라는 속성을 옵션 개체에 추가하고 이벤트 처리기에 해당 값을 설정합니다. 이 매개 변수는 선택적 요소입니다.</msg>
  <msg name="WinJS.UI.Tooltip.constructor_returnValue">새 도구 설명입니다.</msg>
  <msg name="WinJS.UI.Tooltip.innerHTML">도구 설명의 HTML 내용을 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.element">도구 설명을 호스팅하는 DOM 요소를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.contentElement">도구 설명에 대한 내용인 DOM 요소를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.placement">해당 대상 요소를 기준으로 도구 설명의 위치를 가져오거나 설정합니다: 위쪽, 아래쪽, 왼쪽 또는 오른쪽.</msg>
  <msg name="WinJS.UI.Tooltip.infotip">도구 설명이 많은 정보를 포함하며 일반적인 도구 설명 이상으로 표시되어야 하는 정보 도구인지 여부를 지정하는 값을 가져오거나 설정합니다. 기본값은 false입니다.</msg>
  <msg name="WinJS.UI.Tooltip.extraClass">도구 설명 컨트롤의 호스트 요소에 적용할 CSS 클래스를 가져오거나 설정합니다.</msg>
  <msg name="WinJS.UI.Tooltip.dispose">이 도구 설명을 삭제합니다.</msg>
  <msg name="WinJS.UI.Tooltip.open">도구 설명을 표시합니다.</msg>
  <msg name="WinJS.UI.Tooltip.open_p:type">표시할 도구 설명 형식입니다: "touch", "mouseover", "mousedown" 또는 "keyboard". 기본값은 "mousedown"입니다.</msg>
  <msg name="WinJS.UI.Tooltip.close">도구 설명을 숨깁니다.</msg>
  <msg name="WinJS.UI.Tooltip">이미지 및 서식을 포함하는 도구 설명을 표시합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeopen">도구 설명에 표시될 때 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:opened">도구 설명에 표시되는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:beforeclose">도구 설명에 숨겨질 때 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:close">도구 설명에 숨겨지는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip_e:tooltip">전체 도구 설명 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor">ViewBox 컨트롤의 새 인스턴스를 초기화합니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:element">배율 상자의 기능을 하는 DOM 요소입니다. 이 요소는 100%의 너비와 높이가 할당을 채웁니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_p:options">ViewBox 컨트롤에 처음 적용할 옵션의 집합입니다.</msg>
  <msg name="WinJS.UI.ViewBox.constructor_returnValue">생성된 ViewBox 컨트롤입니다.</msg>
  <msg name="WinJS.UI.ViewBox.element">배율 상자의 기능을 하는 DOM 요소를 가져옵니다.</msg>
  <msg name="WinJS.UI.ViewBox.dispose">이 ViewBox를 삭제합니다.</msg>
  <msg name="WinJS.UI.ViewBox">단일 자식 요소 크기를 조정하지 않고 사용 가능한 공간을 채우도록 확장합니다. 이 컨트롤을 반응 자식 요소의 크기 변경 뿐만 아니라 컨테이너의 크기도 변경합니다. 예를 들어, 미디어 쿼리의 가로 세로 비율이 변경될 수 있습니다.</msg>
  <msg name="WinJS.UI.ViewBox_name">보기 상자</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation">확장 애니메이션을 만듭니다. ExpandAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 ExpandAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:revealed">단일 요소 또는 표시된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_p:affected">단일 요소 또는 위치는 확장에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createExpandAnimation_returnValue">ExpandAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation">축소 애니메이션을 만듭니다. CollapseAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 CollapseAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:hidden">단일 요소 또는 보기에서 제거되는 요소의 컬렉션입니다. 애니메이션이 완료되면 응용 프로그램 요소 숨기기 문서에서 제거해야 합니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_p:affected">단일 요소 또는 위치는 축소에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createCollapseAnimation_returnValue">CollapseAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation">재배치 애니메이션을 만듭니다. RepositionAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 RepositionAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_p:element">단일 요소 또는 재배치된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createRepositionAnimation_returnValue">RepositionAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.fadeIn">페이드 인 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_p:element">단일 요소 또는 컬렉션의 요소를 페이드 인합니다. 애니메이션의 끝에 불투명도 요소 1입니다.</msg>
  <msg name="WinJS.UI.Animation.fadeIn_returnValue">애니메이션이 완료되면 완료된 약속 개체입니다.</msg>
  <msg name="WinJS.UI.Animation.fadeOut">페이드 아웃 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.fadeOut_p:element">단일 요소 또는 페이드 아웃할 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation">목록에 추가하는 것에 대한 애니메이션을 만듭니다. AddToListAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 AddToListAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:added">단일 요소 또는 추가된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_p:affected">단일 요소 또는 위치는 추가에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToListAnimation_returnValue">AddToListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation">목록에서 삭제하는 애니메이션을 만듭니다. DeleteFromListAnimation 개체를 만든 후 문서를 수정하여 삭제를 반영하고 DeleteFromListAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:deleted">단일 요소 또는 삭제된 요소 컬렉션입니다. 애니메이션이 완료되면 응용 프로그램 요소 숨기기 문서에서 제거해야 합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_p:remaining">단일 요소 또는 위치는 삭제에 의해 영향을 받는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromListAnimation_returnValue">DeleteFromListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation">검색 결과 목록에 추가하는 것에 대한 애니메이션을 만듭니다. 이는 AddToListAnimation과 비슷하지만 더 빠릅니다. AddToSearchListAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 AddToSearchListAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createAddToSearchListAnimation_returnValue">AddToSearchListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation">검색 결과 목록에 삭제하는 것에 대한 애니메이션을 만듭니다. 이는 DeleteFromListAnimation과 비슷하지만 더 빠릅니다. DeleteFromSearchAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 DeleteFromSearchAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createDeleteFromSearchListAnimation_returnValue">DeleteFromSearchListAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI">요소 또는 요소 위치를 화면 가장자리에 슬라이드합니다. 이 애니메이션에서 작은 개체는 appbar같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:element">단일 요소 또는 슬라이드된 요소 컬렉션입니다. 요소는 함수를 호출할 때 최종 위치에 있어야 합니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 시작점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 요소 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.showEdgeUI_p:options">애니메이션을 재생하는 데 사용할 메커니즘을 지정할 수 있는 선택적 개체입니다. 기본적으로 css 애니메이션이 사용되지만 { mechanism: "transition" }이 제공된 경우에는 css 전환이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.showPanel">요소 또는 요소 위치를 화면 가장자리에 슬라이드합니다. 이 애니메이션에서 큰 개체는 키보드와 같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.showPanel_returnValue">약속 개체</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI">요소 또는 요소 위치를 화면 가장자리 밖에 슬라이드합니다. 이 애니메이션에서 작은 개체는 appbar같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:element">단일 요소 또는 슬라이드할 요소의 컬렉션입니다. 요소는 함수를 호출할 때 화면 위치에 있어야 합니다.</msg>
  <msg name="WinJS.UI.Animation.hideEdgeUI_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 끝점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 요소 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.hidePanel">요소 또는 요소 위치를 화면 가장자리 밖에 슬라이드합니다. 이 애니메이션에서 큰 개체는 키보드와 같이 설계되었습니다.</msg>
  <msg name="WinJS.UI.Animation.showPopup">요소 또는 요소 스타일의 팝업에 표시됩니다.</msg>
  <msg name="WinJS.UI.Animation.showPopup_p:element">단일 요소 또는 팝업처럼 표시되는 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.hidePopup">팝업 화면에서 제거합니다.</msg>
  <msg name="WinJS.UI.Animation.hidePopup_p:element">단일 요소 또는 팝업처럼 숨겨지는 요소 컬렉션입니다. 애니메이션이 완료되면 응용 프로그램 요소 숨기기 문서에서 제거해야 합니다.</msg>
  <msg name="WinJS.UI.Animation.pointerDown">포인터 다운 애니메이션을 실행합니다. pointerUp 애니메이션을 사용하여 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.pointerDown_p:element">단일 요소 또는 포인터 다운 이벤트에 응답하는 요소의 컬렉션입니다. 애니메이션의 끝에서 포인터 다운 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.pointerUp">포인터 업 애니메이션을 실행합니다. 이 pointerDown 애니메이션 효과가 취소됩니다.</msg>
  <msg name="WinJS.UI.Animation.pointerUp_p:element">단일 요소 또는 포인터 업 이벤트에 응답하는 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart">드래그 시작 애니메이션을 실행합니다. dragSourceEnd 애니메이션을 사용하여 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:dragSource">단일 요소 또는 드래그할 요소의 컬렉션입니다. 애니메이션의 끝에서 드래그 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceStart_p:affected">단일 요소 또는 강조하여 드래그하지 않을 요소 컬렉션입니다. 애니메이션의 끝에서 드래그 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd">드래그 엔드 애니메이션을 실행합니다. 이는 dragSourceStart 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:dragSource">단일 요소 또는 다시는 드래그하지 않는 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 시작점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 dragSource 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.dragSourceEnd_p:affected">단일 요소 또는 강조하여 드래그하지 않을 요소 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.enterContent">입력 내용 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:incoming">단일 요소 또는 들어오는 콘텐츠를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 1입니다.</msg>
  <msg name="WinJS.UI.Animation.enterContent_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 시작점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 들어오는 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.exitContent">끝내기 내용 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:outgoing">단일 요소 또는 나가는 콘텐츠를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.exitContent_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 끝점을 설명하는 오프셋된 개체 배열입니다. 오프셋 개체 수가 나가는 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter">드래그한 개체를 다른 요소 간에 끌어 놓을 수 있음을 나타내는 애니메이션을 실행합니다. dragBetweenLeave 애니메이션을 사용하여 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenEnter_p:target">드래그한 개체를 단일 요소 또는 요소의 컬렉션(일반적으로 2개) 간에 삭제할 수 있습니다. 애니메이션의 끝에서 드래그 간의 상태를 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave">드래그한 개체를 다른 요소 간에 더이상 끌어 놓을 수 없음을 나타내는 애니메이션을 실행합니다. 이는 dragBetweenEnter 애니메이션 효과를 취소합니다.</msg>
  <msg name="WinJS.UI.Animation.dragBetweenLeave_p:target">드래그한 개체를 단일 요소 또는 요소의 컬렉션(일반적으로 2개) 간에 더이상 삭제할 수 없습니다. 애니메이션의 끝에서 요소의 속성이 dragSourceStart 상태로 설정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect">마우스 포인터를 놓으면 스와이프 선택한 개체를 다시 위치로 밀고 선택 표시가 표시됩니다.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selected">단일 요소 또는 선택할 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeSelect_p:selection">단일 요소 또는 선택 표시인 컬렉션의 요소입니다.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect">마우스 포인터를 놓으면 스와이프 선택 취소한 개체를 다시 위치로 밀고 선택 표시를 숨깁니다.</msg>
  <msg name="WinJS.UI.Animation.swipeDeselect_p:deselected">단일 요소 또는 선택 취소할 요소의 컬렉션입니다. 애니메이션의 끝에는 요소의 속성이 정상으로 반환되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal">한 번의 통과로 인해 개체를 나타내거나 위치로 다시 스와이프 선택한 개체를 표시한 후 슬라이드합니다.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:target">단일 요소 또는 선택할 요소의 컬렉션입니다. 애니메이션의 끝에서 지정된 오프셋을 반영하는 요소의 속성이 수정되었습니다.</msg>
  <msg name="WinJS.UI.Animation.swipeReveal_p:offset">선택적 오프셋 개체나 컬렉션 애니메이션의 끝점을 설명하는 오프셋된 개체 배열입니다. 위치에 개체를 다시 이동하면 오프셋은 {top: "0px" left: "0px" }이어야 합니다. 오프셋 개체 수가 요소 매개 변수의 길이보다 작으면 마지막 값은 나머지 모든 요소에 대해 반복됩니다. 이 매개 변수가 누락된 경우 기본값이 사용됩니다. 기본값은 표시하는 동작을 설명합니다.</msg>
  <msg name="WinJS.UI.Animation.enterPage">enterPage 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.enterPage_p:element">단일 요소 또는 들어오는 페이지를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 1입니다.</msg>
  <msg name="WinJS.UI.Animation.exitPage">exitPage 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.exitPage_p:outgoing">단일 요소 또는 나가는 페이지를 표현하는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.crossFade">crossFade 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:incoming">단일 들어오는 요소 또는 들어오는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 1입니다.</msg>
  <msg name="WinJS.UI.Animation.crossFade_p:outgoing">단일 나가는 요소 또는 나가는 요소의 컬렉션입니다. 애니메이션이 끝날 때 요소의 불투명도는 0입니다.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation">피킹 애니메이션을 만듭니다. PeekAnimation 개체를 만든 후 문서를 수정하여 요소를 새 위치로 이동하고 PeekAnimation 개체에 실행 메서드를 호출합니다.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_p:element">단일 요소 또는 피킹에 대해 재배치된 요소 컬렉션입니다.</msg>
  <msg name="WinJS.UI.Animation.createPeekAnimation_returnValue">PeekAnimation 개체의 메서드가 반환 애니메이션이 완료되면 완료하는 약속을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.updateBadge">updateBadge 애니메이션을 실행합니다.</msg>
  <msg name="WinJS.UI.Animation.updateBadge_p:incoming">단일 요소 또는 들어오는 배지를 표현하는 요소의 컬렉션입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor">사용자 지정 데이터 원본의 VirtualizedDataSource 기본 클래스를 초기화합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:itemIndex">IListDataAdapter를 구현하고 있는 VirtualizedDataSource에 데이터를 제공하는 개체입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource._baseDataSourceConstructor_p:options">VirtualizedDataSource에 대한 추가 옵션을 지정하는 속성이 포함된 개체: 요청하는 경우 캐시에 요청하지 않은 항목의 최소 수를 지정하는cacheSize A 번호입니다. 옵션 매개 변수는 선택 사항입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler">IListDataAdapter.setNotificationHandler 메서드에 전달되는 IListDataNotificationHandler의 구현입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll">VirtualizedDataSource는 데이터를 지정하지 않고 일부 데이터가 변경되었음을 알립니다. 일부 데이터 원본이 모든 변경에 대한 이 메서드를 호출하는 것이 실용적이지 않을 수 있으므로 이 호출은 선택 사항입니다. 하지만 주어진 데이터 어댑터가 호출하지 않는 경우 응용 프로그램은 VirtualizedDataSource에서 invalidateAll을 정기적으로 호출하여 데이터를 새로 고침해야 합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.invalidateAll_returnValue">데이터가 완전히 새로 고침되고 모든 변경 알림이 전송되었을 때 완료하는 약속입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.reload">손상으로부터 데이터를 다시 로드하기 수월하기 때문에 목록 데이터 원본에 목록 데이터가 변경되었음을 알립니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.beginNotifications">알림 일괄 처리의 시작을 나타냅니다. 일련의 VirtualizedDataSource 클라이언트로 전송하는 countChanged 및 indexChanged 알림 개수를 최소화하기 위해 다른 알림 호출하기 전에 호출됩니다. endNotifications에 대한 호출과 같이 해야 하고 이는 중첩될 수 없습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted">항목을 삽입하는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:newItem">삽입된 항목입니다. 키 및 데이터 속성(IItem 인터페이스를 구현해야 함)이 있어야 합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:previousKey">삽입 포인터 전에 또는 항목 목록의 시작에 삽입된 경우 null 항목의 키입니다. nextKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:nextKey">삽입 포인터 후에 또는 항목 목록의 끝에 삽입된 경우 null 항목의 키입니다. previousKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.inserted_p:index">삽입된 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed">항목이 변경되었다는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.changed_p:item">항목이 변경되었음을 표현하는 IItem입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved">항목을 이동하는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:item">이동된 항목입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:previousKey">삽입 포인터 전에 또는 항목 목록의 시작에 이동된 경우 null 항목의 키입니다. nextKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:nextKey">삽입 포인터 후에 또는 항목 목록의 끝에 이동된 경우 null 항목의 키입니다. previousKey를 지정한 경우 null일 수 있습니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:oldIndex">이동하기 전 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.moved_p:newIndex">이동한 후 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed">항목을 제거하는 알림이 발생합니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:key">제거된 항목의 키입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.removed_p:index">제거된 항목의 인덱스입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource.ListDataNotificationHandler.endNotifications">beginNotifications에 대한 호출으로 시작된 알림의 시퀀스를 마칩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding">클라이언트가 목록에서 읽을 수 있는 IListBinding 개체를 만들고 이미 읽은 리스트 부분에 영향을 미치는 변경에 대한 알림을 받습니다.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_p:notificationHandler">IListNotificationHandler 인터페이스를 구현하는 개체입니다. 이 매개 변수를 생략하는 경우 변경 알림을 사용할 수 없습니다.</msg>
  <msg name="WinJS.UI.IListDataSource.createListBinding_returnValue">IListBinding 인터페이스를 구현하는 개체입니다.</msg>
  <msg name="WinJS.UI.IListBinding">클라이언트가 목록에서 읽을 수 있는 인터페이스를 만들고 이미 읽은 리스트 부분에 영향을 미치는 변경에 대한 알림을 받습니다. IListBinding은 또한 언제든지 변경할 수 있는 목록을 통해 열거할 수 있습니다.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem">지정된 항목을 현재 항목으로 설정합니다.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_p:item">현재 항목을 만드는 IItem 또는 IItemPromise입니다.</msg>
  <msg name="WinJS.UI.IListBinding.jumpToItem_returnValue">IItemPromise 인터페이스를 구현하고 지정된 항목에 대한 약속으로 사용되는 개체입니다. 지정된 항목의 목록에 없는 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.current">현재 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListBinding.current_returnValue">IItemPromise 인터페이스를 구현하고 현재 항목에 대한 약속으로 사용되는 개체입니다. 커서를 목록 시작 또는 끝으로 이동할 경우 null 값으로 약속을 완료합니다. 현재 항목을 삭제 또는 이동한 경우 약속은 오류를 반환합니다.</msg>
  <msg name="WinJS.UI.IListBinding.previous">현재 항목 앞의 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.previous_returnValue">IItemPromise 인터페이스를 구현하고 이전 항목에 대한 약속으로 사용되는 개체입니다. 커서를 목록 시작 또는 끝으로 이동할 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.next">현재 항목 뒤의 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.next_returnValue">IItemPromise 인터페이스를 구현하고 다음 항목에 대한 약속으로 사용되는 개체입니다. 커서를 목록 끝으로 이동할 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem">지정된 항목 변경 알림을 중지하라는 요청을 만듭니다. 해제 호출 횟수가 IItemPromise.retain 호출 횟수와 일치할 때만 항목이 해제됩니다. 해제 호출이 보관 호출 수를 초과할 수 없습니다. 이 메서드는 IListBinding이 만들 때 IListNotificationHandler를 IListDataSource.createListBinding에 전달하는 경우만 발생합니다.</msg>
  <msg name="WinJS.UI.IListBinding.releaseItem_p:item">IItem 또는 IItemPromise를 해제합니다.</msg>
  <msg name="WinJS.UI.IListBinding.release">리소스를 해제하고 알림을 중지하고 IListBinding이 반환하는 모든 추적된 항목에 대한 해결되지 않은 약속을 취소합니다.</msg>
  <msg name="WinJS.UI.IListBinding.first">목록의 첫 번째 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.first_returnValue">요청된 항목에 대한 약속으로 사용되는 IItemPromise입니다. 목록이 비어있는 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.last">목록의 마지막 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey">지정된 키로 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:key">요청된 항목의 키입니다. 비어있지 않은 문자열이어야 합니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_p:hints">도메인별 힌트의 IListDataAdapter 항목의 위치에 대한 검색 시간을 향상시킬 수 있습니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromKey_returnValue">요청된 항목에 대한 약속으로 사용되는 IItemPromise입니다. 지정된 키와 함께 항목이 목록에 포함되어 있지 않을 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex">지정된 인덱스로 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_p:index">검색할 항목 인덱스인 0보다 크거나 같은 값입니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromIndex_returnValue">요청된 항목에 대한 약속으로 사용되는 IItemPromise입니다. 지정된 인덱스와 함께 항목이 목록에 포함되어 있지 않을 경우 IItemPromise는 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListBinding.fromDescription">지정된 설명으로 항목을 검색하여 현재 항목을 만듭니다.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_p:description">목록 데이터 어댑터에서 해석하도록 요청한 항목의 도메인별 설명입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.fromDescription_returnValue">요청된 항목에 대한 약속입니다. 지정된 설명과 함께 항목이 목록에 포함되어 있지 않을 경우 IItemPromise는 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll">데이터 원본을 데이터 어댑터에서 다시 요청하여 캐시된 해당 항목을 새로 고칠 수 있습니다. 데이터 원본은 데이터가 변경되지 않을 경우 알림을 생성합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.invalidateAll_returnValue">데이터가 완전히 새로 고침되고 모든 변경 알림이 전송되었을 때 완료하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.getCount">데이터 원본에 있는 항목 개수를 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey">지정된 키를 가진 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_p:hints">도메인별 힌트의 IListDataAdapter 항목의 위치에 대한 검색 시간을 향상시킬 수 있습니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromKey_returnValue">요청된 항목에 대한 약속입니다. 지정된 키와 함께 항목이 목록에 포함되어 있지 않을 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex">지정된 인덱스에 있는 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_p:index">요청된 항목의 인덱스인 0보다 크거나 같은 값입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromIndex_returnValue">요청된 항목에 대한 약속입니다. 지정된 인덱스와 함께 항목이 목록에 포함되어 있지 않을 경우 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription">지정된 설명을 가진 항목을 검색합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_p:description">IListDataAdapter에 의해 해석되는 검색할 항목을 설명하는 도메인별 정보입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.itemFromDescription_returnValue">요청된 항목에 대한 약속입니다. 지정된 설명과 함께 항목이 목록에 포함되어 있지 않을 경우 약속은 null 값으로 약속을 완료합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.beginEdits">편집 시퀀스가 시작됨을 데이터 원본에 알립니다. 데이터 원본은 IListNotificationHandler.beginNotifications 및 endNotifications를 각 시퀀스 편집당 한 번 호출합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart">데이터 원본 처음에 항목을 추가합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:key">알려진 경우 삽입하는 항목의 키입니다. 그렇지 않으면 null입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_p:data">추가할 항목에 대한 데이터입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtStart_returnValue">추가된 IItem 또는 오류가 발생할 경우의 EditError를 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore">항목을 다른 항목 앞에 삽입합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:data">삽입할 항목에 대한 데이터입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertBefore_p:nextKey">데이터 원본에 있는 항목의 키입니다. 새 데이터가 이 항목 앞에 삽입됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter">항목을 다른 항목 뒤에 삽입합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAfter_p:previousKey">데이터 원본에 있는 항목에 대한 키입니다. 새 항목이 이 항목 뒤에 추가됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.insertAtEnd">데이터 원본 끝에 항목을 추가합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change">지정된 항목의 데이터를 덮어쓰기합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:key">바꿀 항목에 대한 키입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change_p:newData">항목에 대한 새 데이터입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.change_returnValue">업데이트된 IItem 또는 오류가 발생할 경우의 EditError를 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveToStart">데이터 원본 처음에 지정된 항목을 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore">지정된 항목이 다른 항목 앞으로 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveBefore_p:nextKey">데이터 원본에 있는 다른 항목의 키입니다. 키 매개 변수에서 지정된 항목이 이 항목 바로 앞 위치로 이동됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter">항목을 다른 항목 뒤에 이동합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.moveAfter_p:previousKey">데이터 원본에 있는 다른 항목의 키입니다. 키 매개 변수에서 지정된 항목이 이 항목 바로 뒤로 이동됩니다.</msg>
  <msg name="WinJS.UI.IListDataSource.remove">데이터 소스에서 항목을 제거합니다.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_p:key">제거할 항목의 키입니다.</msg>
  <msg name="WinJS.UI.IListDataSource.remove_returnValue">동작에 성공했거나 오류가 발생할 경우 EditError를 포함하지 않는 약속입니다.</msg>
  <msg name="WinJS.UI.VirtualizedDataSource">사용자 지정 데이터 원본을 정의할 때 기본 클래스를 사용합니다. 직접 인스턴스화하지 마십시오.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups">그룹 정보를 다른 데이터 원본에 항목을 추가하는 데이터 원본을 반환합니다. "groups" 속성이 데이터 원본의 속성의 그룹을 열거하는 또 다른 데이터 원본에 평가합니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:listDataSource">개별 항목에서 그룹에 대한 데이터 원본입니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupKey">인수로 목록의 항목을 사용하는 콜백 함수입니다. 함수는 목록에 있는 각 항목을 호출하며 항목에 대한 그룹 키를 문자열로 반환합니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:groupData">인수로 IListDataSource의 항목을 사용하는 콜백 함수입니다. 각 그룹에서 하나의 항목 호출 함수와 해당 그룹의 머리글을 나타내는 개체를 반환합니다.</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_p:options">추가 옵션을 지정 하는 속성을 포함할 수 있는 개체: groupCountEstimate: 수많은 그룹에 대한 초기 예상 값입니다. -1을 지정하는 경우 그룹의 실제 수를 판단할 때까지 발생이 함수를 반환합니다. batchSize: 그룹을 검색할 때 처리하는 동안 반입하는 항목의 수를 지정하는 0보다 큰 수입니다. (지정된 번호 외에 하나의 항목이 이전 일괄 처리에서 항상 포함됩니다.)</msg>
  <msg name="WinJS.UI.computeDataSourceGroups_returnValue">데이터 원본에 있는 항목을 포함하고 "groups" 속성에 추가 그룹 정보를 제공하는 IListDataSource입니다. "groups" 속성 목록에는 서로 다른 그룹을 열거하는 다른 IListDataSource를 반환합니다.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise">ListView는 비동기 작업을 수행하고 있고 이 이벤트 처리기는 약속이 완료될 때까지 완료로 간주해서는 안 됩니다.</msg>
  <msg name="WinJS.UI.BrowseMode.selectionchanging.setPromise_p:promise">대기할 약속입니다.</msg>
  <msg name="WinJS.UI.ListView.ObjectType">IListViewEntity의 형식을 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.ObjectType.item">이 값은 ListView 항목을 나타냅니다.</msg>
  <msg name="WinJS.UI.ListView.ObjectType.groupHeader">이 값은 ListView 그룹 헤더를 나타냅니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode">ListView에 대한 선택 모드를 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.none">항목을 선택할 수 없습니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.single">단일 항목을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.ListView.SelectionMode.multi">여러 항목을 선택할 수 있습니다.</msg>
  <msg name="WinJS.UI.TapBehavior">ListView의 항목 또는 ItemContainer가 누르기 상호 작용에 반응하는 방식을 지정합니다.</msg>
  <msg name="WinJS.UI.TapBehavior.directSelect">항목을 눌러 호출하고 선택합니다. 키보드로 항목을 탐색하면 선택을 변경하여 포커스된 항목만 선택된 항목이 됩니다.</msg>
  <msg name="WinJS.UI.TapBehavior.toggleSelect">항목을 눌러 호출합니다. 항목이 선택된 경우 눌러 선택을 취소합니다. 항목이 선택되지 않은 경우 항목을 눌러 선택합니다. 항목과 키보드 탐색을 선택하거나 호출하지 않습니다.</msg>
  <msg name="WinJS.UI.TapBehavior.invokeOnly">항목을 눌러 호출합니다. 항목과 키보드 탐색을 선택하거나 호출하지 않습니다.</msg>
  <msg name="WinJS.UI.TapBehavior.none">아무 반응이 없습니다.</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior">ListView의 그룹 헤더가 누르기 상호 작용에 반응하는 방식을 지정합니다.</msg>
  <msg name="WinJS.UI.GroupHeaderTapBehavior.invoke">그룹 헤더를 눌러 호출합니다.</msg>
  <msg name="WinJS.UI.SwipeBehavior">사용자가 스와이프 상호 작용을 수행할 때 항목이 선택되었는지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.SwipeBehavior.select">스와이프 상호 작용은 스와이프에서 항목을 선택합니다.</msg>
  <msg name="WinJS.UI.SwipeBehavior.none">스와이프 상호 작용은 선택된 항목을 변경하지 않습니다.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType">ListView 애니메이션이 애니메이션 진입 애니메이션 또는 전환 애니메이션인지 여부를 지정합니다.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.entrance">ListView를 처음 표시할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.ListView.ListViewAnimationType.contentTransition">ListView가 내용을 변경할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemsloaded">Repeater가 새 데이터 집합의 로드를 완료할 때 발생합니다. 이 이벤트는 생성 시 또는 Repeater 컨트롤의 데이터 소스 또는 템플릿을 바꿀 때에만 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemchanging">Repeater 컨트롤 데이터 소스의 항목이 변경된 후, 하지만 해당 DOM 요소가 업데이트되기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemchanged">Repeater 컨트롤 데이터 소스의 항목이 변경되고 해당 DOM 요소가 업데이트된 후에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.oniteminserting">Repeater 컨트롤 데이터 소스에 항목이 추가된 후, 하지만 해당 DOM 요소가 추가되기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.oniteminserted">Repeater 컨트롤 데이터 소스에 항목이 추가되고 해당 DOM 요소가 추가된 후에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemmoving">Repeater 컨트롤 데이터 소스의 항목이 한 인덱스에서 다른 인덱스로 이동한 후, 하지만 해당 DOM 요소가 이동하기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemmoved">Repeater 컨트롤 데이터 소스의 항목이 한 인덱스에서 다른 인덱스로 이동하고 해당 DOM 요소가 이동한 후에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemremoving">Repeater 컨트롤 데이터 소스에서 항목이 제거된 후, 하지만 해당 DOM 요소가 제거되기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemremoved">Repeater 컨트롤 데이터 소스의 항목이 제거되고 해당 DOM 요소가 제거된 후에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloading">목록이 새로 고쳐졌으며 목록의 데이터에 대한 참조는 정확하지 않을 수 있습니다. Repeater 컨트롤의 기본 데이터가 업데이트된 후, 하지만 업데이트된 HTML이 다시 로드되기 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Repeater.onitemsreloaded">Repeater 컨트롤의 기본 데이터가 업데이트되고 업데이트된 HTML이 다시 로드된 후에 발생합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count">선택 영역에 있는 항목 수를 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.count_returnValue">선택 영역에 있는 항목 수입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices">선택 영역에 있는 항목에 대한 인덱스 목록을 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getIndices_returnValue">수 개체 배열로 선택 영역에 있는 항목에 대한 인덱스 목록입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems">선택 영역에 있는 항목을 포함하는 배열을 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getItems_returnValue">요청된 IItem 개체 배열을 포함하는 약속입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges">선택된 항목에 대한 인덱스 범위 배열을 가져옵니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.getRanges_returnValue">선택 영역에 있는 각 인덱스 범위에 대한 ISelectionRange 개체를 포함하는 배열입니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything">선택 영역이 데이터 원본에 있는 모든 항목을 포함하는지 여부를 알려주는 값을 반환합니다.</msg>
  <msg name="WinJS.UI._SelectionManager.prototype.isEverything_returnValue">선택 영역이 데이터 원본에 있는 모든 항목을 포함하는 경우 true입니다. 그렇지 않은 경우 false입니다.</msg>
  <msg name="WinJS.UI.TimePicker.dispose">이 TimePicker를 삭제합니다.</msg>
  <msg name="WinJS.UI.Rating.onpreviewchange">사용자가 새 임시 등급을 선택할 때 발생합니다.</msg>
  <msg name="WinJS.UI.ToggleSwitch.onchange">ToggleSwitch 컨트롤을 켜거나(선택 == true) 또는 끌 때(선택 == false) 발생합니다.</msg>
  <msg name="WinJS.UI.Hub.onheaderinvoked">사용자가 대화형 헤더를 클릭할 때 발생합니다.</msg>
  <msg name="WinJS.UI.Hub.onloadingstatechanged">허브의 loadingState가 변경될 때 발생합니다.</msg>
  <msg name="WinJS.UI.Hub.oncontentanimating">허브가 나타내기, contentTransition, 삽입 또는 제거 애니메이션을 곧 재생하려는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Hub.AnimationType.entrance">허브를 처음 표시할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.Hub.AnimationType.contentTransition">허브가 콘텐츠를 변경할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.Hub.AnimationType.insert">허브에 섹션을 삽입할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.Hub.AnimationType.remove">허브에서 섹션을 제거할 때 애니메이션을 재생합니다.</msg>
  <msg name="WinJS.UI.Hub.LoadingState.loading">허브가 섹션을 로드하는 중입니다.</msg>
  <msg name="WinJS.UI.Hub.LoadingState.complete">모든 섹션이 로드되었고 애니메이션이 완료되었습니다.</msg>
  <msg name="WinJS.UI._Overlay.onbeforeshow">컨트롤을 표시하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI._Overlay.onaftershow">컨트롤을 표시한 직후 발생합니다.</msg>
  <msg name="WinJS.UI._Overlay.onbeforehide">컨트롤을 숨기기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI._Overlay.onafterhide">컨트롤을 숨긴 직후 발생합니다.</msg>
  <msg name="WinJS.UI.AppBarIcon">AppBarIcon 열거형은 AppBarCommand 아이콘 속성에서 사용할 문자 집합을 제공합니다.</msg>
  <msg name="WinJS.UI.SearchBox.onquerysubmitted">사용자가 검색 문자를 클릭하거나 Enter 단추를 누를 때 발생합니다.</msg>
  <msg name="WinJS.UI.SearchBox.onresultsuggestionchosen">사용자가 표시된 제안 중 하나를 클릭할 때 발생합니다.</msg>
  <msg name="WinJS.UI.SearchBox.onsuggestionsrequested">Windows가 이 앱에서 검색 제안을 요청하는 경우 발생합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.show_static">숨겨진 경우 다른 상태와 상관없이 SettingsPane UI를 표시합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings">SettingsFlyout의 일부를 로드합니다. 사용자가 설정 명령을 호출하고 WinJS.Application.onsettings 이벤트가 발생하면 앱이 이 항목을 호출합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.populateSettings_p:e">WinJS.Application.onsettings 이벤트에서 받은 이벤트에 대한 정보가 들어있는 개체입니다. 이 개체의 detail 속성에는 설정 배열 명령에 설정하는 applicationcommands 하위 속성이 들어 있습니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings">설정 요소 식별자(ID) 및 설정 요소가 포함된 페이지의 경로를 사용하여 SettingsFlyout을 표시합니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:id">설정 요소의 ID입니다.</msg>
  <msg name="WinJS.UI.SettingsFlyout.showSettings_p:path">설정 요가 들어 있는 페이지의 경로입니다.</msg>
  <msg name="WinJS.UI.ItemCotrol.oninvoked">항목을 호출할 때 발생합니다. tapBehavior 속성을 사용하여 누르기와 클릭으로 항목을 호출할지 여부를 지정할 수 있습니다.</msg>
  <msg name="WinJS.UI.ItemCotrol.onselectionchanging">항목을 선택 또는 선택 취소하기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.NavBar.onchildrenprocessed">WinJS.UI.processAll 호출에서 NavBar 컨트롤의 자식을 처리한 경우 발생합니다.</msg>
  <msg name="WinJS.UI.NavBarContainer.oninvoked">NavBarCommand가 호출된 경우 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeopen">도구 설명이 나타나기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip.onopened">도구 설명이 표시되는 때 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip.onbeforeclose">도구 설명이 숨겨지기 바로 전에 발생합니다.</msg>
  <msg name="WinJS.UI.Tooltip.onclosed">도구 설명이 더 이상 표시되지 않을 때 발생합니다.</msg>
</messagebundle>